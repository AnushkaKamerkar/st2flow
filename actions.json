[
  {
      "name": "object_contains",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "object": {
              "required": true,
              "type": "object",
              "description": "Object input."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "expected": {
              "required": true,
              "type": "object",
              "description": "Expected object."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Check if an input object contains a given object.",
      "enabled": true,
      "entry_point": "object_contains.py",
      "notify": {},
      "uid": "action:asserts:object_contains",
      "pack": "asserts",
      "ref": "asserts.object_contains",
      "id": "5b87f9820a8b8a0be76769e5",
      "runner_type": "python-script"
  },
  {
      "name": "object_equals",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "object": {
              "required": true,
              "type": "object",
              "description": "Object input."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "expected": {
              "required": true,
              "type": "object",
              "description": "Expected object."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Check if an input object is equal to a given object.",
      "enabled": true,
      "entry_point": "object_equals.py",
      "notify": {},
      "uid": "action:asserts:object_equals",
      "pack": "asserts",
      "ref": "asserts.object_equals",
      "id": "5b87f9820a8b8a0be76769e6",
      "runner_type": "python-script"
  },
  {
      "name": "object_key_number_equals",
      "parameters": {
          "key": {
              "required": true,
              "type": "string",
              "description": "Key in object to pick the value for to test."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "object": {
              "required": true,
              "type": "object",
              "description": "Object input."
          },
          "value": {
              "required": true,
              "type": "number",
              "description": "Expected numerical value."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Check if key in object is equal to a given numerical value.",
      "enabled": true,
      "entry_point": "object_key_number_equals.py",
      "notify": {},
      "uid": "action:asserts:object_key_number_equals",
      "pack": "asserts",
      "ref": "asserts.object_key_number_equals",
      "id": "5b87f9820a8b8a0be76769e7",
      "runner_type": "python-script"
  },
  {
      "name": "object_key_number_greater",
      "parameters": {
          "key": {
              "required": true,
              "type": "string",
              "description": "Key in object to pick the value for to test."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "object": {
              "required": true,
              "type": "object",
              "description": "Object input."
          },
          "value": {
              "required": true,
              "type": "number",
              "description": "Numerical value to test against."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Check if key in object is greater than a given numerical value.",
      "enabled": true,
      "entry_point": "object_key_number_greater.py",
      "notify": {},
      "uid": "action:asserts:object_key_number_greater",
      "pack": "asserts",
      "ref": "asserts.object_key_number_greater",
      "id": "5b87f9820a8b8a0be76769e8",
      "runner_type": "python-script"
  },
  {
      "name": "object_key_string_equals",
      "parameters": {
          "key": {
              "required": true,
              "type": "string",
              "description": "Key in object to pick the value for to test."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "object": {
              "required": true,
              "type": "object",
              "description": "Object input."
          },
          "value": {
              "required": true,
              "type": "string",
              "description": "Expected string value."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Check if key in object is equal to a given string value.",
      "enabled": true,
      "entry_point": "object_key_string_equals.py",
      "notify": {},
      "uid": "action:asserts:object_key_string_equals",
      "pack": "asserts",
      "ref": "asserts.object_key_string_equals",
      "id": "5b87f9820a8b8a0be76769e9",
      "runner_type": "python-script"
  },
  {
      "name": "autoscaling_attach_instances",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "attach_instances",
              "type": "string",
              "immutable": true
          },
          "InstanceIds": {
              "type": "array",
              "description": "One or more instance IDs."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_attach_instances",
      "id": "5b87f8220a8b8a567f589136",
      "uid": "action:aws:autoscaling_attach_instances"
  },
  {
      "name": "autoscaling_attach_load_balancer_target_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "TargetGroupARNs": {
              "required": true,
              "type": "array",
              "description": "The Amazon Resource Names (ARN) of the target groups."
          },
          "action": {
              "default": "attach_load_balancer_target_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_attach_load_balancer_target_groups",
      "id": "5b87f8220a8b8a567f589137",
      "uid": "action:aws:autoscaling_attach_load_balancer_target_groups"
  },
  {
      "name": "autoscaling_attach_load_balancers",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "LoadBalancerNames": {
              "required": true,
              "type": "array",
              "description": "One or more load balancer names."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "attach_load_balancers",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_attach_load_balancers",
      "id": "5b87f8220a8b8a567f589138",
      "uid": "action:aws:autoscaling_attach_load_balancers"
  },
  {
      "name": "autoscaling_complete_lifecycle_action",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "LifecycleHookName": {
              "required": true,
              "type": "string",
              "description": "The name of the lifecycle hook."
          },
          "InstanceId": {
              "type": "string",
              "description": "The ID of the instance."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group for the lifecycle hook."
          },
          "LifecycleActionToken": {
              "type": "string",
              "description": "A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook."
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "LifecycleActionResult": {
              "required": true,
              "type": "string",
              "description": "The action for the group to take. This parameter can be either CONTINUE or ABANDON."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "complete_lifecycle_action",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_complete_lifecycle_action",
      "id": "5b87f8220a8b8a567f589139",
      "uid": "action:aws:autoscaling_complete_lifecycle_action"
  },
  {
      "name": "autoscaling_create_auto_scaling_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "PlacementGroup": {
              "type": "string",
              "description": "The name of the placement group into which you'll launch your instances, if any. For more information, see Placement Groups in the Amazon Elastic Compute Cloud User Guide."
          },
          "VPCZoneIdentifier": {
              "type": "string",
              "description": "A comma-separated list of subnet identifiers for your virtual private cloud (VPC). If you specify subnets and Availability Zones with this call, ensure that the subnets' Availability Zones match the Availability Zones specified. For more information, see Launching Auto Scaling Instances in a VPC in the Auto Scaling User Guide."
          },
          "LoadBalancerNames": {
              "type": "array",
              "description": "One or more Classic load balancers. To specify an Application load balancer, use TargetGroupARNs instead. For more information, see Using a Load Balancer With an Auto Scaling Group in the Auto Scaling User Guide."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Tags": {
              "type": "array",
              "description": "One or more tags. For more information, see Tagging Auto Scaling Groups and Instances in the Auto Scaling User Guide."
          },
          "InstanceId": {
              "type": "string",
              "description": "The ID of the instance used to create a launch configuration for the group. Alternatively, specify a launch configuration instead of an EC2 instance. When you specify an ID of an instance, Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, with the exception of the block device mapping. For more information, see Create an Auto Scaling Group Using an EC2 Instance in the Auto Scaling User Guide."
          },
          "MaxSize": {
              "required": true,
              "type": "integer",
              "description": "The maximum size of the group."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "TerminationPolicies": {
              "type": "array",
              "description": "One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed. For more information, see Controlling Which Instances Auto Scaling Terminates During Scale In in the Auto Scaling User Guide."
          },
          "NewInstancesProtectedFromScaleIn": {
              "type": "boolean",
              "description": "Indicates whether newly launched instances are protected from termination by Auto Scaling when scaling in."
          },
          "HealthCheckType": {
              "type": "string",
              "description": "The service to use for the health checks. The valid values are EC2 and ELB. By default, health checks use Amazon EC2 instance status checks to determine the health of an instance. For more information, see Health Checks in the Auto Scaling User Guide."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          },
          "HealthCheckGracePeriod": {
              "type": "integer",
              "description": "The amount of time, in seconds, that Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default is 0. This parameter is required if you are adding an ELB health check. For more information, see Health Checks in the Auto Scaling User Guide."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group. This name must be unique within the scope of your AWS account."
          },
          "MinSize": {
              "required": true,
              "type": "integer",
              "description": "The minimum size of the group."
          },
          "action": {
              "default": "create_auto_scaling_group",
              "type": "string",
              "immutable": true
          },
          "LaunchConfigurationName": {
              "type": "string",
              "description": "The name of the launch configuration. Alternatively, specify an EC2 instance instead of a launch configuration."
          },
          "TargetGroupARNs": {
              "type": "array",
              "description": "The Amazon Resource Names (ARN) of the target groups."
          },
          "DesiredCapacity": {
              "type": "integer",
              "description": "The number of EC2 instances that should be running in the group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group."
          },
          "DefaultCooldown": {
              "type": "integer",
              "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default is 300. For more information, see Auto Scaling Cooldowns in the Auto Scaling User Guide."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "AvailabilityZones": {
              "type": "array",
              "description": "One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets."
          }
      },
      "ref": "aws.autoscaling_create_auto_scaling_group",
      "id": "5b87f8220a8b8a567f58913a",
      "uid": "action:aws:autoscaling_create_auto_scaling_group"
  },
  {
      "name": "autoscaling_create_launch_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "InstanceMonitoring": {
              "type": "object",
              "description": "Enables detailed monitoring (true) or basic monitoring (false) for the Auto Scaling instances."
          },
          "ClassicLinkVPCSecurityGroups": {
              "type": "array",
              "description": "The IDs of one or more security groups for the specified ClassicLink-enabled VPC. This parameter is required if you specify a ClassicLink-enabled VPC, and is not supported otherwise. For more information, see ClassicLink in the Amazon Elastic Compute Cloud User Guide."
          },
          "EbsOptimized": {
              "type": "boolean",
              "description": "Indicates whether the instance is optimized for Amazon EBS I/O. By default, the instance is not optimized for EBS I/O. The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional usage charges apply. For more information, see Amazon EBS-Optimized Instances in the Amazon Elastic Compute Cloud User Guide."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "RamdiskId": {
              "type": "string",
              "description": "The ID of the RAM disk associated with the AMI."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "InstanceId": {
              "type": "string",
              "description": "The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, with the exception of the block device mapping. To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request. For more information, see Create a Launch Configuration Using an EC2 Instance in the Auto Scaling User Guide."
          },
          "ImageId": {
              "type": "string",
              "description": "The ID of the Amazon Machine Image (AMI) to use to launch your EC2 instances. For more information, see Finding an AMI in the Amazon Elastic Compute Cloud User Guide."
          },
          "KeyName": {
              "type": "string",
              "description": "The name of the key pair. For more information, see Amazon EC2 Key Pairs in the Amazon Elastic Compute Cloud User Guide."
          },
          "SecurityGroups": {
              "type": "array",
              "description": "One or more security groups with which to associate the instances. If your instances are launched in EC2-Classic, you can either specify security group names or the security group IDs. For more information about security groups for EC2-Classic, see Amazon EC2 Security Groups in the Amazon Elastic Compute Cloud User Guide. If your instances are launched into a VPC, specify security group IDs. For more information, see Security Groups for Your VPC in the Amazon Virtual Private Cloud User Guide."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "PlacementTenancy": {
              "type": "string",
              "description": "The tenancy of the instance. An instance with a tenancy of dedicated runs on single-tenant hardware and can only be launched into a VPC. You must set the value of this parameter to dedicated if want to launch Dedicated Instances into a shared tenancy VPC (VPC with instance placement tenancy attribute set to default). If you specify this parameter, be sure to specify at least one subnet when you create your group. For more information, see Launching Auto Scaling Instances in a VPC in the Auto Scaling User Guide. Valid values: default | dedicated "
          },
          "InstanceType": {
              "type": "string",
              "description": "The instance type of the EC2 instance. For information about available instance types, see  Available Instance Types in the Amazon Elastic Compute Cloud User Guide. "
          },
          "SpotPrice": {
              "type": "string",
              "description": "The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot market price. For more information, see Launching Spot Instances in Your Auto Scaling Group in the Auto Scaling User Guide."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          },
          "ClassicLinkVPCId": {
              "type": "string",
              "description": "The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. This parameter is supported only if you are launching EC2-Classic instances. For more information, see ClassicLink in the Amazon Elastic Compute Cloud User Guide."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "BlockDeviceMappings": {
              "type": "array",
              "description": "One or more mappings that specify how block devices are exposed to the instance. For more information, see Block Device Mapping in the Amazon Elastic Compute Cloud User Guide."
          },
          "LaunchConfigurationName": {
              "required": true,
              "type": "string",
              "description": "The name of the launch configuration. This name must be unique within the scope of your AWS account."
          },
          "KernelId": {
              "type": "string",
              "description": "The ID of the kernel associated with the AMI."
          },
          "IamInstanceProfile": {
              "type": "string",
              "description": "The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. EC2 instances launched with an IAM role will automatically have AWS security credentials available. You can use IAM roles with Auto Scaling to automatically enable applications running on your EC2 instances to securely access other AWS resources. For more information, see Launch Auto Scaling Instances with an IAM Role in the Auto Scaling User Guide."
          },
          "AssociatePublicIpAddress": {
              "type": "boolean",
              "description": "Used for groups that launch instances into a virtual private cloud (VPC). Specifies whether to assign a public IP address to each instance. For more information, see Launching Auto Scaling Instances in a VPC in the Auto Scaling User Guide. If you specify this parameter, be sure to specify at least one subnet when you create your group. Default: If the instance is launched into a default subnet, the default is true. If the instance is launched into a nondefault subnet, the default is false. For more information, see Supported Platforms in the Amazon Elastic Compute Cloud User Guide."
          },
          "UserData": {
              "type": "string",
              "description": "The user data to make available to the launched EC2 instances. For more information, see Instance Metadata and User Data in the Amazon Elastic Compute Cloud User Guide."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "create_launch_configuration",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          }
      },
      "ref": "aws.autoscaling_create_launch_configuration",
      "id": "5b87f8220a8b8a567f58913b",
      "uid": "action:aws:autoscaling_create_launch_configuration"
  },
  {
      "name": "autoscaling_create_or_update_tags",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Tags": {
              "required": true,
              "type": "array",
              "description": "One or more tags."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_or_update_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_create_or_update_tags",
      "id": "5b87f8220a8b8a567f58913c",
      "uid": "action:aws:autoscaling_create_or_update_tags"
  },
  {
      "name": "autoscaling_delete_auto_scaling_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group to delete."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ForceDelete": {
              "type": "boolean",
              "description": "Specifies that the group will be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This parameter also deletes any lifecycle actions associated with the group."
          },
          "action": {
              "default": "delete_auto_scaling_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_delete_auto_scaling_group",
      "id": "5b87f8220a8b8a567f58913d",
      "uid": "action:aws:autoscaling_delete_auto_scaling_group"
  },
  {
      "name": "autoscaling_delete_launch_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "LaunchConfigurationName": {
              "required": true,
              "type": "string",
              "description": "The name of the launch configuration."
          },
          "action": {
              "default": "delete_launch_configuration",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_delete_launch_configuration",
      "id": "5b87f8230a8b8a567f58913e",
      "uid": "action:aws:autoscaling_delete_launch_configuration"
  },
  {
      "name": "autoscaling_delete_lifecycle_hook",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group for the lifecycle hook."
          },
          "LifecycleHookName": {
              "required": true,
              "type": "string",
              "description": "The name of the lifecycle hook."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_lifecycle_hook",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_delete_lifecycle_hook",
      "id": "5b87f8230a8b8a567f58913f",
      "uid": "action:aws:autoscaling_delete_lifecycle_hook"
  },
  {
      "name": "autoscaling_delete_notification_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_notification_configuration",
              "type": "string",
              "immutable": true
          },
          "TopicARN": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_delete_notification_configuration",
      "id": "5b87f8230a8b8a567f589140",
      "uid": "action:aws:autoscaling_delete_notification_configuration"
  },
  {
      "name": "autoscaling_delete_policy",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "PolicyName": {
              "required": true,
              "type": "string",
              "description": "The name or Amazon Resource Name (ARN) of the policy."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_policy",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_delete_policy",
      "id": "5b87f8230a8b8a567f589141",
      "uid": "action:aws:autoscaling_delete_policy"
  },
  {
      "name": "autoscaling_delete_scheduled_action",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "ScheduledActionName": {
              "required": true,
              "type": "string",
              "description": "The name of the action to delete."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_scheduled_action",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_delete_scheduled_action",
      "id": "5b87f8230a8b8a567f589142",
      "uid": "action:aws:autoscaling_delete_scheduled_action"
  },
  {
      "name": "autoscaling_delete_tags",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Tags": {
              "required": true,
              "type": "array",
              "description": "One or more tags."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_delete_tags",
      "id": "5b87f8230a8b8a567f589143",
      "uid": "action:aws:autoscaling_delete_tags"
  },
  {
      "name": "autoscaling_describe_auto_scaling_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupNames": {
              "type": "array",
              "description": "The group names. If you omit this parameter, all Auto Scaling groups are described."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "action": {
              "default": "describe_auto_scaling_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_auto_scaling_groups",
      "id": "5b87f8230a8b8a567f589144",
      "uid": "action:aws:autoscaling_describe_auto_scaling_groups"
  },
  {
      "name": "autoscaling_describe_auto_scaling_instances",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "action": {
              "default": "describe_auto_scaling_instances",
              "type": "string",
              "immutable": true
          },
          "InstanceIds": {
              "type": "array",
              "description": "The instances to describe; up to 50 instance IDs. If you omit this parameter, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_auto_scaling_instances",
      "id": "5b87f8230a8b8a567f589145",
      "uid": "action:aws:autoscaling_describe_auto_scaling_instances"
  },
  {
      "name": "autoscaling_describe_launch_configurations",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "LaunchConfigurationNames": {
              "type": "array",
              "description": "The launch configuration names. If you omit this parameter, all launch configurations are described."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call. The default is 100."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "action": {
              "default": "describe_launch_configurations",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_launch_configurations",
      "id": "5b87f8230a8b8a567f589146",
      "uid": "action:aws:autoscaling_describe_launch_configurations"
  },
  {
      "name": "autoscaling_describe_lifecycle_hooks",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "LifecycleHookNames": {
              "type": "array",
              "description": "The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle hooks are described."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_lifecycle_hooks",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_lifecycle_hooks",
      "id": "5b87f8230a8b8a567f589147",
      "uid": "action:aws:autoscaling_describe_lifecycle_hooks"
  },
  {
      "name": "autoscaling_describe_load_balancer_target_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "action": {
              "default": "describe_load_balancer_target_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_load_balancer_target_groups",
      "id": "5b87f8230a8b8a567f589148",
      "uid": "action:aws:autoscaling_describe_load_balancer_target_groups"
  },
  {
      "name": "autoscaling_describe_load_balancers",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "action": {
              "default": "describe_load_balancers",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_load_balancers",
      "id": "5b87f8230a8b8a567f589149",
      "uid": "action:aws:autoscaling_describe_load_balancers"
  },
  {
      "name": "autoscaling_describe_notification_configurations",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupNames": {
              "type": "array",
              "description": "The name of the group."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "action": {
              "default": "describe_notification_configurations",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_notification_configurations",
      "id": "5b87f8230a8b8a567f58914a",
      "uid": "action:aws:autoscaling_describe_notification_configurations"
  },
  {
      "name": "autoscaling_describe_policies",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "PolicyTypes": {
              "type": "array",
              "description": "One or more policy types. Valid values are SimpleScaling and StepScaling."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "AutoScalingGroupName": {
              "type": "string",
              "description": "The name of the group."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to be returned with each call."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "PolicyNames": {
              "type": "array",
              "description": "One or more policy names or policy ARNs to be described. If you omit this parameter, all policy names are described. If an group name is provided, the results are limited to that group. This list is limited to 50 items. If you specify an unknown policy name, it is ignored with no error."
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_policies",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_policies",
      "id": "5b87f8230a8b8a567f58914b",
      "uid": "action:aws:autoscaling_describe_policies"
  },
  {
      "name": "autoscaling_describe_scaling_activities",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "AutoScalingGroupName": {
              "type": "string",
              "description": "The name of the group."
          },
          "ActivityIds": {
              "type": "array",
              "description": "The activity IDs of the desired scaling activities. If you omit this parameter, all activities for the past six weeks are described. If you specify an Auto Scaling group, the results are limited to that group. The list of requested activities cannot contain more than 50 items. If unknown activities are requested, they are ignored with no error."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "action": {
              "default": "describe_scaling_activities",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_scaling_activities",
      "id": "5b87f8230a8b8a567f58914c",
      "uid": "action:aws:autoscaling_describe_scaling_activities"
  },
  {
      "name": "autoscaling_describe_scheduled_actions",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "StartTime": {
              "type": "string",
              "description": "The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored."
          },
          "AutoScalingGroupName": {
              "type": "string",
              "description": "The name of the group."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call."
          },
          "ScheduledActionNames": {
              "type": "array",
              "description": "Describes one or more scheduled actions. If you omit this parameter, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error. You can describe up to a maximum of 50 instances with a single call. If there are more items to return, the call returns a token. To get the next set of items, repeat the call with the returned token."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "EndTime": {
              "type": "string",
              "description": "The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored."
          },
          "action": {
              "default": "describe_scheduled_actions",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_scheduled_actions",
      "id": "5b87f8230a8b8a567f58914d",
      "uid": "action:aws:autoscaling_describe_scheduled_actions"
  },
  {
      "name": "autoscaling_describe_tags",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": "The maximum number of items to return with this call."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "The token for the next set of items to return. (You received this token from a previous call.)"
          },
          "action": {
              "default": "describe_tags",
              "type": "string",
              "immutable": true
          },
          "Filters": {
              "type": "array",
              "description": "A filter used to scope the tags to return."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_describe_tags",
      "id": "5b87f8230a8b8a567f58914e",
      "uid": "action:aws:autoscaling_describe_tags"
  },
  {
      "name": "autoscaling_detach_instances",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ShouldDecrementDesiredCapacity": {
              "required": true,
              "type": "boolean",
              "description": "If True, the Auto Scaling group decrements the desired capacity value by the number of instances detached."
          },
          "action": {
              "default": "detach_instances",
              "type": "string",
              "immutable": true
          },
          "InstanceIds": {
              "type": "array",
              "description": "One or more instance IDs."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_detach_instances",
      "id": "5b87f8230a8b8a567f58914f",
      "uid": "action:aws:autoscaling_detach_instances"
  },
  {
      "name": "autoscaling_detach_load_balancer_target_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "TargetGroupARNs": {
              "required": true,
              "type": "array",
              "description": "The Amazon Resource Names (ARN) of the target groups."
          },
          "action": {
              "default": "detach_load_balancer_target_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_detach_load_balancer_target_groups",
      "id": "5b87f8230a8b8a567f589150",
      "uid": "action:aws:autoscaling_detach_load_balancer_target_groups"
  },
  {
      "name": "autoscaling_detach_load_balancers",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "LoadBalancerNames": {
              "required": true,
              "type": "array",
              "description": "One or more load balancer names."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "detach_load_balancers",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_detach_load_balancers",
      "id": "5b87f8230a8b8a567f589151",
      "uid": "action:aws:autoscaling_detach_load_balancers"
  },
  {
      "name": "autoscaling_disable_metrics_collection",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name or Amazon Resource Name (ARN) of the group."
          },
          "Metrics": {
              "type": "array",
              "description": "One or more of the following metrics. If you omit this parameter, all metrics are disabled.    GroupMinSize     GroupMaxSize     GroupDesiredCapacity     GroupInServiceInstances     GroupPendingInstances     GroupStandbyInstances     GroupTerminatingInstances     GroupTotalInstances   "
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "disable_metrics_collection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_disable_metrics_collection",
      "id": "5b87f8230a8b8a567f589152",
      "uid": "action:aws:autoscaling_disable_metrics_collection"
  },
  {
      "name": "autoscaling_enable_metrics_collection",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name or ARN of the Auto Scaling group."
          },
          "Metrics": {
              "type": "array",
              "description": "One or more of the following metrics. If you omit this parameter, all metrics are enabled.    GroupMinSize     GroupMaxSize     GroupDesiredCapacity     GroupInServiceInstances     GroupPendingInstances     GroupStandbyInstances     GroupTerminatingInstances     GroupTotalInstances   "
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Granularity": {
              "required": true,
              "type": "string",
              "description": "The granularity to associate with the metrics to collect. The only valid value is 1Minute."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "enable_metrics_collection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_enable_metrics_collection",
      "id": "5b87f8230a8b8a567f589153",
      "uid": "action:aws:autoscaling_enable_metrics_collection"
  },
  {
      "name": "autoscaling_enter_standby",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ShouldDecrementDesiredCapacity": {
              "required": true,
              "type": "boolean",
              "description": "Specifies whether the instances moved to Standby mode count as part of the Auto Scaling group's desired capacity. If set, the desired capacity for the Auto Scaling group decrements by the number of instances moved to Standby mode."
          },
          "action": {
              "default": "enter_standby",
              "type": "string",
              "immutable": true
          },
          "InstanceIds": {
              "type": "array",
              "description": "One or more instances to move into Standby mode. You must specify at least one instance ID."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_enter_standby",
      "id": "5b87f8230a8b8a567f589154",
      "uid": "action:aws:autoscaling_enter_standby"
  },
  {
      "name": "autoscaling_execute_policy",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "PolicyName": {
              "required": true,
              "type": "string",
              "description": "The name or ARN of the policy."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "AutoScalingGroupName": {
              "type": "string",
              "description": "The name or Amazon Resource Name (ARN) of the Auto Scaling group."
          },
          "HonorCooldown": {
              "type": "boolean",
              "description": "If this parameter is true, Auto Scaling waits for the cooldown period to complete before executing the policy. Otherwise, Auto Scaling executes the policy without waiting for the cooldown period to complete. This parameter is not supported if the policy type is StepScaling. For more information, see Auto Scaling Cooldowns in the Auto Scaling User Guide."
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "MetricValue": {
              "type": "number",
              "description": "The metric value to compare to BreachThreshold. This enables you to execute a policy of type StepScaling and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59. If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error. This parameter is required if the policy type is StepScaling and not supported otherwise."
          },
          "BreachThreshold": {
              "type": "number",
              "description": "The breach threshold for the alarm. This parameter is required if the policy type is StepScaling and not supported otherwise."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "execute_policy",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_execute_policy",
      "id": "5b87f8230a8b8a567f589155",
      "uid": "action:aws:autoscaling_execute_policy"
  },
  {
      "name": "autoscaling_exit_standby",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "exit_standby",
              "type": "string",
              "immutable": true
          },
          "InstanceIds": {
              "type": "array",
              "description": "One or more instance IDs. You must specify at least one instance ID."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_exit_standby",
      "id": "5b87f8230a8b8a567f589156",
      "uid": "action:aws:autoscaling_exit_standby"
  },
  {
      "name": "autoscaling_put_lifecycle_hook",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "RoleARN": {
              "type": "string",
              "description": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. This parameter is required for new lifecycle hooks, but optional when updating existing hooks."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group to which you want to assign the lifecycle hook."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "LifecycleHookName": {
              "required": true,
              "type": "string",
              "description": "The name of the lifecycle hook."
          },
          "HeartbeatTimeout": {
              "type": "integer",
              "description": "The amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling RecordLifecycleActionHeartbeat. The default is 3600 seconds (1 hour)."
          },
          "NotificationMetadata": {
              "type": "string",
              "description": "Contains additional information that you want to include any time Auto Scaling sends a message to the notification target."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "put_lifecycle_hook",
              "type": "string",
              "immutable": true
          },
          "DefaultResult": {
              "type": "string",
              "description": "Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. This parameter can be either CONTINUE or ABANDON. The default value is ABANDON."
          },
          "NotificationTargetARN": {
              "type": "string",
              "description": "The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This target can be either an SQS queue or an SNS topic. If you specify an empty string, this overrides the current ARN. This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key/value pair format when sending notifications to an Amazon SNS topic. When you specify a notification target, Auto Scaling sends it a test message. Test messages contains the following additional key/value pair: 'Event': 'autoscaling:TEST_NOTIFICATION'."
          },
          "LifecycleTransition": {
              "type": "string",
              "description": "The instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see DescribeLifecycleHookTypes. This parameter is required for new lifecycle hooks, but optional when updating existing hooks."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_put_lifecycle_hook",
      "id": "5b87f8230a8b8a567f589157",
      "uid": "action:aws:autoscaling_put_lifecycle_hook"
  },
  {
      "name": "autoscaling_put_notification_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "NotificationTypes": {
              "required": true,
              "type": "array",
              "description": "The type of event that will cause the notification to be sent. For details about notification types supported by Auto Scaling, see DescribeAutoScalingNotificationTypes."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_notification_configuration",
              "type": "string",
              "immutable": true
          },
          "TopicARN": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_put_notification_configuration",
      "id": "5b87f8230a8b8a567f589158",
      "uid": "action:aws:autoscaling_put_notification_configuration"
  },
  {
      "name": "autoscaling_put_scaling_policy",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "PolicyName": {
              "required": true,
              "type": "string",
              "description": "The name of the policy."
          },
          "EstimatedInstanceWarmup": {
              "type": "integer",
              "description": "The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. The default is to use the value specified for the default cooldown period for the group. This parameter is not supported if the policy type is SimpleScaling."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "MinAdjustmentStep": {
              "type": "integer",
              "description": "Available for backward compatibility. Use MinAdjustmentMagnitude instead."
          },
          "MinAdjustmentMagnitude": {
              "type": "integer",
              "description": "The minimum number of instances to scale. If the value of AdjustmentType is PercentChangeInCapacity, the scaling policy changes the DesiredCapacity of the Auto Scaling group by at least this many instances. Otherwise, the error is ValidationError."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name or ARN of the group."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "Cooldown": {
              "type": "integer",
              "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start. If this parameter is not specified, the default cooldown period for the group applies. This parameter is not supported unless the policy type is SimpleScaling. For more information, see Auto Scaling Cooldowns in the Auto Scaling User Guide."
          },
          "PolicyType": {
              "type": "string",
              "description": "The policy type. Valid values are SimpleScaling and StepScaling. If the policy type is null, the value is treated as SimpleScaling."
          },
          "StepAdjustments": {
              "type": "array",
              "description": "A set of adjustments that enable you to scale based on the size of the alarm breach. This parameter is required if the policy type is StepScaling and not supported otherwise."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AdjustmentType": {
              "required": true,
              "type": "string",
              "description": "The adjustment type. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity. For more information, see Dynamic Scaling in the Auto Scaling User Guide."
          },
          "action": {
              "default": "put_scaling_policy",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "MetricAggregationType": {
              "type": "string",
              "description": "The aggregation type for the CloudWatch metrics. Valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average. This parameter is not supported if the policy type is SimpleScaling."
          },
          "ScalingAdjustment": {
              "type": "integer",
              "description": "The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. This parameter is required if the policy type is SimpleScaling and not supported otherwise."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_put_scaling_policy",
      "id": "5b87f8230a8b8a567f589159",
      "uid": "action:aws:autoscaling_put_scaling_policy"
  },
  {
      "name": "autoscaling_put_scheduled_update_group_action",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "Recurrence": {
              "type": "string",
              "description": "The recurring schedule for this action, in Unix cron syntax format. For more information, see Cron in Wikipedia."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name or Amazon Resource Name (ARN) of the Auto Scaling group."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "MinSize": {
              "type": "integer",
              "description": "The minimum size for the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "MaxSize": {
              "type": "integer",
              "description": "The maximum size for the Auto Scaling group."
          },
          "ScheduledActionName": {
              "required": true,
              "type": "string",
              "description": "The name of this scaling action."
          },
          "StartTime": {
              "type": "string",
              "description": "The time for this action to start, in 'YYYY-MM-DDThh:mm:ssZ' format in UTC/GMT only (for example, 2014-06-01T00:00:00Z). If you specify Recurrence and StartTime, Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence. If you try to schedule your action in the past, Auto Scaling returns an error message."
          },
          "Time": {
              "type": "string",
              "description": "This parameter is deprecated."
          },
          "action": {
              "default": "put_scheduled_update_group_action",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "EndTime": {
              "type": "string",
              "description": "The time for the recurring schedule to end. Auto Scaling does not perform the action after this time."
          },
          "DesiredCapacity": {
              "type": "integer",
              "description": "The number of EC2 instances that should be running in the group."
          }
      },
      "ref": "aws.autoscaling_put_scheduled_update_group_action",
      "id": "5b87f8230a8b8a567f58915a",
      "uid": "action:aws:autoscaling_put_scheduled_update_group_action"
  },
  {
      "name": "autoscaling_record_lifecycle_action_heartbeat",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "LifecycleHookName": {
              "required": true,
              "type": "string",
              "description": "The name of the lifecycle hook."
          },
          "InstanceId": {
              "type": "string",
              "description": "The ID of the instance."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group for the hook."
          },
          "LifecycleActionToken": {
              "type": "string",
              "description": "A token that uniquely identifies a specific lifecycle action associated with an instance. Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook."
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "record_lifecycle_action_heartbeat",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_record_lifecycle_action_heartbeat",
      "id": "5b87f8230a8b8a567f58915b",
      "uid": "action:aws:autoscaling_record_lifecycle_action_heartbeat"
  },
  {
      "name": "autoscaling_resume_processes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name or Amazon Resource Name (ARN) of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "resume_processes",
              "type": "string",
              "immutable": true
          },
          "ScalingProcesses": {
              "type": "array",
              "description": "One or more of the following processes. If you omit this parameter, all processes are specified.    Launch     Terminate     HealthCheck     ReplaceUnhealthy     AZRebalance     AlarmNotification     ScheduledActions     AddToLoadBalancer   "
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_resume_processes",
      "id": "5b87f8230a8b8a567f58915c",
      "uid": "action:aws:autoscaling_resume_processes"
  },
  {
      "name": "autoscaling_set_desired_capacity",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "DesiredCapacity": {
              "required": true,
              "type": "integer",
              "description": "The number of EC2 instances that should be running in the Auto Scaling group."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "HonorCooldown": {
              "type": "boolean",
              "description": "By default, SetDesiredCapacity overrides any cooldown period associated with the Auto Scaling group. Specify True to make Auto Scaling to wait for the cool-down period associated with the Auto Scaling group to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "set_desired_capacity",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_set_desired_capacity",
      "id": "5b87f8240a8b8a567f58915d",
      "uid": "action:aws:autoscaling_set_desired_capacity"
  },
  {
      "name": "autoscaling_set_instance_health",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "ShouldRespectGracePeriod": {
              "type": "boolean",
              "description": "If the Auto Scaling group of the specified instance has a HealthCheckGracePeriod specified for the group, by default, this call will respect the grace period. Set this to False, if you do not want the call to respect the grace period associated with the group. For more information, see the description of the health check grace period for CreateAutoScalingGroup."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "InstanceId": {
              "required": true,
              "type": "string",
              "description": "The ID of the instance."
          },
          "headers": {
              "type": "string"
          },
          "HealthStatus": {
              "required": true,
              "type": "string",
              "description": "The health status of the instance. Set to Healthy if you want the instance to remain in service. Set to Unhealthy if you want the instance to be out of service. Auto Scaling will terminate and replace the unhealthy instance."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "set_instance_health",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_set_instance_health",
      "id": "5b87f8240a8b8a567f58915e",
      "uid": "action:aws:autoscaling_set_instance_health"
  },
  {
      "name": "autoscaling_set_instance_protection",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "ProtectedFromScaleIn": {
              "required": true,
              "type": "boolean",
              "description": "Indicates whether the instance is protected from termination by Auto Scaling when scaling in."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "set_instance_protection",
              "type": "string",
              "immutable": true
          },
          "InstanceIds": {
              "required": true,
              "type": "array",
              "description": "One or more instance IDs."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_set_instance_protection",
      "id": "5b87f8240a8b8a567f58915f",
      "uid": "action:aws:autoscaling_set_instance_protection"
  },
  {
      "name": "autoscaling_suspend_processes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name or Amazon Resource Name (ARN) of the Auto Scaling group."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "suspend_processes",
              "type": "string",
              "immutable": true
          },
          "ScalingProcesses": {
              "type": "array",
              "description": "One or more of the following processes. If you omit this parameter, all processes are specified.    Launch     Terminate     HealthCheck     ReplaceUnhealthy     AZRebalance     AlarmNotification     ScheduledActions     AddToLoadBalancer   "
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_suspend_processes",
      "id": "5b87f8240a8b8a567f589160",
      "uid": "action:aws:autoscaling_suspend_processes"
  },
  {
      "name": "autoscaling_terminate_instance_in_auto_scaling_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "InstanceId": {
              "required": true,
              "type": "string",
              "description": "The ID of the instance."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ShouldDecrementDesiredCapacity": {
              "required": true,
              "type": "boolean",
              "description": "If true, terminating the instance also decrements the size of the Auto Scaling group."
          },
          "action": {
              "default": "terminate_instance_in_auto_scaling_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          }
      },
      "ref": "aws.autoscaling_terminate_instance_in_auto_scaling_group",
      "id": "5b87f8240a8b8a567f589161",
      "uid": "action:aws:autoscaling_terminate_instance_in_auto_scaling_group"
  },
  {
      "name": "autoscaling_update_auto_scaling_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "PlacementGroup": {
              "type": "string",
              "description": "The name of the placement group into which you'll launch your instances, if any. For more information, see Placement Groups in the Amazon Elastic Compute Cloud User Guide."
          },
          "VPCZoneIdentifier": {
              "type": "string",
              "description": "The ID of the subnet, if you are launching into a VPC. You can specify several subnets in a comma-separated list. When you specify VPCZoneIdentifier with AvailabilityZones, ensure that the subnets' Availability Zones match the values you specify for AvailabilityZones. For more information, see Launching Auto Scaling Instances in a VPC in the Auto Scaling User Guide."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "MaxSize": {
              "type": "integer",
              "description": "The maximum size of the Auto Scaling group."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "TerminationPolicies": {
              "type": "array",
              "description": "A standalone termination policy or a list of termination policies used to select the instance to terminate. The policies are executed in the order that they are listed. For more information, see Controlling Which Instances Auto Scaling Terminates During Scale In in the Auto Scaling User Guide."
          },
          "HealthCheckGracePeriod": {
              "type": "integer",
              "description": "The amount of time, in seconds, that Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default is 0. For more information, see Health Checks in the Auto Scaling User Guide."
          },
          "HealthCheckType": {
              "type": "string",
              "description": "The service to use for the health checks. The valid values are EC2 and ELB."
          },
          "cls": {
              "default": "autoscaling",
              "type": "string"
          },
          "AutoScalingGroupName": {
              "required": true,
              "type": "string",
              "description": "The name of the Auto Scaling group."
          },
          "MinSize": {
              "type": "integer",
              "description": "The minimum size of the Auto Scaling group."
          },
          "action": {
              "default": "update_auto_scaling_group",
              "type": "string",
              "immutable": true
          },
          "LaunchConfigurationName": {
              "type": "string",
              "description": "The name of the launch configuration."
          },
          "NewInstancesProtectedFromScaleIn": {
              "type": "boolean",
              "description": "Indicates whether newly launched instances are protected from termination by Auto Scaling when scaling in."
          },
          "DesiredCapacity": {
              "type": "integer",
              "description": "The number of EC2 instances that should be running in the Auto Scaling group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group."
          },
          "DefaultCooldown": {
              "type": "integer",
              "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default is 300. For more information, see Auto Scaling Cooldowns in the Auto Scaling User Guide."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "AvailabilityZones": {
              "type": "array",
              "description": "One or more Availability Zones for the group."
          }
      },
      "ref": "aws.autoscaling_update_auto_scaling_group",
      "id": "5b87f8240a8b8a567f589162",
      "uid": "action:aws:autoscaling_update_auto_scaling_group"
  },
  {
      "name": "cf_build_base_http_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "default": "build_base_http_request",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "host": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "auth_path": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_build_base_http_request",
      "pack": "aws",
      "ref": "aws.cf_build_base_http_request",
      "id": "5b87f8240a8b8a567f589163",
      "runner_type": "python-script"
  },
  {
      "name": "cf_build_complex_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_complex_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_build_complex_list_params",
      "pack": "aws",
      "ref": "aws.cf_build_complex_list_params",
      "id": "5b87f8240a8b8a567f589164",
      "runner_type": "python-script"
  },
  {
      "name": "cf_build_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_build_list_params",
      "pack": "aws",
      "ref": "aws.cf_build_list_params",
      "id": "5b87f8240a8b8a567f589165",
      "runner_type": "python-script"
  },
  {
      "name": "cf_cancel_update_stack",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "cancel_update_stack",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_cancel_update_stack",
      "pack": "aws",
      "ref": "aws.cf_cancel_update_stack",
      "id": "5b87f8240a8b8a567f589166",
      "runner_type": "python-script"
  },
  {
      "name": "cf_close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "close",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_close",
      "pack": "aws",
      "ref": "aws.cf_close",
      "id": "5b87f8240a8b8a567f589167",
      "runner_type": "python-script"
  },
  {
      "name": "cf_create_stack",
      "parameters": {
          "template_body": {
              "type": "string"
          },
          "disable_rollback": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "stack_policy_body": {
              "type": "string"
          },
          "parameters": {
              "type": "array"
          },
          "tags": {
              "type": "string"
          },
          "stack_name": {
              "required": true,
              "type": "string"
          },
          "stack_policy_url": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "capabilities": {
              "type": "array"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "template_url": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_stack",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "on_failure": {
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          },
          "timeout_in_minutes": {
              "type": "string"
          },
          "notification_arns": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_create_stack",
      "pack": "aws",
      "ref": "aws.cf_create_stack",
      "id": "5b87f8240a8b8a567f589168",
      "runner_type": "python-script"
  },
  {
      "name": "cf_delete_stack",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_stack",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_delete_stack",
      "pack": "aws",
      "ref": "aws.cf_delete_stack",
      "id": "5b87f8240a8b8a567f589169",
      "runner_type": "python-script"
  },
  {
      "name": "cf_describe_stack_events",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_stack_events",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_describe_stack_events",
      "pack": "aws",
      "ref": "aws.cf_describe_stack_events",
      "id": "5b87f8240a8b8a567f58916a",
      "runner_type": "python-script"
  },
  {
      "name": "cf_describe_stack_resource",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "required": true,
              "type": "string"
          },
          "logical_resource_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_stack_resource",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_describe_stack_resource",
      "pack": "aws",
      "ref": "aws.cf_describe_stack_resource",
      "id": "5b87f8240a8b8a567f58916b",
      "runner_type": "python-script"
  },
  {
      "name": "cf_describe_stack_resources",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "stack_name_or_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "logical_resource_id": {
              "type": "string"
          },
          "action": {
              "default": "describe_stack_resources",
              "type": "string",
              "immutable": true
          },
          "physical_resource_id": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_describe_stack_resources",
      "pack": "aws",
      "ref": "aws.cf_describe_stack_resources",
      "id": "5b87f8240a8b8a567f58916c",
      "runner_type": "python-script"
  },
  {
      "name": "cf_describe_stacks",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_stacks",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_describe_stacks",
      "pack": "aws",
      "ref": "aws.cf_describe_stacks",
      "id": "5b87f8240a8b8a567f58916d",
      "runner_type": "python-script"
  },
  {
      "name": "cf_encode_bool",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "v": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "encode_bool",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_encode_bool",
      "pack": "aws",
      "ref": "aws.cf_encode_bool",
      "id": "5b87f8240a8b8a567f58916e",
      "runner_type": "python-script"
  },
  {
      "name": "cf_estimate_template_cost",
      "parameters": {
          "template_body": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parameters": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "template_url": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "estimate_template_cost",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_estimate_template_cost",
      "pack": "aws",
      "ref": "aws.cf_estimate_template_cost",
      "id": "5b87f8240a8b8a567f58916f",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_http_connection",
      "pack": "aws",
      "ref": "aws.cf_get_http_connection",
      "id": "5b87f8240a8b8a567f589170",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "markers": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_list",
      "pack": "aws",
      "ref": "aws.cf_get_list",
      "id": "5b87f8240a8b8a567f589171",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_object",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_object",
      "pack": "aws",
      "ref": "aws.cf_get_object",
      "id": "5b87f8240a8b8a567f589172",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_path",
      "pack": "aws",
      "ref": "aws.cf_get_path",
      "id": "5b87f8240a8b8a567f589173",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_proxy_auth_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_auth_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_proxy_auth_header",
      "pack": "aws",
      "ref": "aws.cf_get_proxy_auth_header",
      "id": "5b87f8240a8b8a567f589174",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_proxy_url_with_auth",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_url_with_auth",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_proxy_url_with_auth",
      "pack": "aws",
      "ref": "aws.cf_get_proxy_url_with_auth",
      "id": "5b87f8240a8b8a567f589175",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_stack_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_stack_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_stack_policy",
      "pack": "aws",
      "ref": "aws.cf_get_stack_policy",
      "id": "5b87f8240a8b8a567f589176",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_status",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_status",
      "pack": "aws",
      "ref": "aws.cf_get_status",
      "id": "5b87f8240a8b8a567f589177",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_template",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_template",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_template",
      "pack": "aws",
      "ref": "aws.cf_get_template",
      "id": "5b87f8240a8b8a567f589178",
      "runner_type": "python-script"
  },
  {
      "name": "cf_get_utf8_value",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_utf8_value",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_get_utf8_value",
      "pack": "aws",
      "ref": "aws.cf_get_utf8_value",
      "id": "5b87f8240a8b8a567f589179",
      "runner_type": "python-script"
  },
  {
      "name": "cf_handle_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "proxy_pass": {
              "required": true,
              "type": "string"
          },
          "proxy_port": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "proxy": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "handle_proxy",
              "type": "string",
              "immutable": true
          },
          "proxy_user": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_handle_proxy",
      "pack": "aws",
      "ref": "aws.cf_handle_proxy",
      "id": "5b87f8240a8b8a567f58917a",
      "runner_type": "python-script"
  },
  {
      "name": "cf_list_stack_resources",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_stack_resources",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_list_stack_resources",
      "pack": "aws",
      "ref": "aws.cf_list_stack_resources",
      "id": "5b87f8240a8b8a567f58917b",
      "runner_type": "python-script"
  },
  {
      "name": "cf_list_stacks",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "next_token": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_stacks",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "stack_status_filters": {
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_list_stacks",
      "pack": "aws",
      "ref": "aws.cf_list_stacks",
      "id": "5b87f8240a8b8a567f58917c",
      "runner_type": "python-script"
  },
  {
      "name": "cf_make_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_make_request",
      "pack": "aws",
      "ref": "aws.cf_make_request",
      "id": "5b87f8240a8b8a567f58917d",
      "runner_type": "python-script"
  },
  {
      "name": "cf_new_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "new_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_new_http_connection",
      "pack": "aws",
      "ref": "aws.cf_new_http_connection",
      "id": "5b87f8240a8b8a567f58917e",
      "runner_type": "python-script"
  },
  {
      "name": "cf_prefix_proxy_to_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "prefix_proxy_to_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_prefix_proxy_to_path",
      "pack": "aws",
      "ref": "aws.cf_prefix_proxy_to_path",
      "id": "5b87f8240a8b8a567f58917f",
      "runner_type": "python-script"
  },
  {
      "name": "cf_proxy_ssl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "proxy_ssl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_proxy_ssl",
      "pack": "aws",
      "ref": "aws.cf_proxy_ssl",
      "id": "5b87f8240a8b8a567f589180",
      "runner_type": "python-script"
  },
  {
      "name": "cf_put_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "connection": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_put_http_connection",
      "pack": "aws",
      "ref": "aws.cf_put_http_connection",
      "id": "5b87f8240a8b8a567f589181",
      "runner_type": "python-script"
  },
  {
      "name": "cf_server_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "server_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_server_name",
      "pack": "aws",
      "ref": "aws.cf_server_name",
      "id": "5b87f8240a8b8a567f589182",
      "runner_type": "python-script"
  },
  {
      "name": "cf_set_host_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "request": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_host_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_set_host_header",
      "pack": "aws",
      "ref": "aws.cf_set_host_header",
      "id": "5b87f8240a8b8a567f589183",
      "runner_type": "python-script"
  },
  {
      "name": "cf_set_request_hook",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "hook": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_request_hook",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_set_request_hook",
      "pack": "aws",
      "ref": "aws.cf_set_request_hook",
      "id": "5b87f8240a8b8a567f589184",
      "runner_type": "python-script"
  },
  {
      "name": "cf_set_stack_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stack_name_or_id": {
              "required": true,
              "type": "string"
          },
          "stack_policy_url": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_stack_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "stack_policy_body": {
              "type": "string"
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_set_stack_policy",
      "pack": "aws",
      "ref": "aws.cf_set_stack_policy",
      "id": "5b87f8240a8b8a567f589185",
      "runner_type": "python-script"
  },
  {
      "name": "cf_skip_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "skip_proxy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_skip_proxy",
      "pack": "aws",
      "ref": "aws.cf_skip_proxy",
      "id": "5b87f8240a8b8a567f589186",
      "runner_type": "python-script"
  },
  {
      "name": "cf_update_stack",
      "parameters": {
          "template_body": {
              "type": "string"
          },
          "stack_name": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "stack_policy_during_update_body": {
              "type": "string"
          },
          "notification_arns": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "parameters": {
              "type": "string"
          },
          "use_previous_template": {
              "type": "string"
          },
          "stack_policy_url": {
              "type": "string"
          },
          "capabilities": {
              "type": "string"
          },
          "stack_policy_during_update_url": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          },
          "disable_rollback": {
              "default": false,
              "type": "boolean"
          },
          "stack_policy_body": {
              "type": "string"
          },
          "tags": {
              "type": "string"
          },
          "action": {
              "default": "update_stack",
              "type": "string",
              "immutable": true
          },
          "template_url": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "timeout_in_minutes": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_update_stack",
      "pack": "aws",
      "ref": "aws.cf_update_stack",
      "id": "5b87f8240a8b8a567f589187",
      "runner_type": "python-script"
  },
  {
      "name": "cf_validate_template",
      "parameters": {
          "template_body": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "template_url": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "validate_template",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.cloudformation.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "CloudFormationConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:cf_validate_template",
      "pack": "aws",
      "ref": "aws.cf_validate_template",
      "id": "5b87f8240a8b8a567f589188",
      "runner_type": "python-script"
  },
  {
      "name": "create_vm",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "instance_type": {
              "default": "t2.medium",
              "type": "string",
              "description": "Flavor to use for instance creation"
          },
          "subnet_id": {
              "required": true,
              "type": "string",
              "description": "AWS Subnet ID"
          },
          "key_name": {
              "required": true,
              "type": "string",
              "description": "SSH key to use during intial instance creation"
          },
          "dns_zone": {
              "required": true,
              "type": "string",
              "description": "Route53 DNS Zone to add host to"
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Short hostname"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "image_id": {
              "required": true,
              "type": "string",
              "description": "AWS image id to create instance from"
          },
          "base_user": {
              "default": "ubuntu",
              "type": "string",
              "description": "Username for initial ssh test"
          },
          "keyfile": {
              "required": true,
              "type": "string",
              "description": "Path to local private key that corresponds to {{key_name}}"
          }
      },
      "tags": [],
      "description": "Create a VM, add DNS to Route53",
      "enabled": true,
      "entry_point": "workflows/create_vm.yaml",
      "notify": {},
      "uid": "action:aws:create_vm",
      "pack": "aws",
      "ref": "aws.create_vm",
      "id": "5b87f8240a8b8a567f589189",
      "runner_type": "action-chain"
  },
  {
      "name": "destroy_vm",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "dns_zone": {
              "required": true,
              "type": "string",
              "description": "Route53 DNS Zone to add host to"
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Short hostname"
          }
      },
      "tags": [],
      "description": "Destroys a VM and removes it from Route53",
      "enabled": true,
      "entry_point": "workflows/destroy_vm.yaml",
      "notify": {},
      "uid": "action:aws:destroy_vm",
      "pack": "aws",
      "ref": "aws.destroy_vm",
      "id": "5b87f8240a8b8a567f58918a",
      "runner_type": "action-chain"
  },
  {
      "name": "ec2_allocate_address",
      "parameters": {
          "domain": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "allocate_address",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_allocate_address",
      "pack": "aws",
      "ref": "aws.ec2_allocate_address",
      "id": "5b87f8240a8b8a567f58918b",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_assign_private_ip_addresses",
      "parameters": {
          "allow_reassignment": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "private_ip_addresses": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "secondary_private_ip_address_count": {
              "type": "string"
          },
          "action": {
              "default": "assign_private_ip_addresses",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_assign_private_ip_addresses",
      "pack": "aws",
      "ref": "aws.ec2_assign_private_ip_addresses",
      "id": "5b87f8240a8b8a567f58918c",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_associate_address",
      "parameters": {
          "public_ip": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "allocation_id": {
              "type": "string"
          },
          "allow_reassociation": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "private_ip_address": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "associate_address",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_associate_address",
      "pack": "aws",
      "ref": "aws.ec2_associate_address",
      "id": "5b87f8240a8b8a567f58918d",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_associate_address_object",
      "parameters": {
          "public_ip": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "allocation_id": {
              "type": "string"
          },
          "allow_reassociation": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "private_ip_address": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "associate_address_object",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_associate_address_object",
      "pack": "aws",
      "ref": "aws.ec2_associate_address_object",
      "id": "5b87f8240a8b8a567f58918e",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_attach_network_interface",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "device_index": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "attach_network_interface",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_attach_network_interface",
      "pack": "aws",
      "ref": "aws.ec2_attach_network_interface",
      "id": "5b87f8250a8b8a567f58918f",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_attach_volume",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "device": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "attach_volume",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_attach_volume",
      "pack": "aws",
      "ref": "aws.ec2_attach_volume",
      "id": "5b87f8250a8b8a567f589190",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_authorize_security_group",
      "parameters": {
          "src_security_group_owner_id": {
              "type": "string"
          },
          "from_port": {
              "type": "integer"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "integer"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "group_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "src_security_group_name": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "authorize_security_group",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "src_security_group_group_id": {
              "type": "string"
          },
          "group_id": {
              "type": "string"
          },
          "cidr_ip": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_authorize_security_group",
      "pack": "aws",
      "ref": "aws.ec2_authorize_security_group",
      "id": "5b87f8250a8b8a567f589191",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_authorize_security_group_deprecated",
      "parameters": {
          "src_security_group_owner_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "src_security_group_name": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "authorize_security_group_deprecated",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "cidr_ip": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_authorize_security_group_deprecated",
      "pack": "aws",
      "ref": "aws.ec2_authorize_security_group_deprecated",
      "id": "5b87f8250a8b8a567f589192",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_authorize_security_group_egress",
      "parameters": {
          "src_group_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "required": true,
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "authorize_security_group_egress",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "group_id": {
              "required": true,
              "type": "string"
          },
          "cidr_ip": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_authorize_security_group_egress",
      "pack": "aws",
      "ref": "aws.ec2_authorize_security_group_egress",
      "id": "5b87f8250a8b8a567f589193",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_build_base_http_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "default": "build_base_http_request",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "host": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "auth_path": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_build_base_http_request",
      "pack": "aws",
      "ref": "aws.ec2_build_base_http_request",
      "id": "5b87f8250a8b8a567f589194",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_build_complex_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_complex_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_build_complex_list_params",
      "pack": "aws",
      "ref": "aws.ec2_build_complex_list_params",
      "id": "5b87f8250a8b8a567f589195",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_build_configurations_param_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_configurations_param_list",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "target_configurations": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_build_configurations_param_list",
      "pack": "aws",
      "ref": "aws.ec2_build_configurations_param_list",
      "id": "5b87f8250a8b8a567f589196",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_build_filter_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_filter_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_build_filter_params",
      "pack": "aws",
      "ref": "aws.ec2_build_filter_params",
      "id": "5b87f8250a8b8a567f589197",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_build_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_build_list_params",
      "pack": "aws",
      "ref": "aws.ec2_build_list_params",
      "id": "5b87f8250a8b8a567f589198",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_build_tag_param_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "tags": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_tag_param_list",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_build_tag_param_list",
      "pack": "aws",
      "ref": "aws.ec2_build_tag_param_list",
      "id": "5b87f8250a8b8a567f589199",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_bundle_instance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "s3_bucket": {
              "required": true,
              "type": "string"
          },
          "s3_upload_policy": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "s3_prefix": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "bundle_instance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_bundle_instance",
      "pack": "aws",
      "ref": "aws.ec2_bundle_instance",
      "id": "5b87f8250a8b8a567f58919a",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_cancel_bundle_task",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "bundle_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "cancel_bundle_task",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_cancel_bundle_task",
      "pack": "aws",
      "ref": "aws.ec2_cancel_bundle_task",
      "id": "5b87f8250a8b8a567f58919b",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_cancel_reserved_instances_listing",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "reserved_instances_listing_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "cancel_reserved_instances_listing",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_cancel_reserved_instances_listing",
      "pack": "aws",
      "ref": "aws.ec2_cancel_reserved_instances_listing",
      "id": "5b87f8250a8b8a567f58919c",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_cancel_spot_instance_requests",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "request_ids": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "cancel_spot_instance_requests",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_cancel_spot_instance_requests",
      "pack": "aws",
      "ref": "aws.ec2_cancel_spot_instance_requests",
      "id": "5b87f8250a8b8a567f58919d",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "close",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_close",
      "pack": "aws",
      "ref": "aws.ec2_close",
      "id": "5b87f8250a8b8a567f58919e",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_confirm_product_instance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "confirm_product_instance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "product_code": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_confirm_product_instance",
      "pack": "aws",
      "ref": "aws.ec2_confirm_product_instance",
      "id": "5b87f8250a8b8a567f58919f",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_copy_image",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "description": {
              "type": "string"
          },
          "source_image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "source_region": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "copy_image",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "client_token": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_copy_image",
      "pack": "aws",
      "ref": "aws.ec2_copy_image",
      "id": "5b87f8250a8b8a567f5891a0",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_copy_snapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "description": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "source_region": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "copy_snapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "source_snapshot_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_copy_snapshot",
      "pack": "aws",
      "ref": "aws.ec2_copy_snapshot",
      "id": "5b87f8250a8b8a567f5891a1",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_image",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "description": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "block_device_mapping": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "no_reboot": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_image",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_image",
      "pack": "aws",
      "ref": "aws.ec2_create_image",
      "id": "5b87f8250a8b8a567f5891a2",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_key_pair",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "key_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_key_pair",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_key_pair",
      "pack": "aws",
      "ref": "aws.ec2_create_key_pair",
      "id": "5b87f8250a8b8a567f5891a3",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_network_interface",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "groups": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "subnet_id": {
              "required": true,
              "type": "string"
          },
          "description": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "private_ip_address": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_network_interface",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_network_interface",
      "pack": "aws",
      "ref": "aws.ec2_create_network_interface",
      "id": "5b87f8250a8b8a567f5891a4",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_placement_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "strategy": {
              "default": "cluster",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_placement_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_placement_group",
      "pack": "aws",
      "ref": "aws.ec2_create_placement_group",
      "id": "5b87f8250a8b8a567f5891a5",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_reserved_instances_listing",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_count": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "reserved_instances_id": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_reserved_instances_listing",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "client_token": {
              "required": true,
              "type": "string"
          },
          "price_schedules": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_reserved_instances_listing",
      "pack": "aws",
      "ref": "aws.ec2_create_reserved_instances_listing",
      "id": "5b87f8250a8b8a567f5891a6",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_security_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "description": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "type": "string"
          },
          "action": {
              "default": "create_security_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_security_group",
      "pack": "aws",
      "ref": "aws.ec2_create_security_group",
      "id": "5b87f8250a8b8a567f5891a7",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_snapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "description": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "create_snapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_snapshot",
      "pack": "aws",
      "ref": "aws.ec2_create_snapshot",
      "id": "5b87f8250a8b8a567f5891a8",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_spot_datafeed_subscription",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "bucket": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "prefix": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_spot_datafeed_subscription",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_spot_datafeed_subscription",
      "pack": "aws",
      "ref": "aws.ec2_create_spot_datafeed_subscription",
      "id": "5b87f8250a8b8a567f5891a9",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_tags",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "tags": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "resource_ids": {
              "required": true,
              "type": "array"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_tags",
      "pack": "aws",
      "ref": "aws.ec2_create_tags",
      "id": "5b87f8250a8b8a567f5891aa",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_create_volume",
      "parameters": {
          "size": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "encrypted": {
              "default": false,
              "type": "boolean"
          },
          "volume_type": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "iops": {
              "type": "string"
          },
          "snapshot": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_volume",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_create_volume",
      "pack": "aws",
      "ref": "aws.ec2_create_volume",
      "id": "5b87f8250a8b8a567f5891ab",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_delete_key_pair",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "key_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_key_pair",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_delete_key_pair",
      "pack": "aws",
      "ref": "aws.ec2_delete_key_pair",
      "id": "5b87f8250a8b8a567f5891ac",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_delete_network_interface",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_network_interface",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_delete_network_interface",
      "pack": "aws",
      "ref": "aws.ec2_delete_network_interface",
      "id": "5b87f8250a8b8a567f5891ad",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_delete_placement_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_placement_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_delete_placement_group",
      "pack": "aws",
      "ref": "aws.ec2_delete_placement_group",
      "id": "5b87f8250a8b8a567f5891ae",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_delete_security_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_security_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "group_id": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_delete_security_group",
      "pack": "aws",
      "ref": "aws.ec2_delete_security_group",
      "id": "5b87f8250a8b8a567f5891af",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_delete_snapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "delete_snapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_delete_snapshot",
      "pack": "aws",
      "ref": "aws.ec2_delete_snapshot",
      "id": "5b87f8250a8b8a567f5891b0",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_delete_spot_datafeed_subscription",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_spot_datafeed_subscription",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_delete_spot_datafeed_subscription",
      "pack": "aws",
      "ref": "aws.ec2_delete_spot_datafeed_subscription",
      "id": "5b87f8250a8b8a567f5891b1",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_delete_tags",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "tags": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "resource_ids": {
              "required": true,
              "type": "array"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_delete_tags",
      "pack": "aws",
      "ref": "aws.ec2_delete_tags",
      "id": "5b87f8250a8b8a567f5891b2",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_delete_volume",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "delete_volume",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_delete_volume",
      "pack": "aws",
      "ref": "aws.ec2_delete_volume",
      "id": "5b87f8250a8b8a567f5891b3",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_deregister_image",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "delete_snapshot": {
              "default": false,
              "type": "boolean"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "deregister_image",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_deregister_image",
      "pack": "aws",
      "ref": "aws.ec2_deregister_image",
      "id": "5b87f8250a8b8a567f5891b4",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_describe_account_attributes",
      "parameters": {
          "attribute_names": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_account_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_describe_account_attributes",
      "pack": "aws",
      "ref": "aws.ec2_describe_account_attributes",
      "id": "5b87f8250a8b8a567f5891b5",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_describe_reserved_instances_modifications",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_reserved_instances_modifications",
              "type": "string",
              "immutable": true
          },
          "reserved_instances_modification_ids": {
              "type": "string"
          },
          "next_token": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_describe_reserved_instances_modifications",
      "pack": "aws",
      "ref": "aws.ec2_describe_reserved_instances_modifications",
      "id": "5b87f8250a8b8a567f5891b6",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_describe_vpc_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "describe_vpc_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_describe_vpc_attribute",
      "pack": "aws",
      "ref": "aws.ec2_describe_vpc_attribute",
      "id": "5b87f8250a8b8a567f5891b7",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_detach_network_interface",
      "parameters": {
          "force": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "detach_network_interface",
              "type": "string",
              "immutable": true
          },
          "attachment_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_detach_network_interface",
      "pack": "aws",
      "ref": "aws.ec2_detach_network_interface",
      "id": "5b87f8250a8b8a567f5891b8",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_detach_volume",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "device": {
              "type": "string"
          },
          "force": {
              "default": false,
              "type": "boolean"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "detach_volume",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_detach_volume",
      "pack": "aws",
      "ref": "aws.ec2_detach_volume",
      "id": "5b87f8250a8b8a567f5891b9",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_disassociate_address",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "public_ip": {
              "type": "string"
          },
          "association_id": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "disassociate_address",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_disassociate_address",
      "pack": "aws",
      "ref": "aws.ec2_disassociate_address",
      "id": "5b87f8250a8b8a567f5891ba",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_enable_volume_io",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "enable_volume_io",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_enable_volume_io",
      "pack": "aws",
      "ref": "aws.ec2_enable_volume_io",
      "id": "5b87f8250a8b8a567f5891bb",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_addresses",
      "parameters": {
          "allocation_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "addresses": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_addresses",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_addresses",
      "pack": "aws",
      "ref": "aws.ec2_get_all_addresses",
      "id": "5b87f8250a8b8a567f5891bc",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_bundle_tasks",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "bundle_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_bundle_tasks",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_bundle_tasks",
      "pack": "aws",
      "ref": "aws.ec2_get_all_bundle_tasks",
      "id": "5b87f8250a8b8a567f5891bd",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_classic_link_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_classic_link_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_classic_link_instances",
      "pack": "aws",
      "ref": "aws.ec2_get_all_classic_link_instances",
      "id": "5b87f8250a8b8a567f5891be",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_images",
      "parameters": {
          "owners": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "image_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "executable_by": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_images",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_images",
      "pack": "aws",
      "ref": "aws.ec2_get_all_images",
      "id": "5b87f8250a8b8a567f5891bf",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_instance_status",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "include_all_instances": {
              "default": false,
              "type": "boolean"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_instance_status",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_instance_status",
      "pack": "aws",
      "ref": "aws.ec2_get_all_instance_status",
      "id": "5b87f8250a8b8a567f5891c0",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_instance_types",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_instance_types",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_instance_types",
      "pack": "aws",
      "ref": "aws.ec2_get_all_instance_types",
      "id": "5b87f8250a8b8a567f5891c1",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "object"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_instances",
      "pack": "aws",
      "ref": "aws.ec2_get_all_instances",
      "id": "5b87f8250a8b8a567f5891c2",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_kernels",
      "parameters": {
          "owners": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_kernels",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "kernel_ids": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_kernels",
      "pack": "aws",
      "ref": "aws.ec2_get_all_kernels",
      "id": "5b87f8260a8b8a567f5891c3",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_key_pairs",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "keynames": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_key_pairs",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_key_pairs",
      "pack": "aws",
      "ref": "aws.ec2_get_all_key_pairs",
      "id": "5b87f8260a8b8a567f5891c4",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_network_interfaces",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_ids": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_network_interfaces",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_network_interfaces",
      "pack": "aws",
      "ref": "aws.ec2_get_all_network_interfaces",
      "id": "5b87f8260a8b8a567f5891c5",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_placement_groups",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "groupnames": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_placement_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_placement_groups",
      "pack": "aws",
      "ref": "aws.ec2_get_all_placement_groups",
      "id": "5b87f8260a8b8a567f5891c6",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_ramdisks",
      "parameters": {
          "owners": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_ramdisks",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "ramdisk_ids": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_ramdisks",
      "pack": "aws",
      "ref": "aws.ec2_get_all_ramdisks",
      "id": "5b87f8260a8b8a567f5891c7",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_regions",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "region_names": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_regions",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_regions",
      "pack": "aws",
      "ref": "aws.ec2_get_all_regions",
      "id": "5b87f8260a8b8a567f5891c8",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_reservations",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_reservations",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_reservations",
      "pack": "aws",
      "ref": "aws.ec2_get_all_reservations",
      "id": "5b87f8260a8b8a567f5891c9",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_reserved_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "reserved_instances_id": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_reserved_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_reserved_instances",
      "pack": "aws",
      "ref": "aws.ec2_get_all_reserved_instances",
      "id": "5b87f8260a8b8a567f5891ca",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_reserved_instances_offerings",
      "parameters": {
          "max_duration": {
              "type": "string"
          },
          "max_instance_count": {
              "type": "string"
          },
          "availability_zone": {
              "type": "string"
          },
          "min_duration": {
              "type": "string"
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "next_token": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_tenancy": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "reserved_instances_offering_ids": {
              "type": "string"
          },
          "action": {
              "default": "get_all_reserved_instances_offerings",
              "type": "string",
              "immutable": true
          },
          "offering_type": {
              "type": "string"
          },
          "include_marketplace": {
              "type": "string"
          },
          "product_description": {
              "type": "string"
          },
          "instance_type": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_reserved_instances_offerings",
      "pack": "aws",
      "ref": "aws.ec2_get_all_reserved_instances_offerings",
      "id": "5b87f8260a8b8a567f5891cb",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_security_groups",
      "parameters": {
          "group_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "groupnames": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_security_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_security_groups",
      "pack": "aws",
      "ref": "aws.ec2_get_all_security_groups",
      "id": "5b87f8260a8b8a567f5891cc",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_snapshots",
      "parameters": {
          "restorable_by": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "snapshot_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "owner": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_snapshots",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_snapshots",
      "pack": "aws",
      "ref": "aws.ec2_get_all_snapshots",
      "id": "5b87f8260a8b8a567f5891cd",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_spot_instance_requests",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "request_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_spot_instance_requests",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_spot_instance_requests",
      "pack": "aws",
      "ref": "aws.ec2_get_all_spot_instance_requests",
      "id": "5b87f8260a8b8a567f5891ce",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_tags",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_tags",
      "pack": "aws",
      "ref": "aws.ec2_get_all_tags",
      "id": "5b87f8260a8b8a567f5891cf",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_volume_status",
      "parameters": {
          "volume_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_volume_status",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_volume_status",
      "pack": "aws",
      "ref": "aws.ec2_get_all_volume_status",
      "id": "5b87f8260a8b8a567f5891d0",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_volumes",
      "parameters": {
          "volume_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_volumes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_volumes",
      "pack": "aws",
      "ref": "aws.ec2_get_all_volumes",
      "id": "5b87f8260a8b8a567f5891d1",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_all_zones",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zones": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_zones",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_all_zones",
      "pack": "aws",
      "ref": "aws.ec2_get_all_zones",
      "id": "5b87f8260a8b8a567f5891d2",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_console_output",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_console_output",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_console_output",
      "pack": "aws",
      "ref": "aws.ec2_get_console_output",
      "id": "5b87f8260a8b8a567f5891d3",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_http_connection",
      "pack": "aws",
      "ref": "aws.ec2_get_http_connection",
      "id": "5b87f8260a8b8a567f5891d4",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_image",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_image",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_image",
      "pack": "aws",
      "ref": "aws.ec2_get_image",
      "id": "5b87f8260a8b8a567f5891d5",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_image_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "launchPermission",
              "type": "string"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_image_attribute",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_image_attribute",
      "pack": "aws",
      "ref": "aws.ec2_get_image_attribute",
      "id": "5b87f8260a8b8a567f5891d6",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_instance_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_instance_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_instance_attribute",
      "pack": "aws",
      "ref": "aws.ec2_get_instance_attribute",
      "id": "5b87f8260a8b8a567f5891d7",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_key_pair",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "keyname": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_key_pair",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_key_pair",
      "pack": "aws",
      "ref": "aws.ec2_get_key_pair",
      "id": "5b87f8260a8b8a567f5891d8",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "markers": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_list",
      "pack": "aws",
      "ref": "aws.ec2_get_list",
      "id": "5b87f8260a8b8a567f5891d9",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_object",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_object",
      "pack": "aws",
      "ref": "aws.ec2_get_object",
      "id": "5b87f8260a8b8a567f5891da",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_only_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "array"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "integer"
          },
          "filters": {
              "type": "object"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_only_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_only_instances",
      "pack": "aws",
      "ref": "aws.ec2_get_only_instances",
      "id": "5b87f8260a8b8a567f5891db",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_params",
      "pack": "aws",
      "ref": "aws.ec2_get_params",
      "id": "5b87f8260a8b8a567f5891dc",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_password_data",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_password_data",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_password_data",
      "pack": "aws",
      "ref": "aws.ec2_get_password_data",
      "id": "5b87f8260a8b8a567f5891dd",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_path",
      "pack": "aws",
      "ref": "aws.ec2_get_path",
      "id": "5b87f8260a8b8a567f5891de",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_proxy_auth_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_auth_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_proxy_auth_header",
      "pack": "aws",
      "ref": "aws.ec2_get_proxy_auth_header",
      "id": "5b87f8260a8b8a567f5891df",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_proxy_url_with_auth",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_url_with_auth",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_proxy_url_with_auth",
      "pack": "aws",
      "ref": "aws.ec2_get_proxy_url_with_auth",
      "id": "5b87f8260a8b8a567f5891e0",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_snapshot_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "createVolumePermission",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_snapshot_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_snapshot_attribute",
      "pack": "aws",
      "ref": "aws.ec2_get_snapshot_attribute",
      "id": "5b87f8260a8b8a567f5891e1",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_spot_datafeed_subscription",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_spot_datafeed_subscription",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_spot_datafeed_subscription",
      "pack": "aws",
      "ref": "aws.ec2_get_spot_datafeed_subscription",
      "id": "5b87f8260a8b8a567f5891e2",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_spot_price_history",
      "parameters": {
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "availability_zone": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "start_time": {
              "type": "string"
          },
          "product_description": {
              "type": "string"
          },
          "instance_type": {
              "type": "string"
          },
          "max_results": {
              "type": "string"
          },
          "end_time": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_spot_price_history",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_spot_price_history",
      "pack": "aws",
      "ref": "aws.ec2_get_spot_price_history",
      "id": "5b87f8260a8b8a567f5891e3",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_status",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_status",
      "pack": "aws",
      "ref": "aws.ec2_get_status",
      "id": "5b87f8260a8b8a567f5891e4",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_utf8_value",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_utf8_value",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_utf8_value",
      "pack": "aws",
      "ref": "aws.ec2_get_utf8_value",
      "id": "5b87f8260a8b8a567f5891e5",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_get_volume_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "autoEnableIO",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_volume_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_get_volume_attribute",
      "pack": "aws",
      "ref": "aws.ec2_get_volume_attribute",
      "id": "5b87f8260a8b8a567f5891e6",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_handle_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "proxy_pass": {
              "required": true,
              "type": "string"
          },
          "proxy_port": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "proxy": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "handle_proxy",
              "type": "string",
              "immutable": true
          },
          "proxy_user": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_handle_proxy",
      "pack": "aws",
      "ref": "aws.ec2_handle_proxy",
      "id": "5b87f8260a8b8a567f5891e7",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_import_key_pair",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "key_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "public_key_material": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "import_key_pair",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_import_key_pair",
      "pack": "aws",
      "ref": "aws.ec2_import_key_pair",
      "id": "5b87f8260a8b8a567f5891e8",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_make_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_make_request",
      "pack": "aws",
      "ref": "aws.ec2_make_request",
      "id": "5b87f8260a8b8a567f5891e9",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_modify_image_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "groups": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "launchPermission",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "user_ids": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "operation": {
              "default": "add",
              "type": "string"
          },
          "product_codes": {
              "type": "string"
          },
          "action": {
              "default": "modify_image_attribute",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_modify_image_attribute",
      "pack": "aws",
      "ref": "aws.ec2_modify_image_attribute",
      "id": "5b87f8260a8b8a567f5891ea",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_modify_instance_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "modify_instance_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_modify_instance_attribute",
      "pack": "aws",
      "ref": "aws.ec2_modify_instance_attribute",
      "id": "5b87f8260a8b8a567f5891eb",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_modify_network_interface_attribute",
      "parameters": {
          "attachment_id": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attr": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "interface_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "modify_network_interface_attribute",
              "type": "string",
              "immutable": true
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_modify_network_interface_attribute",
      "pack": "aws",
      "ref": "aws.ec2_modify_network_interface_attribute",
      "id": "5b87f8260a8b8a567f5891ec",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_modify_reserved_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "reserved_instance_ids": {
              "required": true,
              "type": "string"
          },
          "target_configurations": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "modify_reserved_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "client_token": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_modify_reserved_instances",
      "pack": "aws",
      "ref": "aws.ec2_modify_reserved_instances",
      "id": "5b87f8260a8b8a567f5891ed",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_modify_snapshot_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "groups": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "createVolumePermission",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "user_ids": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "modify_snapshot_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "operation": {
              "default": "add",
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_modify_snapshot_attribute",
      "pack": "aws",
      "ref": "aws.ec2_modify_snapshot_attribute",
      "id": "5b87f8260a8b8a567f5891ee",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_modify_volume_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "new_value": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "modify_volume_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_modify_volume_attribute",
      "pack": "aws",
      "ref": "aws.ec2_modify_volume_attribute",
      "id": "5b87f8260a8b8a567f5891ef",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_modify_vpc_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "enable_dns_support": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "modify_vpc_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "enable_dns_hostnames": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_modify_vpc_attribute",
      "pack": "aws",
      "ref": "aws.ec2_modify_vpc_attribute",
      "id": "5b87f8260a8b8a567f5891f0",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_monitor_instance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "monitor_instance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_monitor_instance",
      "pack": "aws",
      "ref": "aws.ec2_monitor_instance",
      "id": "5b87f8260a8b8a567f5891f1",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_monitor_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "monitor_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_monitor_instances",
      "pack": "aws",
      "ref": "aws.ec2_monitor_instances",
      "id": "5b87f8260a8b8a567f5891f2",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_new_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "new_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_new_http_connection",
      "pack": "aws",
      "ref": "aws.ec2_new_http_connection",
      "id": "5b87f8260a8b8a567f5891f3",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_prefix_proxy_to_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "prefix_proxy_to_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_prefix_proxy_to_path",
      "pack": "aws",
      "ref": "aws.ec2_prefix_proxy_to_path",
      "id": "5b87f8260a8b8a567f5891f4",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_proxy_ssl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "proxy_ssl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_proxy_ssl",
      "pack": "aws",
      "ref": "aws.ec2_proxy_ssl",
      "id": "5b87f8260a8b8a567f5891f5",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_purchase_reserved_instance_offering",
      "parameters": {
          "reserved_instances_offering_id": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_count": {
              "default": 1,
              "type": "string"
          },
          "limit_price": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "purchase_reserved_instance_offering",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_purchase_reserved_instance_offering",
      "pack": "aws",
      "ref": "aws.ec2_purchase_reserved_instance_offering",
      "id": "5b87f8260a8b8a567f5891f6",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_put_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "connection": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_put_http_connection",
      "pack": "aws",
      "ref": "aws.ec2_put_http_connection",
      "id": "5b87f8260a8b8a567f5891f7",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_reboot_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "reboot_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_reboot_instances",
      "pack": "aws",
      "ref": "aws.ec2_reboot_instances",
      "id": "5b87f8270a8b8a567f5891f8",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_register_image",
      "parameters": {
          "image_location": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "description": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "kernel_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ramdisk_id": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "delete_root_volume_on_termination": {
              "default": false,
              "type": "boolean"
          },
          "snapshot_id": {
              "type": "string"
          },
          "root_device_name": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "block_device_map": {
              "type": "string"
          },
          "action": {
              "default": "register_image",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "architecture": {
              "type": "string"
          },
          "virtualization_type": {
              "type": "string"
          },
          "sriov_net_support": {
              "type": "string"
          },
          "name": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_register_image",
      "pack": "aws",
      "ref": "aws.ec2_register_image",
      "id": "5b87f8270a8b8a567f5891f9",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_release_address",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "allocation_id": {
              "type": "string"
          },
          "public_ip": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "release_address",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_release_address",
      "pack": "aws",
      "ref": "aws.ec2_release_address",
      "id": "5b87f8270a8b8a567f5891fa",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_request_spot_instances",
      "parameters": {
          "ramdisk_id": {
              "type": "string"
          },
          "user_data": {
              "type": "string"
          },
          "block_device_map": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "instance_profile_arn": {
              "type": "string"
          },
          "security_groups": {
              "type": "string"
          },
          "valid_from": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "subnet_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ebs_optimized": {
              "default": false,
              "type": "boolean"
          },
          "placement_group": {
              "type": "string"
          },
          "type": {
              "default": "one-time",
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "valid_until": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "kernel_id": {
              "type": "string"
          },
          "key_name": {
              "type": "string"
          },
          "price": {
              "required": true,
              "type": "string"
          },
          "addressing_type": {
              "type": "string"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "security_group_ids": {
              "type": "string"
          },
          "count": {
              "default": 1,
              "type": "string"
          },
          "launch_group": {
              "type": "string"
          },
          "placement": {
              "type": "string"
          },
          "instance_profile_name": {
              "type": "string"
          },
          "network_interfaces": {
              "type": "string"
          },
          "availability_zone_group": {
              "type": "string"
          },
          "monitoring_enabled": {
              "default": false,
              "type": "boolean"
          },
          "instance_type": {
              "default": "m1.small",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "request_spot_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_request_spot_instances",
      "pack": "aws",
      "ref": "aws.ec2_request_spot_instances",
      "id": "5b87f8270a8b8a567f5891fb",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_reset_image_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "launchPermission",
              "type": "string"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "reset_image_attribute",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_reset_image_attribute",
      "pack": "aws",
      "ref": "aws.ec2_reset_image_attribute",
      "id": "5b87f8270a8b8a567f5891fc",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_reset_instance_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "reset_instance_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_reset_instance_attribute",
      "pack": "aws",
      "ref": "aws.ec2_reset_instance_attribute",
      "id": "5b87f8270a8b8a567f5891fd",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_reset_snapshot_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "createVolumePermission",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "reset_snapshot_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_reset_snapshot_attribute",
      "pack": "aws",
      "ref": "aws.ec2_reset_snapshot_attribute",
      "id": "5b87f8270a8b8a567f5891fe",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_revoke_security_group",
      "parameters": {
          "src_security_group_owner_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "group_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "src_security_group_name": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "revoke_security_group",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "src_security_group_group_id": {
              "type": "string"
          },
          "group_id": {
              "type": "string"
          },
          "cidr_ip": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_revoke_security_group",
      "pack": "aws",
      "ref": "aws.ec2_revoke_security_group",
      "id": "5b87f8270a8b8a567f5891ff",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_revoke_security_group_deprecated",
      "parameters": {
          "src_security_group_owner_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "src_security_group_name": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "revoke_security_group_deprecated",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "cidr_ip": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_revoke_security_group_deprecated",
      "pack": "aws",
      "ref": "aws.ec2_revoke_security_group_deprecated",
      "id": "5b87f8270a8b8a567f589200",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_revoke_security_group_egress",
      "parameters": {
          "src_group_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "required": true,
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "revoke_security_group_egress",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "group_id": {
              "required": true,
              "type": "string"
          },
          "cidr_ip": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_revoke_security_group_egress",
      "pack": "aws",
      "ref": "aws.ec2_revoke_security_group_egress",
      "id": "5b87f8270a8b8a567f589201",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_run_instances",
      "parameters": {
          "ramdisk_id": {
              "type": "string"
          },
          "user_data": {
              "type": "string"
          },
          "max_count": {
              "default": 1,
              "type": "integer"
          },
          "block_device_map": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "instance_profile_arn": {
              "type": "string"
          },
          "additional_info": {
              "type": "string"
          },
          "security_groups": {
              "type": "array"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "subnet_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ebs_optimized": {
              "default": false,
              "type": "boolean"
          },
          "placement_group": {
              "type": "string"
          },
          "disable_api_termination": {
              "default": false,
              "type": "boolean"
          },
          "client_token": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "kernel_id": {
              "type": "string"
          },
          "key_name": {
              "type": "string"
          },
          "addressing_type": {
              "type": "string"
          },
          "private_ip_address": {
              "type": "string"
          },
          "tenancy": {
              "type": "string"
          },
          "min_count": {
              "default": 1,
              "type": "integer"
          },
          "security_group_ids": {
              "type": "array"
          },
          "placement": {
              "type": "string"
          },
          "instance_profile_name": {
              "type": "string"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "network_interfaces": {
              "type": "string"
          },
          "instance_initiated_shutdown_behavior": {
              "type": "string"
          },
          "monitoring_enabled": {
              "default": false,
              "type": "boolean"
          },
          "instance_type": {
              "default": "m1.small",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "run_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_run_instances",
      "pack": "aws",
      "ref": "aws.ec2_run_instances",
      "id": "5b87f8270a8b8a567f589202",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_server_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "server_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_server_name",
      "pack": "aws",
      "ref": "aws.ec2_server_name",
      "id": "5b87f8270a8b8a567f589203",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_set_host_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "request": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_host_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_set_host_header",
      "pack": "aws",
      "ref": "aws.ec2_set_host_header",
      "id": "5b87f8270a8b8a567f589204",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_set_request_hook",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "hook": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_request_hook",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_set_request_hook",
      "pack": "aws",
      "ref": "aws.ec2_set_request_hook",
      "id": "5b87f8270a8b8a567f589205",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_skip_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "skip_proxy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_skip_proxy",
      "pack": "aws",
      "ref": "aws.ec2_skip_proxy",
      "id": "5b87f8270a8b8a567f589206",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_start_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "start_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_start_instances",
      "pack": "aws",
      "ref": "aws.ec2_start_instances",
      "id": "5b87f8270a8b8a567f589207",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_stop_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "stop_instances",
              "type": "string",
              "immutable": true
          },
          "force": {
              "default": false,
              "type": "boolean"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_stop_instances",
      "pack": "aws",
      "ref": "aws.ec2_stop_instances",
      "id": "5b87f8270a8b8a567f589208",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_terminate_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "terminate_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_terminate_instances",
      "pack": "aws",
      "ref": "aws.ec2_terminate_instances",
      "id": "5b87f8270a8b8a567f589209",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_trim_snapshots",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "hourly_backups": {
              "default": 8,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "daily_backups": {
              "default": 7,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "trim_snapshots",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "weekly_backups": {
              "default": 4,
              "type": "string"
          },
          "monthly_backups": {
              "default": true,
              "type": "boolean"
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_trim_snapshots",
      "pack": "aws",
      "ref": "aws.ec2_trim_snapshots",
      "id": "5b87f8270a8b8a567f58920a",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_unassign_private_ip_addresses",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "private_ip_addresses": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "unassign_private_ip_addresses",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_unassign_private_ip_addresses",
      "pack": "aws",
      "ref": "aws.ec2_unassign_private_ip_addresses",
      "id": "5b87f8270a8b8a567f58920b",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_unmonitor_instance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "unmonitor_instance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_unmonitor_instance",
      "pack": "aws",
      "ref": "aws.ec2_unmonitor_instance",
      "id": "5b87f8270a8b8a567f58920c",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_unmonitor_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "unmonitor_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.ec2.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "EC2Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:ec2_unmonitor_instances",
      "pack": "aws",
      "ref": "aws.ec2_unmonitor_instances",
      "id": "5b87f8270a8b8a567f58920d",
      "runner_type": "python-script"
  },
  {
      "name": "ec2_wait_for_state",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "state": {
              "default": "running",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "ec2_wait_for_state.py",
      "notify": {},
      "uid": "action:aws:ec2_wait_for_state",
      "pack": "aws",
      "ref": "aws.ec2_wait_for_state",
      "id": "5b87f8270a8b8a567f58920e",
      "runner_type": "python-script"
  },
  {
      "name": "elasticache_add_tags_to_resource",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Tags": {
              "required": true,
              "type": "array",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ResourceName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "add_tags_to_resource",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_add_tags_to_resource",
      "id": "5b87f8270a8b8a567f58920f",
      "uid": "action:aws:elasticache_add_tags_to_resource"
  },
  {
      "name": "elasticache_authorize_cache_security_group_ingress",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "EC2SecurityGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "authorize_cache_security_group_ingress",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "EC2SecurityGroupOwnerId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "CacheSecurityGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_authorize_cache_security_group_ingress",
      "id": "5b87f8270a8b8a567f589210",
      "uid": "action:aws:elasticache_authorize_cache_security_group_ingress"
  },
  {
      "name": "elasticache_copy_snapshot",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "SourceSnapshotName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "TargetBucket": {
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "TargetSnapshotName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "copy_snapshot",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_copy_snapshot",
      "id": "5b87f8270a8b8a567f589211",
      "uid": "action:aws:elasticache_copy_snapshot"
  },
  {
      "name": "elasticache_create_cache_cluster",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "type": "string",
              "description": ""
          },
          "CacheClusterId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "ReplicationGroupId": {
              "type": "string",
              "description": ""
          },
          "SnapshotRetentionLimit": {
              "type": "integer",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "NotificationTopicArn": {
              "type": "string",
              "description": ""
          },
          "CacheNodeType": {
              "type": "string",
              "description": ""
          },
          "Engine": {
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Tags": {
              "type": "array",
              "description": ""
          },
          "NumCacheNodes": {
              "type": "integer",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "AutoMinorVersionUpgrade": {
              "type": "boolean",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "PreferredMaintenanceWindow": {
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "CacheSecurityGroupNames": {
              "type": "array",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "SnapshotName": {
              "type": "string",
              "description": ""
          },
          "SecurityGroupIds": {
              "type": "array",
              "description": ""
          },
          "PreferredAvailabilityZones": {
              "type": "array",
              "description": ""
          },
          "PreferredAvailabilityZone": {
              "type": "string",
              "description": ""
          },
          "EngineVersion": {
              "type": "string",
              "description": ""
          },
          "AZMode": {
              "type": "string",
              "description": ""
          },
          "SnapshotArns": {
              "type": "array",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "SnapshotWindow": {
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "create_cache_cluster",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CacheSubnetGroupName": {
              "type": "string",
              "description": ""
          },
          "Port": {
              "type": "integer",
              "description": ""
          }
      },
      "ref": "aws.elasticache_create_cache_cluster",
      "id": "5b87f8270a8b8a567f589212",
      "uid": "action:aws:elasticache_create_cache_cluster"
  },
  {
      "name": "elasticache_create_cache_parameter_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "CacheParameterGroupFamily": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "Description": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_cache_parameter_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_create_cache_parameter_group",
      "id": "5b87f8270a8b8a567f589213",
      "uid": "action:aws:elasticache_create_cache_parameter_group"
  },
  {
      "name": "elasticache_create_cache_security_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Description": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CacheSecurityGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "create_cache_security_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_create_cache_security_group",
      "id": "5b87f8270a8b8a567f589214",
      "uid": "action:aws:elasticache_create_cache_security_group"
  },
  {
      "name": "elasticache_create_cache_subnet_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "SubnetIds": {
              "required": true,
              "type": "array",
              "description": ""
          },
          "CacheSubnetGroupDescription": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CacheSubnetGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "create_cache_subnet_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_create_cache_subnet_group",
      "id": "5b87f8270a8b8a567f589215",
      "uid": "action:aws:elasticache_create_cache_subnet_group"
  },
  {
      "name": "elasticache_create_replication_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "type": "string",
              "description": ""
          },
          "ReplicationGroupId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "SnapshotRetentionLimit": {
              "type": "integer",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "NotificationTopicArn": {
              "type": "string",
              "description": ""
          },
          "CacheNodeType": {
              "type": "string",
              "description": ""
          },
          "Engine": {
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "PrimaryClusterId": {
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "AutoMinorVersionUpgrade": {
              "type": "boolean",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "PreferredMaintenanceWindow": {
              "type": "string",
              "description": ""
          },
          "CacheSubnetGroupName": {
              "type": "string",
              "description": ""
          },
          "CacheSecurityGroupNames": {
              "type": "array",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "SnapshotName": {
              "type": "string",
              "description": ""
          },
          "SecurityGroupIds": {
              "type": "array",
              "description": ""
          },
          "PreferredCacheClusterAZs": {
              "type": "array",
              "description": ""
          },
          "EngineVersion": {
              "type": "string",
              "description": ""
          },
          "ReplicationGroupDescription": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "NumCacheClusters": {
              "type": "integer",
              "description": ""
          },
          "SnapshotArns": {
              "type": "array",
              "description": ""
          },
          "Tags": {
              "type": "array",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "SnapshotWindow": {
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "create_replication_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "Port": {
              "type": "integer",
              "description": ""
          },
          "AutomaticFailoverEnabled": {
              "type": "boolean",
              "description": ""
          }
      },
      "ref": "aws.elasticache_create_replication_group",
      "id": "5b87f8270a8b8a567f589216",
      "uid": "action:aws:elasticache_create_replication_group"
  },
  {
      "name": "elasticache_create_snapshot",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "SnapshotName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "CacheClusterId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_snapshot",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_create_snapshot",
      "id": "5b87f8270a8b8a567f589217",
      "uid": "action:aws:elasticache_create_snapshot"
  },
  {
      "name": "elasticache_delete_cache_cluster",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "FinalSnapshotIdentifier": {
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "CacheClusterId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_cache_cluster",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_delete_cache_cluster",
      "id": "5b87f8270a8b8a567f589218",
      "uid": "action:aws:elasticache_delete_cache_cluster"
  },
  {
      "name": "elasticache_delete_cache_parameter_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_cache_parameter_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_delete_cache_parameter_group",
      "id": "5b87f8270a8b8a567f589219",
      "uid": "action:aws:elasticache_delete_cache_parameter_group"
  },
  {
      "name": "elasticache_delete_cache_security_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_cache_security_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CacheSecurityGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_delete_cache_security_group",
      "id": "5b87f8270a8b8a567f58921a",
      "uid": "action:aws:elasticache_delete_cache_security_group"
  },
  {
      "name": "elasticache_delete_cache_subnet_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_cache_subnet_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CacheSubnetGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_delete_cache_subnet_group",
      "id": "5b87f8270a8b8a567f58921b",
      "uid": "action:aws:elasticache_delete_cache_subnet_group"
  },
  {
      "name": "elasticache_delete_replication_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "FinalSnapshotIdentifier": {
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ReplicationGroupId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "action": {
              "default": "delete_replication_group",
              "type": "string",
              "immutable": true
          },
          "RetainPrimaryCluster": {
              "type": "boolean",
              "description": ""
          }
      },
      "ref": "aws.elasticache_delete_replication_group",
      "id": "5b87f8270a8b8a567f58921c",
      "uid": "action:aws:elasticache_delete_replication_group"
  },
  {
      "name": "elasticache_delete_snapshot",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "SnapshotName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_snapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_delete_snapshot",
      "id": "5b87f8270a8b8a567f58921d",
      "uid": "action:aws:elasticache_delete_snapshot"
  },
  {
      "name": "elasticache_describe_cache_clusters",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "CacheClusterId": {
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "ShowCacheNodeInfo": {
              "type": "boolean",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_cache_clusters",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_describe_cache_clusters",
      "id": "5b87f8270a8b8a567f58921e",
      "uid": "action:aws:elasticache_describe_cache_clusters"
  },
  {
      "name": "elasticache_describe_cache_engine_versions",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "Engine": {
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "CacheParameterGroupFamily": {
              "type": "string",
              "description": ""
          },
          "DefaultOnly": {
              "type": "boolean",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "EngineVersion": {
              "type": "string",
              "description": ""
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_cache_engine_versions",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_describe_cache_engine_versions",
      "id": "5b87f8270a8b8a567f58921f",
      "uid": "action:aws:elasticache_describe_cache_engine_versions"
  },
  {
      "name": "elasticache_describe_cache_parameter_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_cache_parameter_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_describe_cache_parameter_groups",
      "id": "5b87f8270a8b8a567f589220",
      "uid": "action:aws:elasticache_describe_cache_parameter_groups"
  },
  {
      "name": "elasticache_describe_cache_parameters",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "Source": {
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_cache_parameters",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_describe_cache_parameters",
      "id": "5b87f8270a8b8a567f589221",
      "uid": "action:aws:elasticache_describe_cache_parameters"
  },
  {
      "name": "elasticache_describe_cache_security_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CacheSecurityGroupName": {
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "describe_cache_security_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_describe_cache_security_groups",
      "id": "5b87f8270a8b8a567f589222",
      "uid": "action:aws:elasticache_describe_cache_security_groups"
  },
  {
      "name": "elasticache_describe_cache_subnet_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "action": {
              "default": "describe_cache_subnet_groups",
              "type": "string",
              "immutable": true
          },
          "CacheSubnetGroupName": {
              "type": "string",
              "description": ""
          }
      },
      "ref": "aws.elasticache_describe_cache_subnet_groups",
      "id": "5b87f8270a8b8a567f589223",
      "uid": "action:aws:elasticache_describe_cache_subnet_groups"
  },
  {
      "name": "elasticache_describe_engine_default_parameters",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "CacheParameterGroupFamily": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_engine_default_parameters",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_describe_engine_default_parameters",
      "id": "5b87f8270a8b8a567f589224",
      "uid": "action:aws:elasticache_describe_engine_default_parameters"
  },
  {
      "name": "elasticache_describe_events",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "StartTime": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Duration": {
              "type": "integer",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "SourceIdentifier": {
              "type": "string",
              "description": ""
          },
          "EndTime": {
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "describe_events",
              "type": "string",
              "immutable": true
          },
          "SourceType": {
              "type": "string",
              "description": ""
          }
      },
      "ref": "aws.elasticache_describe_events",
      "id": "5b87f8280a8b8a567f589225",
      "uid": "action:aws:elasticache_describe_events"
  },
  {
      "name": "elasticache_describe_replication_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ReplicationGroupId": {
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_replication_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_describe_replication_groups",
      "id": "5b87f8280a8b8a567f589226",
      "uid": "action:aws:elasticache_describe_replication_groups"
  },
  {
      "name": "elasticache_describe_reserved_cache_nodes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "OfferingType": {
              "type": "string",
              "description": ""
          },
          "ProductDescription": {
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "ReservedCacheNodesOfferingId": {
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ReservedCacheNodeId": {
              "type": "string",
              "description": ""
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Duration": {
              "type": "string",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "action": {
              "default": "describe_reserved_cache_nodes",
              "type": "string",
              "immutable": true
          },
          "CacheNodeType": {
              "type": "string",
              "description": ""
          }
      },
      "ref": "aws.elasticache_describe_reserved_cache_nodes",
      "id": "5b87f8280a8b8a567f589227",
      "uid": "action:aws:elasticache_describe_reserved_cache_nodes"
  },
  {
      "name": "elasticache_describe_reserved_cache_nodes_offerings",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "OfferingType": {
              "type": "string",
              "description": ""
          },
          "ProductDescription": {
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "ReservedCacheNodesOfferingId": {
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Duration": {
              "type": "string",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "action": {
              "default": "describe_reserved_cache_nodes_offerings",
              "type": "string",
              "immutable": true
          },
          "CacheNodeType": {
              "type": "string",
              "description": ""
          }
      },
      "ref": "aws.elasticache_describe_reserved_cache_nodes_offerings",
      "id": "5b87f8280a8b8a567f589228",
      "uid": "action:aws:elasticache_describe_reserved_cache_nodes_offerings"
  },
  {
      "name": "elasticache_describe_snapshots",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "SnapshotName": {
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "CacheClusterId": {
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "MaxRecords": {
              "type": "integer",
              "description": ""
          },
          "SnapshotSource": {
              "type": "string",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_snapshots",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_describe_snapshots",
      "id": "5b87f8280a8b8a567f589229",
      "uid": "action:aws:elasticache_describe_snapshots"
  },
  {
      "name": "elasticache_list_allowed_node_type_modifications",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ReplicationGroupId": {
              "type": "string",
              "description": ""
          },
          "CacheClusterId": {
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_allowed_node_type_modifications",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_list_allowed_node_type_modifications",
      "id": "5b87f8280a8b8a567f58922a",
      "uid": "action:aws:elasticache_list_allowed_node_type_modifications"
  },
  {
      "name": "elasticache_list_tags_for_resource",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ResourceName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "list_tags_for_resource",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_list_tags_for_resource",
      "id": "5b87f8280a8b8a567f58922b",
      "uid": "action:aws:elasticache_list_tags_for_resource"
  },
  {
      "name": "elasticache_modify_cache_cluster",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "type": "string",
              "description": ""
          },
          "CacheClusterId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "SnapshotRetentionLimit": {
              "type": "integer",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "NotificationTopicArn": {
              "type": "string",
              "description": ""
          },
          "CacheNodeType": {
              "type": "string",
              "description": ""
          },
          "CacheSecurityGroupNames": {
              "type": "array",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "NumCacheNodes": {
              "type": "integer",
              "description": ""
          },
          "AutoMinorVersionUpgrade": {
              "type": "boolean",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "PreferredMaintenanceWindow": {
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "SnapshotWindow": {
              "type": "string",
              "description": ""
          },
          "ApplyImmediately": {
              "type": "boolean",
              "description": ""
          },
          "SecurityGroupIds": {
              "type": "array",
              "description": ""
          },
          "action": {
              "default": "modify_cache_cluster",
              "type": "string",
              "immutable": true
          },
          "EngineVersion": {
              "type": "string",
              "description": ""
          },
          "AZMode": {
              "type": "string",
              "description": ""
          },
          "NewAvailabilityZones": {
              "type": "array",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "NotificationTopicStatus": {
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CacheNodeIdsToRemove": {
              "type": "array",
              "description": ""
          }
      },
      "ref": "aws.elasticache_modify_cache_cluster",
      "id": "5b87f8280a8b8a567f58922c",
      "uid": "action:aws:elasticache_modify_cache_cluster"
  },
  {
      "name": "elasticache_modify_cache_parameter_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ParameterNameValues": {
              "required": true,
              "type": "array",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "modify_cache_parameter_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_modify_cache_parameter_group",
      "id": "5b87f8280a8b8a567f58922d",
      "uid": "action:aws:elasticache_modify_cache_parameter_group"
  },
  {
      "name": "elasticache_modify_cache_subnet_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "SubnetIds": {
              "type": "array",
              "description": ""
          },
          "CacheSubnetGroupDescription": {
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CacheSubnetGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "modify_cache_subnet_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_modify_cache_subnet_group",
      "id": "5b87f8280a8b8a567f58922e",
      "uid": "action:aws:elasticache_modify_cache_subnet_group"
  },
  {
      "name": "elasticache_modify_replication_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "type": "string",
              "description": ""
          },
          "ReplicationGroupId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "SnapshotRetentionLimit": {
              "type": "integer",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "NotificationTopicArn": {
              "type": "string",
              "description": ""
          },
          "CacheNodeType": {
              "type": "string",
              "description": ""
          },
          "CacheSecurityGroupNames": {
              "type": "array",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "PrimaryClusterId": {
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "AutoMinorVersionUpgrade": {
              "type": "boolean",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "PreferredMaintenanceWindow": {
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          },
          "SnapshotWindow": {
              "type": "string",
              "description": ""
          },
          "ApplyImmediately": {
              "type": "boolean",
              "description": ""
          },
          "SecurityGroupIds": {
              "type": "array",
              "description": ""
          },
          "action": {
              "default": "modify_replication_group",
              "type": "string",
              "immutable": true
          },
          "EngineVersion": {
              "type": "string",
              "description": ""
          },
          "ReplicationGroupDescription": {
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "NotificationTopicStatus": {
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "SnapshottingClusterId": {
              "type": "string",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "AutomaticFailoverEnabled": {
              "type": "boolean",
              "description": ""
          }
      },
      "ref": "aws.elasticache_modify_replication_group",
      "id": "5b87f8280a8b8a567f58922f",
      "uid": "action:aws:elasticache_modify_replication_group"
  },
  {
      "name": "elasticache_purchase_reserved_cache_nodes_offering",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ReservedCacheNodesOfferingId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "CacheNodeCount": {
              "type": "integer",
              "description": ""
          },
          "ReservedCacheNodeId": {
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "purchase_reserved_cache_nodes_offering",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_purchase_reserved_cache_nodes_offering",
      "id": "5b87f8280a8b8a567f589230",
      "uid": "action:aws:elasticache_purchase_reserved_cache_nodes_offering"
  },
  {
      "name": "elasticache_reboot_cache_cluster",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "CacheClusterId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "CacheNodeIdsToReboot": {
              "required": true,
              "type": "array",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "reboot_cache_cluster",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_reboot_cache_cluster",
      "id": "5b87f8280a8b8a567f589231",
      "uid": "action:aws:elasticache_reboot_cache_cluster"
  },
  {
      "name": "elasticache_remove_tags_from_resource",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ResourceName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "TagKeys": {
              "required": true,
              "type": "array",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "remove_tags_from_resource",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_remove_tags_from_resource",
      "id": "5b87f8280a8b8a567f589232",
      "uid": "action:aws:elasticache_remove_tags_from_resource"
  },
  {
      "name": "elasticache_reset_cache_parameter_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CacheParameterGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ParameterNameValues": {
              "type": "array",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ResetAllParameters": {
              "type": "boolean",
              "description": ""
          },
          "action": {
              "default": "reset_cache_parameter_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_reset_cache_parameter_group",
      "id": "5b87f8280a8b8a567f589233",
      "uid": "action:aws:elasticache_reset_cache_parameter_group"
  },
  {
      "name": "elasticache_revoke_cache_security_group_ingress",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "EC2SecurityGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "revoke_cache_security_group_ingress",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "EC2SecurityGroupOwnerId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "CacheSecurityGroupName": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "elasticache",
              "type": "string"
          }
      },
      "ref": "aws.elasticache_revoke_cache_security_group_ingress",
      "id": "5b87f8280a8b8a567f589234",
      "uid": "action:aws:elasticache_revoke_cache_security_group_ingress"
  },
  {
      "name": "elbv2_add_tags",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Tags": {
              "required": true,
              "type": "array",
              "description": "The tags. Each resource can have a maximum of 10 tags."
          },
          "headers": {
              "type": "string"
          },
          "ResourceArns": {
              "required": true,
              "type": "array",
              "description": "The Amazon Resource Name (ARN) of the resource."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "add_tags",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_add_tags",
      "id": "5b87f8280a8b8a567f589235",
      "uid": "action:aws:elbv2_add_tags"
  },
  {
      "name": "elbv2_create_listener",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "SslPolicy": {
              "type": "string",
              "description": "The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "DefaultActions": {
              "required": true,
              "type": "array",
              "description": "The default action for the listener."
          },
          "headers": {
              "type": "string"
          },
          "LoadBalancerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "action": {
              "default": "create_listener",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Certificates": {
              "type": "array",
              "description": "The SSL server certificate. You must provide exactly one certificate if the protocol is HTTPS."
          },
          "Protocol": {
              "required": true,
              "type": "string",
              "description": "The protocol for connections from clients to the load balancer."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Port": {
              "required": true,
              "type": "integer",
              "description": "The port on which the load balancer is listening."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_create_listener",
      "id": "5b87f8280a8b8a567f589236",
      "uid": "action:aws:elbv2_create_listener"
  },
  {
      "name": "elbv2_create_load_balancer",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "IpAddressType": {
              "type": "string",
              "description": "The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 (for IPv4 addresses) and dualstack (for IPv4 and IPv6 addresses). Internal load balancers must use ipv4."
          },
          "Subnets": {
              "required": true,
              "type": "array",
              "description": "The IDs of the subnets to attach to the load balancer. You can specify only one subnet per Availability Zone. You must specify subnets from at least two Availability Zones."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "Tags": {
              "type": "array",
              "description": "One or more tags to assign to the load balancer."
          },
          "headers": {
              "type": "string"
          },
          "SecurityGroups": {
              "type": "array",
              "description": "The IDs of the security groups to assign to the load balancer."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Name": {
              "required": true,
              "type": "string",
              "description": "The name of the load balancer. This name must be unique within your AWS account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen."
          },
          "Scheme": {
              "type": "string",
              "description": "The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the Internet. The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer. The default is an Internet-facing load balancer."
          },
          "action": {
              "default": "create_load_balancer",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_create_load_balancer",
      "id": "5b87f8280a8b8a567f589237",
      "uid": "action:aws:elbv2_create_load_balancer"
  },
  {
      "name": "elbv2_create_rule",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Actions": {
              "required": true,
              "type": "array",
              "description": "An action. Each action has the type forward and specifies a target group."
          },
          "Priority": {
              "required": true,
              "type": "integer",
              "description": "The priority for the rule. A listener can't have multiple rules with the same priority."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Conditions": {
              "required": true,
              "type": "array",
              "description": "A condition. Each condition has the field path-pattern and specifies one path pattern. A path pattern is case sensitive, can be up to 128 characters in length, and can contain any of the following characters. Note that you can include up to three wildcard characters in a path pattern.   A-Z, a-z, 0-9   _ - . $ / ~ ' ' @ : +   &amp; (using &amp;amp;)   * (matches 0 or more characters)   ? (matches exactly 1 character)  "
          },
          "action": {
              "default": "create_rule",
              "type": "string",
              "immutable": true
          },
          "ListenerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the listener."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_create_rule",
      "id": "5b87f8280a8b8a567f589238",
      "uid": "action:aws:elbv2_create_rule"
  },
  {
      "name": "elbv2_create_target_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "HealthCheckPath": {
              "type": "string",
              "description": "The ping path that is the destination on the targets for health checks. The default is /."
          },
          "HealthCheckIntervalSeconds": {
              "type": "integer",
              "description": "The approximate amount of time, in seconds, between health checks of an individual target. The default is 30 seconds."
          },
          "VpcId": {
              "required": true,
              "type": "string",
              "description": "The identifier of the virtual private cloud (VPC)."
          },
          "Protocol": {
              "required": true,
              "type": "string",
              "description": "The protocol to use for routing traffic to the targets."
          },
          "Name": {
              "required": true,
              "type": "string",
              "description": "The name of the target group."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "HealthCheckProtocol": {
              "type": "string",
              "description": "The protocol the load balancer uses when performing health checks on targets. The default is the HTTP protocol."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Matcher": {
              "type": "object",
              "description": "The HTTP codes to use when checking for a successful response from a target. The default is 200."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Port": {
              "required": true,
              "type": "integer",
              "description": "The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target."
          },
          "HealthyThresholdCount": {
              "type": "integer",
              "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy. The default is 5."
          },
          "headers": {
              "type": "string"
          },
          "HealthCheckTimeoutSeconds": {
              "type": "integer",
              "description": "The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5 seconds."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_target_group",
              "type": "string",
              "immutable": true
          },
          "HealthCheckPort": {
              "type": "string",
              "description": "The port the load balancer uses when performing health checks on targets. The default is traffic-port, which indicates the port on which each target receives traffic from the load balancer."
          },
          "UnhealthyThresholdCount": {
              "type": "integer",
              "description": "The number of consecutive health check failures required before considering a target unhealthy. The default is 2."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_create_target_group",
      "id": "5b87f8280a8b8a567f589239",
      "uid": "action:aws:elbv2_create_target_group"
  },
  {
      "name": "elbv2_delete_listener",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_listener",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ListenerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the listener."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_delete_listener",
      "id": "5b87f8280a8b8a567f58923a",
      "uid": "action:aws:elbv2_delete_listener"
  },
  {
      "name": "elbv2_delete_load_balancer",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_load_balancer",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "LoadBalancerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_delete_load_balancer",
      "id": "5b87f8280a8b8a567f58923b",
      "uid": "action:aws:elbv2_delete_load_balancer"
  },
  {
      "name": "elbv2_delete_rule",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "RuleArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the rule."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_rule",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_delete_rule",
      "id": "5b87f8280a8b8a567f58923c",
      "uid": "action:aws:elbv2_delete_rule"
  },
  {
      "name": "elbv2_delete_target_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "TargetGroupArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the target group."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_target_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_delete_target_group",
      "id": "5b87f8280a8b8a567f58923d",
      "uid": "action:aws:elbv2_delete_target_group"
  },
  {
      "name": "elbv2_deregister_targets",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "TargetGroupArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the target group."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "deregister_targets",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Targets": {
              "required": true,
              "type": "array",
              "description": "The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_deregister_targets",
      "id": "5b87f8280a8b8a567f58923e",
      "uid": "action:aws:elbv2_deregister_targets"
  },
  {
      "name": "elbv2_describe_listeners",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "ListenerArns": {
              "type": "array",
              "description": "The Amazon Resource Names (ARN) of the listeners."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "PageSize": {
              "type": "integer",
              "description": "The maximum number of results to return with this call."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": "The marker for the next set of results. (You received this marker from a previous call.)"
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "LoadBalancerArn": {
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "action": {
              "default": "describe_listeners",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_listeners",
      "id": "5b87f8280a8b8a567f58923f",
      "uid": "action:aws:elbv2_describe_listeners"
  },
  {
      "name": "elbv2_describe_load_balancer_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_load_balancer_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "LoadBalancerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_load_balancer_attributes",
      "id": "5b87f8280a8b8a567f589240",
      "uid": "action:aws:elbv2_describe_load_balancer_attributes"
  },
  {
      "name": "elbv2_describe_load_balancers",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "LoadBalancerArns": {
              "type": "array",
              "description": "The Amazon Resource Names (ARN) of the load balancers."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "PageSize": {
              "type": "integer",
              "description": "The maximum number of results to return with this call."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "Names": {
              "type": "array",
              "description": "The names of the load balancers."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": "The marker for the next set of results. (You received this marker from a previous call.)"
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_load_balancers",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_load_balancers",
      "id": "5b87f8280a8b8a567f589241",
      "uid": "action:aws:elbv2_describe_load_balancers"
  },
  {
      "name": "elbv2_describe_rules",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "RuleArns": {
              "type": "array",
              "description": "The Amazon Resource Names (ARN) of the rules."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_rules",
              "type": "string",
              "immutable": true
          },
          "ListenerArn": {
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the listener."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_rules",
      "id": "5b87f8280a8b8a567f589242",
      "uid": "action:aws:elbv2_describe_rules"
  },
  {
      "name": "elbv2_describe_ssl_policies",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "PageSize": {
              "type": "integer",
              "description": "The maximum number of results to return with this call."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "Names": {
              "type": "array",
              "description": "The names of the policies."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": "The marker for the next set of results. (You received this marker from a previous call.)"
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_ssl_policies",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_ssl_policies",
      "id": "5b87f8280a8b8a567f589243",
      "uid": "action:aws:elbv2_describe_ssl_policies"
  },
  {
      "name": "elbv2_describe_tags",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "ResourceArns": {
              "required": true,
              "type": "array",
              "description": "The Amazon Resource Names (ARN) of the resources."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_tags",
      "id": "5b87f8280a8b8a567f589244",
      "uid": "action:aws:elbv2_describe_tags"
  },
  {
      "name": "elbv2_describe_target_group_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "TargetGroupArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the target group."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_target_group_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_target_group_attributes",
      "id": "5b87f8280a8b8a567f589245",
      "uid": "action:aws:elbv2_describe_target_group_attributes"
  },
  {
      "name": "elbv2_describe_target_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "PageSize": {
              "type": "integer",
              "description": "The maximum number of results to return with this call."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "Names": {
              "type": "array",
              "description": "The names of the target groups."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": "The marker for the next set of results. (You received this marker from a previous call.)"
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "TargetGroupArns": {
              "type": "array",
              "description": "The Amazon Resource Names (ARN) of the target groups."
          },
          "LoadBalancerArn": {
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "action": {
              "default": "describe_target_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_target_groups",
      "id": "5b87f8280a8b8a567f589246",
      "uid": "action:aws:elbv2_describe_target_groups"
  },
  {
      "name": "elbv2_describe_target_health",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "TargetGroupArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the target group."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "describe_target_health",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Targets": {
              "type": "array",
              "description": "The targets."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_describe_target_health",
      "id": "5b87f8280a8b8a567f589247",
      "uid": "action:aws:elbv2_describe_target_health"
  },
  {
      "name": "elbv2_modify_listener",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "SslPolicy": {
              "type": "string",
              "description": "The security policy that defines which ciphers and protocols are supported."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "DefaultActions": {
              "type": "array",
              "description": "The default actions."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "modify_listener",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Certificates": {
              "type": "array",
              "description": "The SSL server certificate."
          },
          "Protocol": {
              "type": "string",
              "description": "The protocol for connections from clients to the load balancer."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Port": {
              "type": "integer",
              "description": "The port for connections from clients to the load balancer."
          },
          "ListenerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the listener."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_modify_listener",
      "id": "5b87f8280a8b8a567f589248",
      "uid": "action:aws:elbv2_modify_listener"
  },
  {
      "name": "elbv2_modify_load_balancer_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "LoadBalancerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "Attributes": {
              "required": true,
              "type": "array",
              "description": "The load balancer attributes."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "modify_load_balancer_attributes",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_modify_load_balancer_attributes",
      "id": "5b87f8280a8b8a567f589249",
      "uid": "action:aws:elbv2_modify_load_balancer_attributes"
  },
  {
      "name": "elbv2_modify_rule",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "RuleArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the rule."
          },
          "Actions": {
              "type": "array",
              "description": "The actions."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Conditions": {
              "type": "array",
              "description": "The conditions."
          },
          "action": {
              "default": "modify_rule",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_modify_rule",
      "id": "5b87f8280a8b8a567f58924a",
      "uid": "action:aws:elbv2_modify_rule"
  },
  {
      "name": "elbv2_modify_target_group",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "HealthCheckPath": {
              "type": "string",
              "description": "The ping path that is the destination for the health check request."
          },
          "HealthCheckIntervalSeconds": {
              "type": "integer",
              "description": "The approximate amount of time, in seconds, between health checks of an individual target."
          },
          "TargetGroupArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the target group."
          },
          "HealthCheckPort": {
              "type": "string",
              "description": "The port to use to connect with the target."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "HealthCheckProtocol": {
              "type": "string",
              "description": "The protocol to use to connect with the target."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "HealthyThresholdCount": {
              "type": "integer",
              "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy."
          },
          "headers": {
              "type": "string"
          },
          "HealthCheckTimeoutSeconds": {
              "type": "integer",
              "description": "The amount of time, in seconds, during which no response means a failed health check."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Matcher": {
              "type": "object",
              "description": "The HTTP codes to use when checking for a successful response from a target."
          },
          "action": {
              "default": "modify_target_group",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "UnhealthyThresholdCount": {
              "type": "integer",
              "description": "The number of consecutive health check failures required before considering the target unhealthy."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_modify_target_group",
      "id": "5b87f8280a8b8a567f58924b",
      "uid": "action:aws:elbv2_modify_target_group"
  },
  {
      "name": "elbv2_modify_target_group_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "TargetGroupArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the target group."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Attributes": {
              "required": true,
              "type": "array",
              "description": "The attributes."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "modify_target_group_attributes",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_modify_target_group_attributes",
      "id": "5b87f8280a8b8a567f58924c",
      "uid": "action:aws:elbv2_modify_target_group_attributes"
  },
  {
      "name": "elbv2_register_targets",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "TargetGroupArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the target group."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "register_targets",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Targets": {
              "required": true,
              "type": "array",
              "description": "The targets. The default port for a target is the port for the target group. You can specify a port override. If a target is already registered, you can register it again using a different port."
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_register_targets",
      "id": "5b87f8280a8b8a567f58924d",
      "uid": "action:aws:elbv2_register_targets"
  },
  {
      "name": "elbv2_remove_tags",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "ResourceArns": {
              "required": true,
              "type": "array",
              "description": "The Amazon Resource Name (ARN) of the resource."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "TagKeys": {
              "required": true,
              "type": "array",
              "description": "The tag keys for the tags to remove."
          },
          "action": {
              "default": "remove_tags",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_remove_tags",
      "id": "5b87f8280a8b8a567f58924e",
      "uid": "action:aws:elbv2_remove_tags"
  },
  {
      "name": "elbv2_set_ip_address_type",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "IpAddressType": {
              "required": true,
              "type": "string",
              "description": "The IP address type. The possible values are ipv4 (for IPv4 addresses) and dualstack (for IPv4 and IPv6 addresses). Internal load balancers must use ipv4."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "LoadBalancerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "action": {
              "default": "set_ip_address_type",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_set_ip_address_type",
      "id": "5b87f8280a8b8a567f58924f",
      "uid": "action:aws:elbv2_set_ip_address_type"
  },
  {
      "name": "elbv2_set_rule_priorities",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "RulePriorities": {
              "required": true,
              "type": "array",
              "description": "The rule priorities."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_rule_priorities",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_set_rule_priorities",
      "id": "5b87f8280a8b8a567f589250",
      "uid": "action:aws:elbv2_set_rule_priorities"
  },
  {
      "name": "elbv2_set_security_groups",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "SecurityGroups": {
              "required": true,
              "type": "array",
              "description": "The IDs of the security groups."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "LoadBalancerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "action": {
              "default": "set_security_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_set_security_groups",
      "id": "5b87f8290a8b8a567f589251",
      "uid": "action:aws:elbv2_set_security_groups"
  },
  {
      "name": "elbv2_set_subnets",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "Subnets": {
              "required": true,
              "type": "array",
              "description": "The IDs of the subnets. You must specify at least two subnets. You can add only one subnet per Availability Zone."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "LoadBalancerArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the load balancer."
          },
          "action": {
              "default": "set_subnets",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "elbv2",
              "type": "string"
          }
      },
      "ref": "aws.elbv2_set_subnets",
      "id": "5b87f8290a8b8a567f589252",
      "uid": "action:aws:elbv2_set_subnets"
  },
  {
      "name": "iam_add_role_to_instance_profile",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "instance_profile_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "add_role_to_instance_profile",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_add_role_to_instance_profile",
      "pack": "aws",
      "ref": "aws.iam_add_role_to_instance_profile",
      "id": "5b87f8290a8b8a567f589253",
      "runner_type": "python-script"
  },
  {
      "name": "iam_add_user_to_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "add_user_to_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_add_user_to_group",
      "pack": "aws",
      "ref": "aws.iam_add_user_to_group",
      "id": "5b87f8290a8b8a567f589254",
      "runner_type": "python-script"
  },
  {
      "name": "iam_build_base_http_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "default": "build_base_http_request",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "host": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "auth_path": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_build_base_http_request",
      "pack": "aws",
      "ref": "aws.iam_build_base_http_request",
      "id": "5b87f8290a8b8a567f589255",
      "runner_type": "python-script"
  },
  {
      "name": "iam_build_complex_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_complex_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_build_complex_list_params",
      "pack": "aws",
      "ref": "aws.iam_build_complex_list_params",
      "id": "5b87f8290a8b8a567f589256",
      "runner_type": "python-script"
  },
  {
      "name": "iam_build_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_build_list_params",
      "pack": "aws",
      "ref": "aws.iam_build_list_params",
      "id": "5b87f8290a8b8a567f589257",
      "runner_type": "python-script"
  },
  {
      "name": "iam_close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "close",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_close",
      "pack": "aws",
      "ref": "aws.iam_close",
      "id": "5b87f8290a8b8a567f589258",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_access_key",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_access_key",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_access_key",
      "pack": "aws",
      "ref": "aws.iam_create_access_key",
      "id": "5b87f8290a8b8a567f589259",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_account_alias",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "alias": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_account_alias",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_account_alias",
      "pack": "aws",
      "ref": "aws.iam_create_account_alias",
      "id": "5b87f8290a8b8a567f58925a",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_group",
      "pack": "aws",
      "ref": "aws.iam_create_group",
      "id": "5b87f8290a8b8a567f58925b",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_instance_profile",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "instance_profile_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_instance_profile",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_instance_profile",
      "pack": "aws",
      "ref": "aws.iam_create_instance_profile",
      "id": "5b87f8290a8b8a567f58925c",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_login_profile",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_login_profile",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "password": {
              "required": true,
              "type": "string"
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_login_profile",
      "pack": "aws",
      "ref": "aws.iam_create_login_profile",
      "id": "5b87f8290a8b8a567f58925d",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_role",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "assume_role_policy_document": {
              "type": "string"
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "path": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_role",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_role",
      "pack": "aws",
      "ref": "aws.iam_create_role",
      "id": "5b87f8290a8b8a567f58925e",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_saml_provider",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_saml_provider",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "saml_metadata_document": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_saml_provider",
      "pack": "aws",
      "ref": "aws.iam_create_saml_provider",
      "id": "5b87f8290a8b8a567f58925f",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_user",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_user",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_user",
      "pack": "aws",
      "ref": "aws.iam_create_user",
      "id": "5b87f8290a8b8a567f589260",
      "runner_type": "python-script"
  },
  {
      "name": "iam_create_virtual_mfa_device",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "device_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_virtual_mfa_device",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_create_virtual_mfa_device",
      "pack": "aws",
      "ref": "aws.iam_create_virtual_mfa_device",
      "id": "5b87f8290a8b8a567f589261",
      "runner_type": "python-script"
  },
  {
      "name": "iam_deactivate_mfa_device",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "deactivate_mfa_device",
              "type": "string",
              "immutable": true
          },
          "serial_number": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_deactivate_mfa_device",
      "pack": "aws",
      "ref": "aws.iam_deactivate_mfa_device",
      "id": "5b87f8290a8b8a567f589262",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_access_key",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "user_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "access_key_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "delete_access_key",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_access_key",
      "pack": "aws",
      "ref": "aws.iam_delete_access_key",
      "id": "5b87f8290a8b8a567f589263",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_account_alias",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "alias": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_account_alias",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_account_alias",
      "pack": "aws",
      "ref": "aws.iam_delete_account_alias",
      "id": "5b87f8290a8b8a567f589264",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_account_password_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_account_password_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_account_password_policy",
      "pack": "aws",
      "ref": "aws.iam_delete_account_password_policy",
      "id": "5b87f8290a8b8a567f589265",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_group",
      "pack": "aws",
      "ref": "aws.iam_delete_group",
      "id": "5b87f8290a8b8a567f589266",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_group_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_group_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_group_policy",
      "pack": "aws",
      "ref": "aws.iam_delete_group_policy",
      "id": "5b87f8290a8b8a567f589267",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_instance_profile",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "instance_profile_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_instance_profile",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_instance_profile",
      "pack": "aws",
      "ref": "aws.iam_delete_instance_profile",
      "id": "5b87f8290a8b8a567f589268",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_login_profile",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_login_profile",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_login_profile",
      "pack": "aws",
      "ref": "aws.iam_delete_login_profile",
      "id": "5b87f8290a8b8a567f589269",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_role",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_role",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_role",
      "pack": "aws",
      "ref": "aws.iam_delete_role",
      "id": "5b87f8290a8b8a567f58926a",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_role_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_role_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_role_policy",
      "pack": "aws",
      "ref": "aws.iam_delete_role_policy",
      "id": "5b87f8290a8b8a567f58926b",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_saml_provider",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "saml_provider_arn": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_saml_provider",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_saml_provider",
      "pack": "aws",
      "ref": "aws.iam_delete_saml_provider",
      "id": "5b87f8290a8b8a567f58926c",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_server_cert",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "cert_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_server_cert",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_server_cert",
      "pack": "aws",
      "ref": "aws.iam_delete_server_cert",
      "id": "5b87f8290a8b8a567f58926d",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_signing_cert",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "user_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "cert_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "delete_signing_cert",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_signing_cert",
      "pack": "aws",
      "ref": "aws.iam_delete_signing_cert",
      "id": "5b87f8290a8b8a567f58926e",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_user",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_user",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_user",
      "pack": "aws",
      "ref": "aws.iam_delete_user",
      "id": "5b87f8290a8b8a567f58926f",
      "runner_type": "python-script"
  },
  {
      "name": "iam_delete_user_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_user_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_delete_user_policy",
      "pack": "aws",
      "ref": "aws.iam_delete_user_policy",
      "id": "5b87f8290a8b8a567f589270",
      "runner_type": "python-script"
  },
  {
      "name": "iam_enable_mfa_device",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "auth_code_2": {
              "required": true,
              "type": "string"
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "auth_code_1": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "serial_number": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "enable_mfa_device",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_enable_mfa_device",
      "pack": "aws",
      "ref": "aws.iam_enable_mfa_device",
      "id": "5b87f8290a8b8a567f589271",
      "runner_type": "python-script"
  },
  {
      "name": "iam_generate_credential_report",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "generate_credential_report",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_generate_credential_report",
      "pack": "aws",
      "ref": "aws.iam_generate_credential_report",
      "id": "5b87f8290a8b8a567f589272",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_account_alias",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_account_alias",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_account_alias",
      "pack": "aws",
      "ref": "aws.iam_get_account_alias",
      "id": "5b87f8290a8b8a567f589273",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_account_password_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_account_password_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_account_password_policy",
      "pack": "aws",
      "ref": "aws.iam_get_account_password_policy",
      "id": "5b87f8290a8b8a567f589274",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_account_summary",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_account_summary",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_account_summary",
      "pack": "aws",
      "ref": "aws.iam_get_account_summary",
      "id": "5b87f8290a8b8a567f589275",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_all_access_keys",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_all_access_keys",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_all_access_keys",
      "pack": "aws",
      "ref": "aws.iam_get_all_access_keys",
      "id": "5b87f8290a8b8a567f589276",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_all_group_policies",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_group_policies",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_all_group_policies",
      "pack": "aws",
      "ref": "aws.iam_get_all_group_policies",
      "id": "5b87f8290a8b8a567f589277",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_all_groups",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "path_prefix": {
              "default": "/",
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_all_groups",
      "pack": "aws",
      "ref": "aws.iam_get_all_groups",
      "id": "5b87f8290a8b8a567f589278",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_all_mfa_devices",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_all_mfa_devices",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_all_mfa_devices",
      "pack": "aws",
      "ref": "aws.iam_get_all_mfa_devices",
      "id": "5b87f8290a8b8a567f589279",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_all_server_certs",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "path_prefix": {
              "default": "/",
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_server_certs",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_all_server_certs",
      "pack": "aws",
      "ref": "aws.iam_get_all_server_certs",
      "id": "5b87f8290a8b8a567f58927a",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_all_signing_certs",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "type": "string"
          },
          "action": {
              "default": "get_all_signing_certs",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_all_signing_certs",
      "pack": "aws",
      "ref": "aws.iam_get_all_signing_certs",
      "id": "5b87f8290a8b8a567f58927b",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_all_user_policies",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_all_user_policies",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_all_user_policies",
      "pack": "aws",
      "ref": "aws.iam_get_all_user_policies",
      "id": "5b87f8290a8b8a567f58927c",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_all_users",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "path_prefix": {
              "default": "/",
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_users",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_all_users",
      "pack": "aws",
      "ref": "aws.iam_get_all_users",
      "id": "5b87f8290a8b8a567f58927d",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_credential_report",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_credential_report",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_credential_report",
      "pack": "aws",
      "ref": "aws.iam_get_credential_report",
      "id": "5b87f82a0a8b8a567f58927e",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_group",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_group",
      "pack": "aws",
      "ref": "aws.iam_get_group",
      "id": "5b87f82a0a8b8a567f58927f",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_group_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_group_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_group_policy",
      "pack": "aws",
      "ref": "aws.iam_get_group_policy",
      "id": "5b87f82a0a8b8a567f589280",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_groups_for_user",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_groups_for_user",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_groups_for_user",
      "pack": "aws",
      "ref": "aws.iam_get_groups_for_user",
      "id": "5b87f82a0a8b8a567f589281",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_http_connection",
      "pack": "aws",
      "ref": "aws.iam_get_http_connection",
      "id": "5b87f82a0a8b8a567f589282",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_instance_profile",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "instance_profile_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_instance_profile",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_instance_profile",
      "pack": "aws",
      "ref": "aws.iam_get_instance_profile",
      "id": "5b87f82a0a8b8a567f589283",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "markers": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_list",
      "pack": "aws",
      "ref": "aws.iam_get_list",
      "id": "5b87f82a0a8b8a567f589284",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_login_profiles",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_login_profiles",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_login_profiles",
      "pack": "aws",
      "ref": "aws.iam_get_login_profiles",
      "id": "5b87f82a0a8b8a567f589285",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_object",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_object",
      "pack": "aws",
      "ref": "aws.iam_get_object",
      "id": "5b87f82a0a8b8a567f589286",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_path",
      "pack": "aws",
      "ref": "aws.iam_get_path",
      "id": "5b87f82a0a8b8a567f589287",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_proxy_auth_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_auth_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_proxy_auth_header",
      "pack": "aws",
      "ref": "aws.iam_get_proxy_auth_header",
      "id": "5b87f82a0a8b8a567f589288",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_proxy_url_with_auth",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_url_with_auth",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_proxy_url_with_auth",
      "pack": "aws",
      "ref": "aws.iam_get_proxy_url_with_auth",
      "id": "5b87f82a0a8b8a567f589289",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_response",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "POST",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "list_marker": {
              "default": "Set",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_response",
      "pack": "aws",
      "ref": "aws.iam_get_response",
      "id": "5b87f82a0a8b8a567f58928a",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_role",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_role",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_role",
      "pack": "aws",
      "ref": "aws.iam_get_role",
      "id": "5b87f82a0a8b8a567f58928b",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_role_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_role_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_role_policy",
      "pack": "aws",
      "ref": "aws.iam_get_role_policy",
      "id": "5b87f82a0a8b8a567f58928c",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_saml_provider",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "saml_provider_arn": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_saml_provider",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_saml_provider",
      "pack": "aws",
      "ref": "aws.iam_get_saml_provider",
      "id": "5b87f82a0a8b8a567f58928d",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_server_certificate",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "cert_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_server_certificate",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_server_certificate",
      "pack": "aws",
      "ref": "aws.iam_get_server_certificate",
      "id": "5b87f82a0a8b8a567f58928e",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_signin_url",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "service": {
              "default": "ec2",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_signin_url",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_signin_url",
      "pack": "aws",
      "ref": "aws.iam_get_signin_url",
      "id": "5b87f82a0a8b8a567f58928f",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_status",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_status",
      "pack": "aws",
      "ref": "aws.iam_get_status",
      "id": "5b87f82a0a8b8a567f589290",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_user",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_user",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_user",
      "pack": "aws",
      "ref": "aws.iam_get_user",
      "id": "5b87f82a0a8b8a567f589291",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_user_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_user_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_user_policy",
      "pack": "aws",
      "ref": "aws.iam_get_user_policy",
      "id": "5b87f82a0a8b8a567f589292",
      "runner_type": "python-script"
  },
  {
      "name": "iam_get_utf8_value",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_utf8_value",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_get_utf8_value",
      "pack": "aws",
      "ref": "aws.iam_get_utf8_value",
      "id": "5b87f82a0a8b8a567f589293",
      "runner_type": "python-script"
  },
  {
      "name": "iam_handle_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "proxy_pass": {
              "required": true,
              "type": "string"
          },
          "proxy_port": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "proxy": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "handle_proxy",
              "type": "string",
              "immutable": true
          },
          "proxy_user": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_handle_proxy",
      "pack": "aws",
      "ref": "aws.iam_handle_proxy",
      "id": "5b87f82a0a8b8a567f589294",
      "runner_type": "python-script"
  },
  {
      "name": "iam_list_instance_profiles",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "path_prefix": {
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_instance_profiles",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_list_instance_profiles",
      "pack": "aws",
      "ref": "aws.iam_list_instance_profiles",
      "id": "5b87f82a0a8b8a567f589295",
      "runner_type": "python-script"
  },
  {
      "name": "iam_list_instance_profiles_for_role",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_instance_profiles_for_role",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_list_instance_profiles_for_role",
      "pack": "aws",
      "ref": "aws.iam_list_instance_profiles_for_role",
      "id": "5b87f82a0a8b8a567f589296",
      "runner_type": "python-script"
  },
  {
      "name": "iam_list_role_policies",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_role_policies",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_list_role_policies",
      "pack": "aws",
      "ref": "aws.iam_list_role_policies",
      "id": "5b87f82a0a8b8a567f589297",
      "runner_type": "python-script"
  },
  {
      "name": "iam_list_roles",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "path_prefix": {
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_roles",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_list_roles",
      "pack": "aws",
      "ref": "aws.iam_list_roles",
      "id": "5b87f82a0a8b8a567f589298",
      "runner_type": "python-script"
  },
  {
      "name": "iam_list_saml_providers",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_saml_providers",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_list_saml_providers",
      "pack": "aws",
      "ref": "aws.iam_list_saml_providers",
      "id": "5b87f82a0a8b8a567f589299",
      "runner_type": "python-script"
  },
  {
      "name": "iam_list_server_certs",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_items": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "path_prefix": {
              "default": "/",
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_server_certs",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_list_server_certs",
      "pack": "aws",
      "ref": "aws.iam_list_server_certs",
      "id": "5b87f82a0a8b8a567f58929a",
      "runner_type": "python-script"
  },
  {
      "name": "iam_make_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_make_request",
      "pack": "aws",
      "ref": "aws.iam_make_request",
      "id": "5b87f82a0a8b8a567f58929b",
      "runner_type": "python-script"
  },
  {
      "name": "iam_new_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "new_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_new_http_connection",
      "pack": "aws",
      "ref": "aws.iam_new_http_connection",
      "id": "5b87f82a0a8b8a567f58929c",
      "runner_type": "python-script"
  },
  {
      "name": "iam_prefix_proxy_to_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "prefix_proxy_to_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_prefix_proxy_to_path",
      "pack": "aws",
      "ref": "aws.iam_prefix_proxy_to_path",
      "id": "5b87f82a0a8b8a567f58929d",
      "runner_type": "python-script"
  },
  {
      "name": "iam_proxy_ssl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "proxy_ssl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_proxy_ssl",
      "pack": "aws",
      "ref": "aws.iam_proxy_ssl",
      "id": "5b87f82a0a8b8a567f58929e",
      "runner_type": "python-script"
  },
  {
      "name": "iam_put_group_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "policy_json": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "put_group_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_put_group_policy",
      "pack": "aws",
      "ref": "aws.iam_put_group_policy",
      "id": "5b87f82a0a8b8a567f58929f",
      "runner_type": "python-script"
  },
  {
      "name": "iam_put_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "connection": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_put_http_connection",
      "pack": "aws",
      "ref": "aws.iam_put_http_connection",
      "id": "5b87f82a0a8b8a567f5892a0",
      "runner_type": "python-script"
  },
  {
      "name": "iam_put_role_policy",
      "parameters": {
          "policy_document": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "put_role_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_put_role_policy",
      "pack": "aws",
      "ref": "aws.iam_put_role_policy",
      "id": "5b87f82a0a8b8a567f5892a1",
      "runner_type": "python-script"
  },
  {
      "name": "iam_put_user_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "policy_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "policy_json": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "put_user_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_put_user_policy",
      "pack": "aws",
      "ref": "aws.iam_put_user_policy",
      "id": "5b87f82a0a8b8a567f5892a2",
      "runner_type": "python-script"
  },
  {
      "name": "iam_remove_role_from_instance_profile",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "instance_profile_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "remove_role_from_instance_profile",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_remove_role_from_instance_profile",
      "pack": "aws",
      "ref": "aws.iam_remove_role_from_instance_profile",
      "id": "5b87f82a0a8b8a567f5892a3",
      "runner_type": "python-script"
  },
  {
      "name": "iam_remove_user_from_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "remove_user_from_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_remove_user_from_group",
      "pack": "aws",
      "ref": "aws.iam_remove_user_from_group",
      "id": "5b87f82a0a8b8a567f5892a4",
      "runner_type": "python-script"
  },
  {
      "name": "iam_resync_mfa_device",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "auth_code_2": {
              "required": true,
              "type": "string"
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "auth_code_1": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "serial_number": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "resync_mfa_device",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_resync_mfa_device",
      "pack": "aws",
      "ref": "aws.iam_resync_mfa_device",
      "id": "5b87f82a0a8b8a567f5892a5",
      "runner_type": "python-script"
  },
  {
      "name": "iam_server_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "server_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_server_name",
      "pack": "aws",
      "ref": "aws.iam_server_name",
      "id": "5b87f82a0a8b8a567f5892a6",
      "runner_type": "python-script"
  },
  {
      "name": "iam_set_host_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "request": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_host_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_set_host_header",
      "pack": "aws",
      "ref": "aws.iam_set_host_header",
      "id": "5b87f82a0a8b8a567f5892a7",
      "runner_type": "python-script"
  },
  {
      "name": "iam_set_request_hook",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "hook": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_request_hook",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_set_request_hook",
      "pack": "aws",
      "ref": "aws.iam_set_request_hook",
      "id": "5b87f82a0a8b8a567f5892a8",
      "runner_type": "python-script"
  },
  {
      "name": "iam_skip_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "skip_proxy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_skip_proxy",
      "pack": "aws",
      "ref": "aws.iam_skip_proxy",
      "id": "5b87f82a0a8b8a567f5892a9",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_access_key",
      "parameters": {
          "status": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "user_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "access_key_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "update_access_key",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_access_key",
      "pack": "aws",
      "ref": "aws.iam_update_access_key",
      "id": "5b87f82a0a8b8a567f5892aa",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_account_password_policy",
      "parameters": {
          "hard_expiry": {
              "type": "string"
          },
          "password_reuse_prevention": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "require_uppercase_characters": {
              "type": "string"
          },
          "require_symbols": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "minimum_password_length": {
              "type": "string"
          },
          "require_numbers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "update_account_password_policy",
              "type": "string",
              "immutable": true
          },
          "allow_users_to_change_password": {
              "type": "string"
          },
          "require_lowercase_characters": {
              "type": "string"
          },
          "max_password_age": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_account_password_policy",
      "pack": "aws",
      "ref": "aws.iam_update_account_password_policy",
      "id": "5b87f82a0a8b8a567f5892ab",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_assume_role_policy",
      "parameters": {
          "policy_document": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "role_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "update_assume_role_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_assume_role_policy",
      "pack": "aws",
      "ref": "aws.iam_update_assume_role_policy",
      "id": "5b87f82a0a8b8a567f5892ac",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "new_group_name": {
              "type": "string"
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "update_group",
              "type": "string",
              "immutable": true
          },
          "new_path": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_group",
      "pack": "aws",
      "ref": "aws.iam_update_group",
      "id": "5b87f82a0a8b8a567f5892ad",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_login_profile",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "update_login_profile",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "password": {
              "required": true,
              "type": "string"
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_login_profile",
      "pack": "aws",
      "ref": "aws.iam_update_login_profile",
      "id": "5b87f82a0a8b8a567f5892ae",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_saml_provider",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "saml_provider_arn": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "update_saml_provider",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "saml_metadata_document": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_saml_provider",
      "pack": "aws",
      "ref": "aws.iam_update_saml_provider",
      "id": "5b87f82a0a8b8a567f5892af",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_server_cert",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "cert_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "update_server_cert",
              "type": "string",
              "immutable": true
          },
          "new_path": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "new_cert_name": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_server_cert",
      "pack": "aws",
      "ref": "aws.iam_update_server_cert",
      "id": "5b87f82a0a8b8a567f5892b0",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_signing_cert",
      "parameters": {
          "status": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "user_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "update_signing_cert",
              "type": "string",
              "immutable": true
          },
          "cert_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_signing_cert",
      "pack": "aws",
      "ref": "aws.iam_update_signing_cert",
      "id": "5b87f82a0a8b8a567f5892b1",
      "runner_type": "python-script"
  },
  {
      "name": "iam_update_user",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "new_user_name": {
              "type": "string"
          },
          "user_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "update_user",
              "type": "string",
              "immutable": true
          },
          "new_path": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_update_user",
      "pack": "aws",
      "ref": "aws.iam_update_user",
      "id": "5b87f82a0a8b8a567f5892b2",
      "runner_type": "python-script"
  },
  {
      "name": "iam_upload_server_cert",
      "parameters": {
          "private_key": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "cert_body": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "cert_name": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "type": "string"
          },
          "action": {
              "default": "upload_server_cert",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cert_chain": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_upload_server_cert",
      "pack": "aws",
      "ref": "aws.iam_upload_server_cert",
      "id": "5b87f82a0a8b8a567f5892b3",
      "runner_type": "python-script"
  },
  {
      "name": "iam_upload_signing_cert",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "cert_body": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "upload_signing_cert",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.iam.connection",
              "type": "string",
              "immutable": true
          },
          "user_name": {
              "type": "string"
          },
          "cls": {
              "default": "IAMConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:iam_upload_signing_cert",
      "pack": "aws",
      "ref": "aws.iam_upload_signing_cert",
      "id": "5b87f82b0a8b8a567f5892b4",
      "runner_type": "python-script"
  },
  {
      "name": "lambda_add_permission",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "Name of the Lambda function whose resource policy you are updating by adding a new permission.  You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "headers": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "Action": {
              "required": true,
              "type": "string",
              "description": "The AWS Lambda action you want to allow in this statement. Each Lambda action is a string starting with lambda: followed by the API name . For example, lambda:CreateFunction. You can use wildcard (lambda:*) to grant permission for all AWS Lambda actions. "
          },
          "Principal": {
              "required": true,
              "type": "string",
              "description": "The principal who is getting this permission. It can be Amazon S3 service Principal (s3.amazonaws.com) if you want Amazon S3 to invoke the function, an AWS account ID if you are granting cross-account permission, or any valid AWS service principal such as sns.amazonaws.com. For example, you might want to allow a custom application in another AWS account to push events to AWS Lambda by invoking your function. "
          },
          "StatementId": {
              "required": true,
              "type": "string",
              "description": "A unique statement identifier."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "add_permission",
              "type": "string",
              "immutable": true
          },
          "SourceAccount": {
              "type": "string",
              "description": "This parameter is used for S3, SES, CloudWatch Logs and CloudWatch Rules only. The AWS account ID (without a hyphen) of the source owner. For example, if the SourceArn identifies a bucket, then this is the bucket owner's account ID. You can use this additional condition to ensure the bucket you specify is owned by a specific account (it is possible the bucket owner deleted the bucket and some other AWS account created the bucket). You can also use this condition to specify all sources (that is, you don't specify the SourceArn) owned by a specific account. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          },
          "SourceArn": {
              "type": "string",
              "description": "This is optional; however, when granting Amazon S3 permission to invoke your function, you should specify this field with the Amazon Resource Name (ARN) as its value. This ensures that only events generated from the specified source can invoke the function. If you add a permission for the Amazon S3 principal without providing the source ARN, any AWS account that creates a mapping to your function ARN can send events to invoke your Lambda function from Amazon S3. "
          },
          "EventSourceToken": {
              "type": "string",
              "description": "A unique token that must be supplied by the principal invoking the function. This is currently only used for Alexa Smart Home functions."
          },
          "Qualifier": {
              "type": "string",
              "description": "You can use this optional query parameter to describe a qualified ARN using a function version or an alias name. The permission will then apply to the specific qualified ARN. For example, if you specify function version 2 as the qualifier, then permission applies only when request is made using qualified function ARN:  arn:aws:lambda:aws-region:acct-id:function:function-name:2  If you specify an alias name, for example PROD, then the permission is valid only for requests made using the alias ARN:  arn:aws:lambda:aws-region:acct-id:function:function-name:PROD  If the qualifier is not specified, the permission is valid only when requests is made using unqualified function ARN.  arn:aws:lambda:aws-region:acct-id:function:function-name "
          }
      },
      "ref": "aws.lambda_add_permission",
      "id": "5b87f82b0a8b8a567f5892b5",
      "uid": "action:aws:lambda_add_permission"
  },
  {
      "name": "lambda_create_alias",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Description": {
              "type": "string",
              "description": "Description of the alias."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "FunctionVersion": {
              "required": true,
              "type": "string",
              "description": "Lambda function version for which you are creating the alias."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Name": {
              "required": true,
              "type": "string",
              "description": "Name for the alias you are creating."
          },
          "action": {
              "default": "create_alias",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "Name of the Lambda function for which you want to create an alias."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_create_alias",
      "id": "5b87f82b0a8b8a567f5892b6",
      "uid": "action:aws:lambda_create_alias"
  },
  {
      "name": "lambda_create_event_source_mapping",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "StartingPositionTimestamp": {
              "type": "string",
              "description": "The timestamp of the data record from which to start reading. Used with shard iterator type AT_TIMESTAMP. If a record with this exact timestamp does not exist, the iterator returned is for the next (later) record. If the timestamp is older than the current trim horizon, the iterator returned is for the oldest untrimmed data record (TRIM_HORIZON). Valid only for Kinesis streams. "
          },
          "BatchSize": {
              "type": "integer",
              "description": "The largest number of records that AWS Lambda will retrieve from your event source at the time of invoking your function. Your function receives an event with all the retrieved records. The default is 100 records."
          },
          "Enabled": {
              "type": "boolean",
              "description": "Indicates whether AWS Lambda should begin polling the event source. By default, Enabled is true. "
          },
          "headers": {
              "type": "string"
          },
          "EventSourceArn": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the Amazon Kinesis or the Amazon DynamoDB stream that is the event source. Any record added to this stream could cause AWS Lambda to invoke your Lambda function, it depends on the BatchSize. AWS Lambda POSTs the Amazon Kinesis event, containing records, to your Lambda function as JSON."
          },
          "StartingPosition": {
              "required": true,
              "type": "string",
              "description": "The position in the stream where AWS Lambda should start reading. Valid only for Kinesis streams. For more information, see ShardIteratorType in the Amazon Kinesis API Reference. "
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_event_source_mapping",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The Lambda function to invoke when AWS Lambda detects an event on the stream.  You can specify the function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail).   If you are using versioning, you can also provide a qualified function ARN (ARN that is qualified with function version or alias name as suffix). For more information about versioning, see AWS Lambda Function Versioning and Aliases  AWS Lambda also allows you to specify only the function name with the account ID qualifier (for example, account-id:Thumbnail).  Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_create_event_source_mapping",
      "id": "5b87f82b0a8b8a567f5892b7",
      "uid": "action:aws:lambda_create_event_source_mapping"
  },
  {
      "name": "lambda_create_function",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "Publish": {
              "type": "boolean",
              "description": "This boolean parameter can be used to request AWS Lambda to create the Lambda function and publish a version as an atomic operation."
          },
          "Environment": {
              "type": "object",
              "description": ""
          },
          "Handler": {
              "required": true,
              "type": "string",
              "description": "The function within your code that Lambda calls to begin execution. For Node.js, it is the module-name.export value in your function. For Java, it can be package.class-name::handler or package.class-name. For more information, see Lambda Function Handler (Java). "
          },
          "Role": {
              "required": true,
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the IAM role that Lambda assumes when it executes your function to access any other Amazon Web Services (AWS) resources. For more information, see AWS Lambda: How it Works. "
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "DeadLetterConfig": {
              "type": "object",
              "description": "The parent object that contains the target Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic. "
          },
          "Description": {
              "type": "string",
              "description": "A short, user-defined function description. Lambda does not use this value. Assign a meaningful description as you see fit."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The name you want to assign to the function you are uploading. The function names appear in the console and are returned in the ListFunctions API. Function names are used to specify functions to other AWS Lambda API operations, such as Invoke. "
          },
          "MemorySize": {
              "type": "integer",
              "description": "The amount of memory, in MB, your Lambda function is given. Lambda uses this memory size to infer the amount of CPU and memory allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB."
          },
          "action": {
              "default": "create_function",
              "type": "string",
              "immutable": true
          },
          "Timeout": {
              "type": "integer",
              "description": "The function execution time at which Lambda should terminate the function. Because the execution time has cost implications, we recommend you set this value based on your expected execution time. The default is 3 seconds."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Runtime": {
              "required": true,
              "type": "string",
              "description": "The runtime environment for the Lambda function you are uploading. To use the Node.js runtime v4.3, set the value to 'nodejs4.3'. To use earlier runtime (v0.10.42), set the value to 'nodejs'.  You can no longer create functions using the v0.10.42 runtime version as of November, 2016. Existing functions will be supported until early 2017, but we recommend you migrate them to nodejs4.3 runtime version as soon as possible. "
          },
          "Code": {
              "required": true,
              "type": "object",
              "description": "The code for the Lambda function."
          },
          "VpcConfig": {
              "type": "object",
              "description": "If your Lambda function accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID."
          },
          "KMSKeyArn": {
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the KMS key used to encrypt your function's environment variables. If not provided, AWS Lambda will use a default service key."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          }
      },
      "ref": "aws.lambda_create_function",
      "id": "5b87f82b0a8b8a567f5892b8",
      "uid": "action:aws:lambda_create_function"
  },
  {
      "name": "lambda_delete_alias",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Name": {
              "required": true,
              "type": "string",
              "description": "Name of the alias to delete."
          },
          "action": {
              "default": "delete_alias",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The Lambda function name for which the alias is created. Deleting an alias does not delete the function version to which it is pointing."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_delete_alias",
      "id": "5b87f82b0a8b8a567f5892b9",
      "uid": "action:aws:lambda_delete_alias"
  },
  {
      "name": "lambda_delete_event_source_mapping",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "UUID": {
              "required": true,
              "type": "string",
              "description": "The event source mapping ID."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_event_source_mapping",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_delete_event_source_mapping",
      "id": "5b87f82b0a8b8a567f5892ba",
      "uid": "action:aws:lambda_delete_event_source_mapping"
  },
  {
      "name": "lambda_delete_function",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Qualifier": {
              "type": "string",
              "description": "Using this optional parameter you can specify a function version (but not the $LATEST version) to direct AWS Lambda to delete a specific function version. If the function version has one or more aliases pointing to it, you will get an error because you cannot have aliases pointing to it. You can delete any function version but not the $LATEST, that is, you cannot specify $LATEST as the value of this parameter. The $LATEST version can be deleted only when you want to delete all the function versions and aliases. You can only specify a function version, not an alias name, using this parameter. You cannot delete a function version using its alias. If you don't specify this parameter, AWS Lambda will delete the function, including all of its versions and aliases."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_function",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The Lambda function to delete.  You can specify the function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). If you are using versioning, you can also provide a qualified function ARN (ARN that is qualified with function version or alias name as suffix). AWS Lambda also allows you to specify only the function name with the account ID qualifier (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_delete_function",
      "id": "5b87f82b0a8b8a567f5892bb",
      "uid": "action:aws:lambda_delete_function"
  },
  {
      "name": "lambda_get_account_settings",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_account_settings",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_get_account_settings",
      "id": "5b87f82b0a8b8a567f5892bc",
      "uid": "action:aws:lambda_get_account_settings"
  },
  {
      "name": "lambda_get_alias",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Name": {
              "required": true,
              "type": "string",
              "description": "Name of the alias for which you want to retrieve information."
          },
          "action": {
              "default": "get_alias",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "Function name for which the alias is created. An alias is a subresource that exists only in the context of an existing Lambda function so you must specify the function name."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_get_alias",
      "id": "5b87f82b0a8b8a567f5892bd",
      "uid": "action:aws:lambda_get_alias"
  },
  {
      "name": "lambda_get_event_source_mapping",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "UUID": {
              "required": true,
              "type": "string",
              "description": "The AWS Lambda assigned ID of the event source mapping."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_event_source_mapping",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_get_event_source_mapping",
      "id": "5b87f82b0a8b8a567f5892be",
      "uid": "action:aws:lambda_get_event_source_mapping"
  },
  {
      "name": "lambda_get_function",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Qualifier": {
              "type": "string",
              "description": "Using this optional parameter to specify a function version or an alias name. If you specify function version, the API uses qualified function ARN for the request and returns information about the specific Lambda function version. If you specify an alias name, the API uses the alias ARN and returns information about the function version to which the alias points. If you don't provide this parameter, the API uses unqualified function ARN and returns information about the $LATEST version of the Lambda function."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_function",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The Lambda function name.  You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_get_function",
      "id": "5b87f82b0a8b8a567f5892bf",
      "uid": "action:aws:lambda_get_function"
  },
  {
      "name": "lambda_get_function_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Qualifier": {
              "type": "string",
              "description": "Using this optional parameter you can specify a function version or an alias name. If you specify function version, the API uses qualified function ARN and returns information about the specific function version. If you specify an alias name, the API uses the alias ARN and returns information about the function version to which the alias points. If you don't specify this parameter, the API uses unqualified function ARN, and returns information about the $LATEST function version."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_function_configuration",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The name of the Lambda function for which you want to retrieve the configuration information.  You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_get_function_configuration",
      "id": "5b87f82b0a8b8a567f5892c0",
      "uid": "action:aws:lambda_get_function_configuration"
  },
  {
      "name": "lambda_get_policy",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Qualifier": {
              "type": "string",
              "description": "You can specify this optional query parameter to specify a function version or an alias name in which case this API will return all permissions associated with the specific qualified ARN. If you don't provide this parameter, the API will return permissions that apply to the unqualified function ARN."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_policy",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "Function name whose resource policy you want to retrieve.  You can specify the function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). If you are using versioning, you can also provide a qualified function ARN (ARN that is qualified with function version or alias name as suffix). AWS Lambda also allows you to specify only the function name with the account ID qualifier (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_get_policy",
      "id": "5b87f82b0a8b8a567f5892c1",
      "uid": "action:aws:lambda_get_policy"
  },
  {
      "name": "lambda_invoke",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Qualifier": {
              "type": "string",
              "description": "You can use this optional parameter to specify a Lambda function version or alias name. If you specify a function version, the API uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the API uses the alias ARN to invoke the Lambda function version to which the alias points. If you don't provide this parameter, then the API uses unqualified function ARN which results in invocation of the $LATEST version."
          },
          "headers": {
              "type": "string"
          },
          "InvocationType": {
              "type": "string",
              "description": "By default, the Invoke API assumes RequestResponse invocation type. You can optionally request asynchronous execution by specifying Event as the InvocationType. You can also use this parameter to request AWS Lambda to not execute the function but do some verification, such as if the caller is authorized to invoke the function and if the inputs are valid. You request this by specifying DryRun as the InvocationType. This is useful in a cross-account scenario when you want to verify access to a function without running it. "
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "LogType": {
              "type": "string",
              "description": "You can set this optional parameter to Tail in the request only if you specify the InvocationType parameter with value RequestResponse. In this case, AWS Lambda returns the base64-encoded last 4 KB of log data produced by your Lambda function in the x-amz-log-result header. "
          },
          "action": {
              "default": "invoke",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ClientContext": {
              "type": "string",
              "description": "Using the ClientContext you can pass client-specific information to the Lambda function you are invoking. You can then process the client information in your Lambda function as you choose through the context variable. For an example of a ClientContext JSON, see PutEvents in the Amazon Mobile Analytics API Reference and User Guide. The ClientContext JSON must be base64-encoded."
          },
          "Payload": {
              "type": "string",
              "description": "JSON that you want to provide to your Lambda function as input."
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The Lambda function name.  You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_invoke",
      "id": "5b87f82b0a8b8a567f5892c2",
      "uid": "action:aws:lambda_invoke"
  },
  {
      "name": "lambda_invoke_async",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "InvokeArgs": {
              "required": true,
              "type": "string",
              "description": "JSON that you want to provide to your Lambda function as input."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "invoke_async",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The Lambda function name."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_invoke_async",
      "id": "5b87f82b0a8b8a567f5892c3",
      "uid": "action:aws:lambda_invoke_async"
  },
  {
      "name": "lambda_list_aliases",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "FunctionVersion": {
              "type": "string",
              "description": "If you specify this optional parameter, the API returns only the aliases that are pointing to the specific Lambda function version, otherwise the API returns all of the aliases created for the Lambda function."
          },
          "MaxItems": {
              "type": "integer",
              "description": "Optional integer. Specifies the maximum number of aliases to return in response. This parameter value must be greater than 0."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": "Optional string. An opaque pagination token returned from a previous ListAliases operation. If present, indicates where to continue the listing."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_aliases",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "Lambda function name for which the alias is created."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_list_aliases",
      "id": "5b87f82b0a8b8a567f5892c4",
      "uid": "action:aws:lambda_list_aliases"
  },
  {
      "name": "lambda_list_event_source_mappings",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "EventSourceArn": {
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the Amazon Kinesis stream. (This parameter is optional.)"
          },
          "MaxItems": {
              "type": "integer",
              "description": "Optional integer. Specifies the maximum number of event sources to return in response. This value must be greater than 0."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": "Optional string. An opaque pagination token returned from a previous ListEventSourceMappings operation. If present, specifies to continue the list from where the returning call left off. "
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_event_source_mappings",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "type": "string",
              "description": "The name of the Lambda function.  You can specify the function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). If you are using versioning, you can also provide a qualified function ARN (ARN that is qualified with function version or alias name as suffix). AWS Lambda also allows you to specify only the function name with the account ID qualifier (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_list_event_source_mappings",
      "id": "5b87f82b0a8b8a567f5892c5",
      "uid": "action:aws:lambda_list_event_source_mappings"
  },
  {
      "name": "lambda_list_functions",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "MaxItems": {
              "type": "integer",
              "description": "Optional integer. Specifies the maximum number of AWS Lambda functions to return in response. This parameter value must be greater than 0."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": "Optional string. An opaque pagination token returned from a previous ListFunctions operation. If present, indicates where to continue the listing. "
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_functions",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_list_functions",
      "id": "5b87f82b0a8b8a567f5892c6",
      "uid": "action:aws:lambda_list_functions"
  },
  {
      "name": "lambda_list_versions_by_function",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "MaxItems": {
              "type": "integer",
              "description": "Optional integer. Specifies the maximum number of AWS Lambda function versions to return in response. This parameter value must be greater than 0."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Marker": {
              "type": "string",
              "description": " Optional string. An opaque pagination token returned from a previous ListVersionsByFunction operation. If present, indicates where to continue the listing. "
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_versions_by_function",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "Function name whose versions to list. You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_list_versions_by_function",
      "id": "5b87f82b0a8b8a567f5892c7",
      "uid": "action:aws:lambda_list_versions_by_function"
  },
  {
      "name": "lambda_publish_version",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "CodeSha256": {
              "type": "string",
              "description": "The SHA256 hash of the deployment package you want to publish. This provides validation on the code you are publishing. If you provide this parameter value must match the SHA256 of the $LATEST version for the publication to succeed."
          },
          "Description": {
              "type": "string",
              "description": "The description for the version you are publishing. If not provided, AWS Lambda copies the description from the $LATEST version."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "publish_version",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The Lambda function name. You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_publish_version",
      "id": "5b87f82b0a8b8a567f5892c8",
      "uid": "action:aws:lambda_publish_version"
  },
  {
      "name": "lambda_remove_permission",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Qualifier": {
              "type": "string",
              "description": "You can specify this optional parameter to remove permission associated with a specific function version or function alias. If you don't specify this parameter, the API removes permission associated with the unqualified function ARN."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "StatementId": {
              "required": true,
              "type": "string",
              "description": "Statement ID of the permission to remove."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "remove_permission",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "Lambda function whose resource policy you want to remove a permission from.  You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_remove_permission",
      "id": "5b87f82b0a8b8a567f5892c9",
      "uid": "action:aws:lambda_remove_permission"
  },
  {
      "name": "lambda_update_alias",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Description": {
              "type": "string",
              "description": "You can change the description of the alias using this parameter."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "FunctionVersion": {
              "type": "string",
              "description": "Using this parameter you can change the Lambda function version to which the alias points."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Name": {
              "required": true,
              "type": "string",
              "description": "The alias name."
          },
          "action": {
              "default": "update_alias",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The function name for which the alias is created."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_update_alias",
      "id": "5b87f82b0a8b8a567f5892ca",
      "uid": "action:aws:lambda_update_alias"
  },
  {
      "name": "lambda_update_event_source_mapping",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "BatchSize": {
              "type": "integer",
              "description": "The maximum number of stream records that can be sent to your Lambda function for a single invocation."
          },
          "Enabled": {
              "type": "boolean",
              "description": "Specifies whether AWS Lambda should actively poll the stream or not. If disabled, AWS Lambda will not poll the stream."
          },
          "UUID": {
              "required": true,
              "type": "string",
              "description": "The event source mapping identifier."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "update_event_source_mapping",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "type": "string",
              "description": "The Lambda function to which you want the stream records sent.  You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail).  If you are using versioning, you can also provide a qualified function ARN (ARN that is qualified with function version or alias name as suffix). For more information about versioning, see AWS Lambda Function Versioning and Aliases  Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_update_event_source_mapping",
      "id": "5b87f82b0a8b8a567f5892cb",
      "uid": "action:aws:lambda_update_event_source_mapping"
  },
  {
      "name": "lambda_update_function_code",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ZipFile": {
              "type": "string",
              "description": "The contents of your zip file containing your deployment package. If you are using the web API directly, the contents of the zip file must be base64-encoded. If you are using the AWS SDKs or the AWS CLI, the SDKs or CLI will do the encoding for you. For more information about creating a .zip file, see Execution Permissions in the AWS Lambda Developer Guide. "
          },
          "Publish": {
              "type": "boolean",
              "description": "This boolean parameter can be used to request AWS Lambda to update the Lambda function and publish a version as an atomic operation."
          },
          "S3Bucket": {
              "type": "string",
              "description": "Amazon S3 bucket name where the .zip file containing your deployment package is stored. This bucket must reside in the same AWS Region where you are creating the Lambda function."
          },
          "headers": {
              "type": "string"
          },
          "S3Key": {
              "type": "string",
              "description": "The Amazon S3 object (the deployment package) key name you want to upload."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "S3ObjectVersion": {
              "type": "string",
              "description": "The Amazon S3 object (the deployment package) version you want to upload."
          },
          "action": {
              "default": "update_function_code",
              "type": "string",
              "immutable": true
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The existing Lambda function name whose code you want to replace.  You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          }
      },
      "ref": "aws.lambda_update_function_code",
      "id": "5b87f82b0a8b8a567f5892cc",
      "uid": "action:aws:lambda_update_function_code"
  },
  {
      "name": "lambda_update_function_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "DeadLetterConfig": {
              "type": "object",
              "description": "The parent object that contains the target Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic."
          },
          "Timeout": {
              "type": "integer",
              "description": "The function execution time at which AWS Lambda should terminate the function. Because the execution time has cost implications, we recommend you set this value based on your expected execution time. The default is 3 seconds."
          },
          "VpcConfig": {
              "type": "object",
              "description": ""
          },
          "KMSKeyArn": {
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the KMS key used to encrypt your function's environment variables. If you elect to use the AWS Lambda default service key, pass in an empty string ('') for this parameter."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "MemorySize": {
              "type": "integer",
              "description": "The amount of memory, in MB, your Lambda function is given. AWS Lambda uses this memory size to infer the amount of CPU allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "Description": {
              "type": "string",
              "description": "A short user-defined function description. AWS Lambda does not use this value. Assign a meaningful description as you see fit."
          },
          "Environment": {
              "type": "object",
              "description": "The parent object that contains your environment's configuration settings."
          },
          "headers": {
              "type": "string"
          },
          "Handler": {
              "type": "string",
              "description": "The function that Lambda calls to begin executing your function. For Node.js, it is the module-name.export value in your function. "
          },
          "Role": {
              "type": "string",
              "description": "The Amazon Resource Name (ARN) of the IAM role that Lambda will assume when it executes your function."
          },
          "cls": {
              "default": "lambda",
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "update_function_configuration",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Runtime": {
              "type": "string",
              "description": "The runtime environment for the Lambda function. To use the Node.js runtime v4.3, set the value to 'nodejs4.3'. To use earlier runtime (v0.10.42), set the value to 'nodejs'.  You can no longer downgrade to the v0.10.42 runtime version. This version will no longer be supported as of early 2017. "
          },
          "FunctionName": {
              "required": true,
              "type": "string",
              "description": "The name of the Lambda function.  You can specify a function name (for example, Thumbnail) or you can specify Amazon Resource Name (ARN) of the function (for example, arn:aws:lambda:us-west-2:account-id:function:ThumbNail). AWS Lambda also allows you to specify a partial ARN (for example, account-id:Thumbnail). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. "
          }
      },
      "ref": "aws.lambda_update_function_configuration",
      "id": "5b87f82b0a8b8a567f5892cd",
      "uid": "action:aws:lambda_update_function_configuration"
  },
  {
      "name": "r53_build_base_http_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "default": "build_base_http_request",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "host": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "auth_path": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_build_base_http_request",
      "pack": "aws",
      "ref": "aws.r53_build_base_http_request",
      "id": "5b87f82b0a8b8a567f5892ce",
      "runner_type": "python-script"
  },
  {
      "name": "r53_change_rrsets",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "xml_body": {
              "required": true,
              "type": "string"
          },
          "hosted_zone_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "change_rrsets",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_change_rrsets",
      "pack": "aws",
      "ref": "aws.r53_change_rrsets",
      "id": "5b87f82b0a8b8a567f5892cf",
      "runner_type": "python-script"
  },
  {
      "name": "r53_close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "close",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_close",
      "pack": "aws",
      "ref": "aws.r53_close",
      "id": "5b87f82b0a8b8a567f5892d0",
      "runner_type": "python-script"
  },
  {
      "name": "r53_create_health_check",
      "parameters": {
          "health_check": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "caller_ref": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_health_check",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_create_health_check",
      "pack": "aws",
      "ref": "aws.r53_create_health_check",
      "id": "5b87f82b0a8b8a567f5892d1",
      "runner_type": "python-script"
  },
  {
      "name": "r53_create_hosted_zone",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "vpc_region": {
              "type": "string"
          },
          "caller_ref": {
              "type": "string"
          },
          "domain_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "private_zone": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "type": "string"
          },
          "action": {
              "default": "create_hosted_zone",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_create_hosted_zone",
      "pack": "aws",
      "ref": "aws.r53_create_hosted_zone",
      "id": "5b87f82b0a8b8a567f5892d2",
      "runner_type": "python-script"
  },
  {
      "name": "r53_create_zone",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "vpc_region": {
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "private_zone": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "type": "string"
          },
          "action": {
              "default": "create_zone",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_create_zone",
      "pack": "aws",
      "ref": "aws.r53_create_zone",
      "id": "5b87f82b0a8b8a567f5892d3",
      "runner_type": "python-script"
  },
  {
      "name": "r53_delete_health_check",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_health_check",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "health_check_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_delete_health_check",
      "pack": "aws",
      "ref": "aws.r53_delete_health_check",
      "id": "5b87f82b0a8b8a567f5892d4",
      "runner_type": "python-script"
  },
  {
      "name": "r53_delete_hosted_zone",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "hosted_zone_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_hosted_zone",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_delete_hosted_zone",
      "pack": "aws",
      "ref": "aws.r53_delete_hosted_zone",
      "id": "5b87f82b0a8b8a567f5892d5",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_all_hosted_zones",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone_list": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "start_marker": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_hosted_zones",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_all_hosted_zones",
      "pack": "aws",
      "ref": "aws.r53_get_all_hosted_zones",
      "id": "5b87f82b0a8b8a567f5892d6",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_all_rrsets",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "maxitems": {
              "type": "string"
          },
          "name": {
              "type": "string"
          },
          "hosted_zone_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_rrsets",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "type": {
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_all_rrsets",
      "pack": "aws",
      "ref": "aws.r53_get_all_rrsets",
      "id": "5b87f82b0a8b8a567f5892d7",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_change",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "change_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_change",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_change",
      "pack": "aws",
      "ref": "aws.r53_get_change",
      "id": "5b87f82b0a8b8a567f5892d8",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_checker_ip_ranges",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_checker_ip_ranges",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_checker_ip_ranges",
      "pack": "aws",
      "ref": "aws.r53_get_checker_ip_ranges",
      "id": "5b87f82b0a8b8a567f5892d9",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_hosted_zone",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "hosted_zone_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_hosted_zone",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_hosted_zone",
      "pack": "aws",
      "ref": "aws.r53_get_hosted_zone",
      "id": "5b87f82b0a8b8a567f5892da",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_hosted_zone_by_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "hosted_zone_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_hosted_zone_by_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_hosted_zone_by_name",
      "pack": "aws",
      "ref": "aws.r53_get_hosted_zone_by_name",
      "id": "5b87f82b0a8b8a567f5892db",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_http_connection",
      "pack": "aws",
      "ref": "aws.r53_get_http_connection",
      "id": "5b87f82b0a8b8a567f5892dc",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_list_health_checks",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_list_health_checks",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "maxitems": {
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_list_health_checks",
      "pack": "aws",
      "ref": "aws.r53_get_list_health_checks",
      "id": "5b87f82b0a8b8a567f5892dd",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_path",
      "pack": "aws",
      "ref": "aws.r53_get_path",
      "id": "5b87f82b0a8b8a567f5892de",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_proxy_auth_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_auth_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_proxy_auth_header",
      "pack": "aws",
      "ref": "aws.r53_get_proxy_auth_header",
      "id": "5b87f82b0a8b8a567f5892df",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_proxy_url_with_auth",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_url_with_auth",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_proxy_url_with_auth",
      "pack": "aws",
      "ref": "aws.r53_get_proxy_url_with_auth",
      "id": "5b87f82b0a8b8a567f5892e0",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_zone",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_zone",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_zone",
      "pack": "aws",
      "ref": "aws.r53_get_zone",
      "id": "5b87f82b0a8b8a567f5892e1",
      "runner_type": "python-script"
  },
  {
      "name": "r53_get_zones",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_zones",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_get_zones",
      "pack": "aws",
      "ref": "aws.r53_get_zones",
      "id": "5b87f82b0a8b8a567f5892e2",
      "runner_type": "python-script"
  },
  {
      "name": "r53_handle_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "proxy_pass": {
              "required": true,
              "type": "string"
          },
          "proxy_port": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "proxy": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "handle_proxy",
              "type": "string",
              "immutable": true
          },
          "proxy_user": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_handle_proxy",
      "pack": "aws",
      "ref": "aws.r53_handle_proxy",
      "id": "5b87f82b0a8b8a567f5892e3",
      "runner_type": "python-script"
  },
  {
      "name": "r53_make_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_make_request",
      "pack": "aws",
      "ref": "aws.r53_make_request",
      "id": "5b87f82c0a8b8a567f5892e4",
      "runner_type": "python-script"
  },
  {
      "name": "r53_new_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "new_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_new_http_connection",
      "pack": "aws",
      "ref": "aws.r53_new_http_connection",
      "id": "5b87f82c0a8b8a567f5892e5",
      "runner_type": "python-script"
  },
  {
      "name": "r53_prefix_proxy_to_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "prefix_proxy_to_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_prefix_proxy_to_path",
      "pack": "aws",
      "ref": "aws.r53_prefix_proxy_to_path",
      "id": "5b87f82c0a8b8a567f5892e6",
      "runner_type": "python-script"
  },
  {
      "name": "r53_proxy_ssl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "proxy_ssl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_proxy_ssl",
      "pack": "aws",
      "ref": "aws.r53_proxy_ssl",
      "id": "5b87f82c0a8b8a567f5892e7",
      "runner_type": "python-script"
  },
  {
      "name": "r53_put_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "connection": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_put_http_connection",
      "pack": "aws",
      "ref": "aws.r53_put_http_connection",
      "id": "5b87f82c0a8b8a567f5892e8",
      "runner_type": "python-script"
  },
  {
      "name": "r53_server_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "server_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_server_name",
      "pack": "aws",
      "ref": "aws.r53_server_name",
      "id": "5b87f82c0a8b8a567f5892e9",
      "runner_type": "python-script"
  },
  {
      "name": "r53_set_host_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "request": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_host_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_set_host_header",
      "pack": "aws",
      "ref": "aws.r53_set_host_header",
      "id": "5b87f82c0a8b8a567f5892ea",
      "runner_type": "python-script"
  },
  {
      "name": "r53_set_request_hook",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "hook": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_request_hook",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_set_request_hook",
      "pack": "aws",
      "ref": "aws.r53_set_request_hook",
      "id": "5b87f82c0a8b8a567f5892eb",
      "runner_type": "python-script"
  },
  {
      "name": "r53_skip_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "skip_proxy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Route53Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_skip_proxy",
      "pack": "aws",
      "ref": "aws.r53_skip_proxy",
      "id": "5b87f82c0a8b8a567f5892ec",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_add_a",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ttl": {
              "type": "string"
          },
          "action": {
              "default": "add_a",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_add_a",
      "pack": "aws",
      "ref": "aws.r53_zone_add_a",
      "id": "5b87f82c0a8b8a567f5892ed",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_add_cname",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ttl": {
              "type": "string"
          },
          "action": {
              "default": "add_cname",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_add_cname",
      "pack": "aws",
      "ref": "aws.r53_zone_add_cname",
      "id": "5b87f82c0a8b8a567f5892ee",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_add_mx",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "records": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ttl": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "add_mx",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_add_mx",
      "pack": "aws",
      "ref": "aws.r53_zone_add_mx",
      "id": "5b87f82c0a8b8a567f5892ef",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_add_record",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ttl": {
              "default": 60,
              "type": "string"
          },
          "action": {
              "default": "add_record",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "resource_type": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_add_record",
      "pack": "aws",
      "ref": "aws.r53_zone_add_record",
      "id": "5b87f82c0a8b8a567f5892f0",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_delete",
      "pack": "aws",
      "ref": "aws.r53_zone_delete",
      "id": "5b87f82c0a8b8a567f5892f1",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_delete_a",
      "parameters": {
          "all": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_a",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_delete_a",
      "pack": "aws",
      "ref": "aws.r53_zone_delete_a",
      "id": "5b87f82c0a8b8a567f5892f2",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_delete_cname",
      "parameters": {
          "all": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_cname",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_delete_cname",
      "pack": "aws",
      "ref": "aws.r53_zone_delete_cname",
      "id": "5b87f82c0a8b8a567f5892f3",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_delete_mx",
      "parameters": {
          "all": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_mx",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_delete_mx",
      "pack": "aws",
      "ref": "aws.r53_zone_delete_mx",
      "id": "5b87f82c0a8b8a567f5892f4",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_delete_record",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "record": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_record",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_delete_record",
      "pack": "aws",
      "ref": "aws.r53_zone_delete_record",
      "id": "5b87f82c0a8b8a567f5892f5",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_find_records",
      "parameters": {
          "all": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "desired": {
              "default": 1,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "type": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "find_records",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_find_records",
      "pack": "aws",
      "ref": "aws.r53_zone_find_records",
      "id": "5b87f82c0a8b8a567f5892f6",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_get_a",
      "parameters": {
          "all": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_a",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_get_a",
      "pack": "aws",
      "ref": "aws.r53_zone_get_a",
      "id": "5b87f82c0a8b8a567f5892f7",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_get_cname",
      "parameters": {
          "all": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_cname",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_get_cname",
      "pack": "aws",
      "ref": "aws.r53_zone_get_cname",
      "id": "5b87f82c0a8b8a567f5892f8",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_get_mx",
      "parameters": {
          "all": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_mx",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_get_mx",
      "pack": "aws",
      "ref": "aws.r53_zone_get_mx",
      "id": "5b87f82c0a8b8a567f5892f9",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_get_nameservers",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_nameservers",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_get_nameservers",
      "pack": "aws",
      "ref": "aws.r53_zone_get_nameservers",
      "id": "5b87f82c0a8b8a567f5892fa",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_get_records",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_records",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_get_records",
      "pack": "aws",
      "ref": "aws.r53_zone_get_records",
      "id": "5b87f82c0a8b8a567f5892fb",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_update_a",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ttl": {
              "type": "string"
          },
          "action": {
              "default": "update_a",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_update_a",
      "pack": "aws",
      "ref": "aws.r53_zone_update_a",
      "id": "5b87f82c0a8b8a567f5892fc",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_update_cname",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ttl": {
              "type": "string"
          },
          "action": {
              "default": "update_cname",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_update_cname",
      "pack": "aws",
      "ref": "aws.r53_zone_update_cname",
      "id": "5b87f82c0a8b8a567f5892fd",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_update_mx",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ttl": {
              "type": "string"
          },
          "action": {
              "default": "update_mx",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_update_mx",
      "pack": "aws",
      "ref": "aws.r53_zone_update_mx",
      "id": "5b87f82c0a8b8a567f5892fe",
      "runner_type": "python-script"
  },
  {
      "name": "r53_zone_update_record",
      "parameters": {
          "comment": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "new_ttl": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "old_record": {
              "required": true,
              "type": "string"
          },
          "new_identifier": {
              "type": "string"
          },
          "new_value": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "update_record",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.route53.zone",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "Zone",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:r53_zone_update_record",
      "pack": "aws",
      "ref": "aws.r53_zone_update_record",
      "id": "5b87f82c0a8b8a567f5892ff",
      "runner_type": "python-script"
  },
  {
      "name": "rds_authorize_dbsecurity_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ec2_security_group_owner_id": {
              "type": "string"
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "ec2_security_group_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "authorize_dbsecurity_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cidr_ip": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_authorize_dbsecurity_group",
      "pack": "aws",
      "ref": "aws.rds_authorize_dbsecurity_group",
      "id": "5b87f82c0a8b8a567f589300",
      "runner_type": "python-script"
  },
  {
      "name": "rds_build_base_http_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "default": "build_base_http_request",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "host": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "auth_path": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_build_base_http_request",
      "pack": "aws",
      "ref": "aws.rds_build_base_http_request",
      "id": "5b87f82c0a8b8a567f589301",
      "runner_type": "python-script"
  },
  {
      "name": "rds_build_complex_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_complex_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_build_complex_list_params",
      "pack": "aws",
      "ref": "aws.rds_build_complex_list_params",
      "id": "5b87f82c0a8b8a567f589302",
      "runner_type": "python-script"
  },
  {
      "name": "rds_build_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_build_list_params",
      "pack": "aws",
      "ref": "aws.rds_build_list_params",
      "id": "5b87f82c0a8b8a567f589303",
      "runner_type": "python-script"
  },
  {
      "name": "rds_close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "close",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_close",
      "pack": "aws",
      "ref": "aws.rds_close",
      "id": "5b87f82c0a8b8a567f589304",
      "runner_type": "python-script"
  },
  {
      "name": "rds_copy_dbsnapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "action": {
              "default": "copy_dbsnapshot",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "target_snapshot_id": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "source_snapshot_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_copy_dbsnapshot",
      "pack": "aws",
      "ref": "aws.rds_copy_dbsnapshot",
      "id": "5b87f82c0a8b8a567f589305",
      "runner_type": "python-script"
  },
  {
      "name": "rds_create_db_subnet_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_db_subnet_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "subnet_ids": {
              "required": true,
              "type": "string"
          },
          "desc": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_create_db_subnet_group",
      "pack": "aws",
      "ref": "aws.rds_create_db_subnet_group",
      "id": "5b87f82c0a8b8a567f589306",
      "runner_type": "python-script"
  },
  {
      "name": "rds_create_dbinstance",
      "parameters": {
          "backup_retention_period": {
              "type": "string"
          },
          "param_group": {
              "type": "string"
          },
          "availability_zone": {
              "type": "string"
          },
          "iops": {
              "type": "string"
          },
          "master_username": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "auto_minor_version_upgrade": {
              "default": true,
              "type": "boolean"
          },
          "port": {
              "default": 3306,
              "type": "string"
          },
          "security_groups": {
              "type": "string"
          },
          "vpc_security_groups": {
              "type": "array"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "allocated_storage": {
              "required": true,
              "type": "string"
          },
          "id": {
              "required": true,
              "type": "string"
          },
          "instance_class": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "preferred_backup_window": {
              "type": "string"
          },
          "db_subnet_group_name": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          },
          "engine": {
              "default": "MySQL5.1",
              "type": "string"
          },
          "master_password": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "db_name": {
              "type": "string"
          },
          "license_model": {
              "type": "string"
          },
          "character_set_name": {
              "type": "string"
          },
          "engine_version": {
              "type": "string"
          },
          "option_group_name": {
              "type": "string"
          },
          "multi_az": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "create_dbinstance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "preferred_maintenance_window": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_create_dbinstance",
      "pack": "aws",
      "ref": "aws.rds_create_dbinstance",
      "id": "5b87f82c0a8b8a567f589307",
      "runner_type": "python-script"
  },
  {
      "name": "rds_create_dbinstance_read_replica",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "availability_zone": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "port": {
              "default": 3306,
              "type": "string"
          },
          "action": {
              "default": "create_dbinstance_read_replica",
              "type": "string",
              "immutable": true
          },
          "instance_class": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "source_id": {
              "required": true,
              "type": "string"
          },
          "auto_minor_version_upgrade": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_create_dbinstance_read_replica",
      "pack": "aws",
      "ref": "aws.rds_create_dbinstance_read_replica",
      "id": "5b87f82c0a8b8a567f589308",
      "runner_type": "python-script"
  },
  {
      "name": "rds_create_dbsecurity_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "description": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_dbsecurity_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_create_dbsecurity_group",
      "pack": "aws",
      "ref": "aws.rds_create_dbsecurity_group",
      "id": "5b87f82c0a8b8a567f589309",
      "runner_type": "python-script"
  },
  {
      "name": "rds_create_dbsnapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dbinstance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "create_dbsnapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_create_dbsnapshot",
      "pack": "aws",
      "ref": "aws.rds_create_dbsnapshot",
      "id": "5b87f82c0a8b8a567f58930a",
      "runner_type": "python-script"
  },
  {
      "name": "rds_create_option_group",
      "parameters": {
          "major_engine_version": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "engine_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_option_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          },
          "description": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_create_option_group",
      "pack": "aws",
      "ref": "aws.rds_create_option_group",
      "id": "5b87f82c0a8b8a567f58930b",
      "runner_type": "python-script"
  },
  {
      "name": "rds_create_parameter_group",
      "parameters": {
          "engine": {
              "default": "MySQL5.1",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "description": {
              "default": "",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_parameter_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_create_parameter_group",
      "pack": "aws",
      "ref": "aws.rds_create_parameter_group",
      "id": "5b87f82c0a8b8a567f58930c",
      "runner_type": "python-script"
  },
  {
      "name": "rds_delete_db_subnet_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_db_subnet_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_delete_db_subnet_group",
      "pack": "aws",
      "ref": "aws.rds_delete_db_subnet_group",
      "id": "5b87f82c0a8b8a567f58930d",
      "runner_type": "python-script"
  },
  {
      "name": "rds_delete_dbinstance",
      "parameters": {
          "skip_final_snapshot": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "final_snapshot_id": {
              "default": "",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_dbinstance",
              "type": "string",
              "immutable": true
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_delete_dbinstance",
      "pack": "aws",
      "ref": "aws.rds_delete_dbinstance",
      "id": "5b87f82c0a8b8a567f58930e",
      "runner_type": "python-script"
  },
  {
      "name": "rds_delete_dbsecurity_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_dbsecurity_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_delete_dbsecurity_group",
      "pack": "aws",
      "ref": "aws.rds_delete_dbsecurity_group",
      "id": "5b87f82c0a8b8a567f58930f",
      "runner_type": "python-script"
  },
  {
      "name": "rds_delete_dbsnapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_dbsnapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "identifier": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_delete_dbsnapshot",
      "pack": "aws",
      "ref": "aws.rds_delete_dbsnapshot",
      "id": "5b87f82c0a8b8a567f589310",
      "runner_type": "python-script"
  },
  {
      "name": "rds_delete_option_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_option_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_delete_option_group",
      "pack": "aws",
      "ref": "aws.rds_delete_option_group",
      "id": "5b87f82c0a8b8a567f589311",
      "runner_type": "python-script"
  },
  {
      "name": "rds_delete_parameter_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_parameter_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_delete_parameter_group",
      "pack": "aws",
      "ref": "aws.rds_delete_parameter_group",
      "id": "5b87f82c0a8b8a567f589312",
      "runner_type": "python-script"
  },
  {
      "name": "rds_describe_option_group_options",
      "parameters": {
          "major_engine_version": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "engine_name": {
              "type": "string"
          },
          "max_records": {
              "default": 100,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_option_group_options",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_describe_option_group_options",
      "pack": "aws",
      "ref": "aws.rds_describe_option_group_options",
      "id": "5b87f82c0a8b8a567f589313",
      "runner_type": "python-script"
  },
  {
      "name": "rds_describe_option_groups",
      "parameters": {
          "major_engine_version": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "type": "string"
          },
          "engine_name": {
              "type": "string"
          },
          "max_records": {
              "default": 100,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_option_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_describe_option_groups",
      "pack": "aws",
      "ref": "aws.rds_describe_option_groups",
      "id": "5b87f82c0a8b8a567f589314",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_all_db_subnet_groups",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_records": {
              "type": "string"
          },
          "name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_db_subnet_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_all_db_subnet_groups",
      "pack": "aws",
      "ref": "aws.rds_get_all_db_subnet_groups",
      "id": "5b87f82c0a8b8a567f589315",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_all_dbinstances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_records": {
              "type": "string"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_dbinstances",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_all_dbinstances",
      "pack": "aws",
      "ref": "aws.rds_get_all_dbinstances",
      "id": "5b87f82c0a8b8a567f589316",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_all_dbparameter_groups",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_records": {
              "type": "string"
          },
          "groupname": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_dbparameter_groups",
              "type": "string",
              "immutable": true
          },
          "marker": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_all_dbparameter_groups",
      "pack": "aws",
      "ref": "aws.rds_get_all_dbparameter_groups",
      "id": "5b87f82c0a8b8a567f589317",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_all_dbparameters",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "groupname": {
              "required": true,
              "type": "string"
          },
          "max_records": {
              "type": "string"
          },
          "source": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_dbparameters",
              "type": "string",
              "immutable": true
          },
          "marker": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_all_dbparameters",
      "pack": "aws",
      "ref": "aws.rds_get_all_dbparameters",
      "id": "5b87f82d0a8b8a567f589318",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_all_dbsecurity_groups",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_records": {
              "type": "string"
          },
          "groupname": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_dbsecurity_groups",
              "type": "string",
              "immutable": true
          },
          "marker": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_all_dbsecurity_groups",
      "pack": "aws",
      "ref": "aws.rds_get_all_dbsecurity_groups",
      "id": "5b87f82d0a8b8a567f589319",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_all_dbsnapshots",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "max_records": {
              "type": "string"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "snapshot_id": {
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_dbsnapshots",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_all_dbsnapshots",
      "pack": "aws",
      "ref": "aws.rds_get_all_dbsnapshots",
      "id": "5b87f82d0a8b8a567f58931a",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_all_events",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "start_time": {
              "type": "string"
          },
          "source_identifier": {
              "type": "string"
          },
          "source_type": {
              "type": "string"
          },
          "action": {
              "default": "get_all_events",
              "type": "string",
              "immutable": true
          },
          "end_time": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "max_records": {
              "type": "string"
          },
          "marker": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_all_events",
      "pack": "aws",
      "ref": "aws.rds_get_all_events",
      "id": "5b87f82d0a8b8a567f58931b",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_all_logs",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "file_last_written": {
              "type": "string"
          },
          "dbinstance_id": {
              "required": true,
              "type": "string"
          },
          "max_records": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "file_size": {
              "type": "string"
          },
          "filename_contains": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_logs",
              "type": "string",
              "immutable": true
          },
          "marker": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_all_logs",
      "pack": "aws",
      "ref": "aws.rds_get_all_logs",
      "id": "5b87f82d0a8b8a567f58931c",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_http_connection",
      "pack": "aws",
      "ref": "aws.rds_get_http_connection",
      "id": "5b87f82d0a8b8a567f58931d",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "markers": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_list",
      "pack": "aws",
      "ref": "aws.rds_get_list",
      "id": "5b87f82d0a8b8a567f58931e",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_log_file",
      "parameters": {
          "number_of_lines": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "max_records": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "marker": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "dbinstance_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_log_file",
              "type": "string",
              "immutable": true
          },
          "log_file_name": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_log_file",
      "pack": "aws",
      "ref": "aws.rds_get_log_file",
      "id": "5b87f82d0a8b8a567f58931f",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_object",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_object",
      "pack": "aws",
      "ref": "aws.rds_get_object",
      "id": "5b87f82d0a8b8a567f589320",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_path",
      "pack": "aws",
      "ref": "aws.rds_get_path",
      "id": "5b87f82d0a8b8a567f589321",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_proxy_auth_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_auth_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_proxy_auth_header",
      "pack": "aws",
      "ref": "aws.rds_get_proxy_auth_header",
      "id": "5b87f82d0a8b8a567f589322",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_proxy_url_with_auth",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_url_with_auth",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_proxy_url_with_auth",
      "pack": "aws",
      "ref": "aws.rds_get_proxy_url_with_auth",
      "id": "5b87f82d0a8b8a567f589323",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_status",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_status",
      "pack": "aws",
      "ref": "aws.rds_get_status",
      "id": "5b87f82d0a8b8a567f589324",
      "runner_type": "python-script"
  },
  {
      "name": "rds_get_utf8_value",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_utf8_value",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_get_utf8_value",
      "pack": "aws",
      "ref": "aws.rds_get_utf8_value",
      "id": "5b87f82d0a8b8a567f589325",
      "runner_type": "python-script"
  },
  {
      "name": "rds_handle_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "proxy_pass": {
              "required": true,
              "type": "string"
          },
          "proxy_port": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "proxy": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "handle_proxy",
              "type": "string",
              "immutable": true
          },
          "proxy_user": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_handle_proxy",
      "pack": "aws",
      "ref": "aws.rds_handle_proxy",
      "id": "5b87f82d0a8b8a567f589326",
      "runner_type": "python-script"
  },
  {
      "name": "rds_make_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_make_request",
      "pack": "aws",
      "ref": "aws.rds_make_request",
      "id": "5b87f82d0a8b8a567f589327",
      "runner_type": "python-script"
  },
  {
      "name": "rds_modify_db_subnet_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "description": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "modify_db_subnet_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "subnet_ids": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_modify_db_subnet_group",
      "pack": "aws",
      "ref": "aws.rds_modify_db_subnet_group",
      "id": "5b87f82d0a8b8a567f589328",
      "runner_type": "python-script"
  },
  {
      "name": "rds_modify_dbinstance",
      "parameters": {
          "backup_retention_period": {
              "type": "string"
          },
          "param_group": {
              "type": "string"
          },
          "iops": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "id": {
              "required": true,
              "type": "string"
          },
          "security_groups": {
              "type": "string"
          },
          "vpc_security_groups": {
              "type": "array"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "allocated_storage": {
              "type": "string"
          },
          "instance_class": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "new_instance_id": {
              "type": "string"
          },
          "preferred_backup_window": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          },
          "master_password": {
              "type": "string"
          },
          "action": {
              "default": "modify_dbinstance",
              "type": "string",
              "immutable": true
          },
          "apply_immediately": {
              "default": false,
              "type": "boolean"
          },
          "multi_az": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "preferred_maintenance_window": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_modify_dbinstance",
      "pack": "aws",
      "ref": "aws.rds_modify_dbinstance",
      "id": "5b87f82d0a8b8a567f589329",
      "runner_type": "python-script"
  },
  {
      "name": "rds_modify_parameter_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "parameters": {
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "modify_parameter_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_modify_parameter_group",
      "pack": "aws",
      "ref": "aws.rds_modify_parameter_group",
      "id": "5b87f82d0a8b8a567f58932a",
      "runner_type": "python-script"
  },
  {
      "name": "rds_new_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "new_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_new_http_connection",
      "pack": "aws",
      "ref": "aws.rds_new_http_connection",
      "id": "5b87f82d0a8b8a567f58932b",
      "runner_type": "python-script"
  },
  {
      "name": "rds_prefix_proxy_to_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "prefix_proxy_to_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_prefix_proxy_to_path",
      "pack": "aws",
      "ref": "aws.rds_prefix_proxy_to_path",
      "id": "5b87f82d0a8b8a567f58932c",
      "runner_type": "python-script"
  },
  {
      "name": "rds_promote_read_replica",
      "parameters": {
          "backup_retention_period": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "action": {
              "default": "promote_read_replica",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "preferred_backup_window": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_promote_read_replica",
      "pack": "aws",
      "ref": "aws.rds_promote_read_replica",
      "id": "5b87f82d0a8b8a567f58932d",
      "runner_type": "python-script"
  },
  {
      "name": "rds_proxy_ssl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "proxy_ssl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_proxy_ssl",
      "pack": "aws",
      "ref": "aws.rds_proxy_ssl",
      "id": "5b87f82d0a8b8a567f58932e",
      "runner_type": "python-script"
  },
  {
      "name": "rds_put_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "connection": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_put_http_connection",
      "pack": "aws",
      "ref": "aws.rds_put_http_connection",
      "id": "5b87f82d0a8b8a567f58932f",
      "runner_type": "python-script"
  },
  {
      "name": "rds_reboot_dbinstance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "reboot_dbinstance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_reboot_dbinstance",
      "pack": "aws",
      "ref": "aws.rds_reboot_dbinstance",
      "id": "5b87f82d0a8b8a567f589330",
      "runner_type": "python-script"
  },
  {
      "name": "rds_reset_parameter_group",
      "parameters": {
          "reset_all_params": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "parameters": {
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "reset_parameter_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_reset_parameter_group",
      "pack": "aws",
      "ref": "aws.rds_reset_parameter_group",
      "id": "5b87f82d0a8b8a567f589331",
      "runner_type": "python-script"
  },
  {
      "name": "rds_restore_dbinstance_from_dbsnapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "availability_zone": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "multi_az": {
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "restore_dbinstance_from_dbsnapshot",
              "type": "string",
              "immutable": true
          },
          "instance_class": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "db_subnet_group_name": {
              "type": "string"
          },
          "auto_minor_version_upgrade": {
              "type": "string"
          },
          "identifier": {
              "required": true,
              "type": "string"
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_restore_dbinstance_from_dbsnapshot",
      "pack": "aws",
      "ref": "aws.rds_restore_dbinstance_from_dbsnapshot",
      "id": "5b87f82d0a8b8a567f589332",
      "runner_type": "python-script"
  },
  {
      "name": "rds_restore_dbinstance_from_point_in_time",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "availability_zone": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "target_instance_id": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "restore_dbinstance_from_point_in_time",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "source_instance_id": {
              "required": true,
              "type": "string"
          },
          "db_subnet_group_name": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "dbinstance_class": {
              "type": "string"
          },
          "use_latest": {
              "default": false,
              "type": "boolean"
          },
          "port": {
              "type": "string"
          },
          "restore_time": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_restore_dbinstance_from_point_in_time",
      "pack": "aws",
      "ref": "aws.rds_restore_dbinstance_from_point_in_time",
      "id": "5b87f82d0a8b8a567f589333",
      "runner_type": "python-script"
  },
  {
      "name": "rds_revoke_dbsecurity_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ec2_security_group_owner_id": {
              "type": "string"
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "ec2_security_group_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "revoke_dbsecurity_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cidr_ip": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_revoke_dbsecurity_group",
      "pack": "aws",
      "ref": "aws.rds_revoke_dbsecurity_group",
      "id": "5b87f82d0a8b8a567f589334",
      "runner_type": "python-script"
  },
  {
      "name": "rds_revoke_security_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ec2_security_group_owner_id": {
              "type": "string"
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "ec2_security_group_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "revoke_security_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cidr_ip": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_revoke_security_group",
      "pack": "aws",
      "ref": "aws.rds_revoke_security_group",
      "id": "5b87f82d0a8b8a567f589335",
      "runner_type": "python-script"
  },
  {
      "name": "rds_server_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "server_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_server_name",
      "pack": "aws",
      "ref": "aws.rds_server_name",
      "id": "5b87f82d0a8b8a567f589336",
      "runner_type": "python-script"
  },
  {
      "name": "rds_set_host_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "request": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_host_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_set_host_header",
      "pack": "aws",
      "ref": "aws.rds_set_host_header",
      "id": "5b87f82d0a8b8a567f589337",
      "runner_type": "python-script"
  },
  {
      "name": "rds_set_request_hook",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "hook": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_request_hook",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_set_request_hook",
      "pack": "aws",
      "ref": "aws.rds_set_request_hook",
      "id": "5b87f82d0a8b8a567f589338",
      "runner_type": "python-script"
  },
  {
      "name": "rds_skip_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "skip_proxy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.rds",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "RDSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:rds_skip_proxy",
      "pack": "aws",
      "ref": "aws.rds_skip_proxy",
      "id": "5b87f82d0a8b8a567f589339",
      "runner_type": "python-script"
  },
  {
      "name": "s3_abort_multipart_upload",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "UploadId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "abort_multipart_upload",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_abort_multipart_upload",
      "id": "5b87f82d0a8b8a567f58933a",
      "uid": "action:aws:s3_abort_multipart_upload"
  },
  {
      "name": "s3_build_base_http_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "default": "build_base_http_request",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "host": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "auth_path": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_build_base_http_request",
      "pack": "aws",
      "ref": "aws.s3_build_base_http_request",
      "id": "5b87f82d0a8b8a567f58933b",
      "runner_type": "python-script"
  },
  {
      "name": "s3_build_post_form_args",
      "parameters": {
          "max_content_length": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "fields": {
              "type": "string"
          },
          "expires_in": {
              "default": 6000,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "success_action_redirect": {
              "type": "string"
          },
          "acl": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "bucket_name": {
              "required": true,
              "type": "string"
          },
          "http_method": {
              "default": "http",
              "type": "string"
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "key": {
              "required": true,
              "type": "string"
          },
          "storage_class": {
              "default": "STANDARD",
              "type": "string"
          },
          "action": {
              "default": "build_post_form_args",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "conditions": {
              "type": "string"
          },
          "server_side_encryption": {
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_build_post_form_args",
      "pack": "aws",
      "ref": "aws.s3_build_post_form_args",
      "id": "5b87f82d0a8b8a567f58933c",
      "runner_type": "python-script"
  },
  {
      "name": "s3_build_post_policy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_post_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "expiration_time": {
              "required": true,
              "type": "string"
          },
          "conditions": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_build_post_policy",
      "pack": "aws",
      "ref": "aws.s3_build_post_policy",
      "id": "5b87f82d0a8b8a567f58933d",
      "runner_type": "python-script"
  },
  {
      "name": "s3_close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "close",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_close",
      "pack": "aws",
      "ref": "aws.s3_close",
      "id": "5b87f82d0a8b8a567f58933e",
      "runner_type": "python-script"
  },
  {
      "name": "s3_complete_multipart_upload",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "UploadId": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "MultipartUpload": {
              "type": "object",
              "description": ""
          },
          "action": {
              "default": "complete_multipart_upload",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_complete_multipart_upload",
      "id": "5b87f82d0a8b8a567f58933f",
      "uid": "action:aws:s3_complete_multipart_upload"
  },
  {
      "name": "s3_copy_object",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "CopySourceIfModifiedSince": {
              "type": "string",
              "description": "Copies the object if it has been modified since the specified time."
          },
          "CopySourceIfUnmodifiedSince": {
              "type": "string",
              "description": "Copies the object if it hasn't been modified since the specified time."
          },
          "ACL": {
              "type": "string",
              "description": "The canned ACL to apply to the object."
          },
          "CopySourceSSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created."
          },
          "StorageClass": {
              "type": "string",
              "description": "The type of storage to use for the object. Defaults to 'STANDARD'."
          },
          "GrantReadACP": {
              "type": "string",
              "description": "Allows grantee to read the object ACL."
          },
          "ServerSideEncryption": {
              "type": "string",
              "description": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms)."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "SSEKMSKeyId": {
              "type": "string",
              "description": "Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version"
          },
          "ContentDisposition": {
              "type": "string",
              "description": "Specifies presentational information for the object."
          },
          "Metadata": {
              "type": "object",
              "description": "A map of metadata to store with the object in S3."
          },
          "SSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side\u200b-encryption\u200b-customer-algorithm header."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "WebsiteRedirectLocation": {
              "type": "string",
              "description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata."
          },
          "CopySource": {
              "required": true,
              "type": "string",
              "description": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded."
          },
          "Expires": {
              "type": "string",
              "description": "The date and time at which the object is no longer cacheable."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "CacheControl": {
              "type": "string",
              "description": "Specifies caching behavior along the request/reply chain."
          },
          "Tagging": {
              "type": "string",
              "description": "The tag-set for the object destination object this value must be used in conjunction with the TaggingDirective. The tag-set must be encoded as URL Query parameters"
          },
          "cls": {
              "default": "s3",
              "type": "string"
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "CopySourceSSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use when decrypting the source object (e.g., AES256)."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "GrantRead": {
              "type": "string",
              "description": "Allows grantee to read the object data and its metadata."
          },
          "SSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          },
          "GrantWriteACP": {
              "type": "string",
              "description": "Allows grantee to write the ACL for the applicable object."
          },
          "CopySourceSSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          },
          "ContentEncoding": {
              "type": "string",
              "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field."
          },
          "GrantFullControl": {
              "type": "string",
              "description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object."
          },
          "CopySourceIfMatch": {
              "type": "string",
              "description": "Copies the object if its entity tag (ETag) matches the specified tag."
          },
          "SSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
          },
          "ContentType": {
              "type": "string",
              "description": "A standard MIME type describing the format of the object data."
          },
          "ContentLanguage": {
              "type": "string",
              "description": "The language the content is in."
          },
          "TaggingDirective": {
              "type": "string",
              "description": "Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request."
          },
          "MetadataDirective": {
              "type": "string",
              "description": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request."
          },
          "headers": {
              "type": "string"
          },
          "CopySourceIfNoneMatch": {
              "type": "string",
              "description": "Copies the object if its entity tag (ETag) is different than the specified ETag."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "copy_object",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          }
      },
      "ref": "aws.s3_copy_object",
      "id": "5b87f82d0a8b8a567f589340",
      "uid": "action:aws:s3_copy_object"
  },
  {
      "name": "s3_create_bucket",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "GrantFullControl": {
              "type": "string",
              "description": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket."
          },
          "CreateBucketConfiguration": {
              "type": "object",
              "description": ""
          },
          "GrantWriteACP": {
              "type": "string",
              "description": "Allows grantee to write the ACL for the applicable bucket."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "GrantReadACP": {
              "type": "string",
              "description": "Allows grantee to read the bucket ACL."
          },
          "GrantWrite": {
              "type": "string",
              "description": "Allows grantee to create, overwrite, and delete any object in the bucket."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ACL": {
              "type": "string",
              "description": "The canned ACL to apply to the bucket."
          },
          "headers": {
              "type": "string"
          },
          "GrantRead": {
              "type": "string",
              "description": "Allows grantee to list the objects in the bucket."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_bucket",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_create_bucket",
      "id": "5b87f82d0a8b8a567f589341",
      "uid": "action:aws:s3_create_bucket"
  },
  {
      "name": "s3_create_multipart_upload",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "ContentEncoding": {
              "type": "string",
              "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field."
          },
          "StorageClass": {
              "type": "string",
              "description": "The type of storage to use for the object. Defaults to 'STANDARD'."
          },
          "GrantReadACP": {
              "type": "string",
              "description": "Allows grantee to read the object ACL."
          },
          "ServerSideEncryption": {
              "type": "string",
              "description": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms)."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "SSEKMSKeyId": {
              "type": "string",
              "description": "Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version"
          },
          "ContentDisposition": {
              "type": "string",
              "description": "Specifies presentational information for the object."
          },
          "Metadata": {
              "type": "object",
              "description": "A map of metadata to store with the object in S3."
          },
          "SSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side\u200b-encryption\u200b-customer-algorithm header."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "WebsiteRedirectLocation": {
              "type": "string",
              "description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata."
          },
          "Expires": {
              "type": "string",
              "description": "The date and time at which the object is no longer cacheable."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "CacheControl": {
              "type": "string",
              "description": "Specifies caching behavior along the request/reply chain."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "GrantRead": {
              "type": "string",
              "description": "Allows grantee to read the object data and its metadata."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ContentType": {
              "type": "string",
              "description": "A standard MIME type describing the format of the object data."
          },
          "ACL": {
              "type": "string",
              "description": "The canned ACL to apply to the object."
          },
          "GrantFullControl": {
              "type": "string",
              "description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object."
          },
          "SSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
          },
          "GrantWriteACP": {
              "type": "string",
              "description": "Allows grantee to write the ACL for the applicable object."
          },
          "ContentLanguage": {
              "type": "string",
              "description": "The language the content is in."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "create_multipart_upload",
              "type": "string",
              "immutable": true
          },
          "SSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          }
      },
      "ref": "aws.s3_create_multipart_upload",
      "id": "5b87f82d0a8b8a567f589342",
      "uid": "action:aws:s3_create_multipart_upload"
  },
  {
      "name": "s3_delete_bucket",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_bucket",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket",
      "id": "5b87f82d0a8b8a567f589343",
      "uid": "action:aws:s3_delete_bucket"
  },
  {
      "name": "s3_delete_bucket_analytics_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket from which an analytics configuration is deleted."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "delete_bucket_analytics_configuration",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The identifier used to represent an analytics configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_analytics_configuration",
      "id": "5b87f82d0a8b8a567f589344",
      "uid": "action:aws:s3_delete_bucket_analytics_configuration"
  },
  {
      "name": "s3_delete_bucket_cors",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_bucket_cors",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_cors",
      "id": "5b87f82d0a8b8a567f589345",
      "uid": "action:aws:s3_delete_bucket_cors"
  },
  {
      "name": "s3_delete_bucket_inventory_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket containing the inventory configuration to delete."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "delete_bucket_inventory_configuration",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The ID used to identify the inventory configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_inventory_configuration",
      "id": "5b87f82d0a8b8a567f589346",
      "uid": "action:aws:s3_delete_bucket_inventory_configuration"
  },
  {
      "name": "s3_delete_bucket_lifecycle",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_bucket_lifecycle",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_lifecycle",
      "id": "5b87f82d0a8b8a567f589347",
      "uid": "action:aws:s3_delete_bucket_lifecycle"
  },
  {
      "name": "s3_delete_bucket_metrics_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket containing the metrics configuration to delete."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "delete_bucket_metrics_configuration",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The ID used to identify the metrics configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_metrics_configuration",
      "id": "5b87f82d0a8b8a567f589348",
      "uid": "action:aws:s3_delete_bucket_metrics_configuration"
  },
  {
      "name": "s3_delete_bucket_policy",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_bucket_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_policy",
      "id": "5b87f82e0a8b8a567f589349",
      "uid": "action:aws:s3_delete_bucket_policy"
  },
  {
      "name": "s3_delete_bucket_replication",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_bucket_replication",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_replication",
      "id": "5b87f82e0a8b8a567f58934a",
      "uid": "action:aws:s3_delete_bucket_replication"
  },
  {
      "name": "s3_delete_bucket_tagging",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_bucket_tagging",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_tagging",
      "id": "5b87f82e0a8b8a567f58934b",
      "uid": "action:aws:s3_delete_bucket_tagging"
  },
  {
      "name": "s3_delete_bucket_website",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_bucket_website",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_bucket_website",
      "id": "5b87f82e0a8b8a567f58934c",
      "uid": "action:aws:s3_delete_bucket_website"
  },
  {
      "name": "s3_delete_object",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "MFA": {
              "type": "string",
              "description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": "VersionId used to reference a specific version of the object."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_object",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_object",
      "id": "5b87f82e0a8b8a567f58934d",
      "uid": "action:aws:s3_delete_object"
  },
  {
      "name": "s3_delete_object_tagging",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": "The versionId of the object that the tag-set will be removed from."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_object_tagging",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_delete_object_tagging",
      "id": "5b87f82e0a8b8a567f58934e",
      "uid": "action:aws:s3_delete_object_tagging"
  },
  {
      "name": "s3_delete_objects",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "MFA": {
              "type": "string",
              "description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          },
          "action": {
              "default": "delete_objects",
              "type": "string",
              "immutable": true
          },
          "Delete": {
              "required": true,
              "type": "object",
              "description": ""
          }
      },
      "ref": "aws.s3_delete_objects",
      "id": "5b87f82e0a8b8a567f58934f",
      "uid": "action:aws:s3_delete_objects"
  },
  {
      "name": "s3_download_file",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "key": {
              "required": true,
              "type": "string"
          },
          "bucket": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "filename": {
              "required": true,
              "type": "string"
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3.s3.transfer",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "download_file",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Transfer",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_download_file",
      "pack": "aws",
      "ref": "aws.s3_download_file",
      "id": "5b87f82e0a8b8a567f589350",
      "runner_type": "python-script"
  },
  {
      "name": "s3_generate_url",
      "parameters": {
          "query_auth": {
              "default": true,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "key": {
              "default": "",
              "type": "string"
          },
          "response_headers": {
              "type": "string"
          },
          "expires_in": {
              "required": true,
              "type": "string"
          },
          "bucket": {
              "default": "",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "version_id": {
              "type": "string"
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "headers": {
              "type": "string"
          },
          "force_http": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "generate_url",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "expires_in_absolute": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_generate_url",
      "pack": "aws",
      "ref": "aws.s3_generate_url",
      "id": "5b87f82e0a8b8a567f589351",
      "runner_type": "python-script"
  },
  {
      "name": "s3_generate_url_sigv4",
      "parameters": {
          "key": {
              "default": "",
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "iso_date": {
              "type": "string"
          },
          "response_headers": {
              "type": "string"
          },
          "expires_in": {
              "required": true,
              "type": "string"
          },
          "bucket": {
              "default": "",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "version_id": {
              "type": "string"
          },
          "headers": {
              "type": "string"
          },
          "force_http": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "generate_url_sigv4",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_generate_url_sigv4",
      "pack": "aws",
      "ref": "aws.s3_generate_url_sigv4",
      "id": "5b87f82e0a8b8a567f589352",
      "runner_type": "python-script"
  },
  {
      "name": "s3_get_all_buckets",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_buckets",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_get_all_buckets",
      "pack": "aws",
      "ref": "aws.s3_get_all_buckets",
      "id": "5b87f82e0a8b8a567f589353",
      "runner_type": "python-script"
  },
  {
      "name": "s3_get_bucket",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "bucket_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "validate": {
              "default": true,
              "type": "boolean"
          },
          "action": {
              "default": "get_bucket",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_get_bucket",
      "pack": "aws",
      "ref": "aws.s3_get_bucket",
      "id": "5b87f82e0a8b8a567f589354",
      "runner_type": "python-script"
  },
  {
      "name": "s3_get_bucket_accelerate_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "Name of the bucket for which the accelerate configuration is retrieved."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_accelerate_configuration",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_accelerate_configuration",
      "id": "5b87f82e0a8b8a567f589355",
      "uid": "action:aws:s3_get_bucket_accelerate_configuration"
  },
  {
      "name": "s3_get_bucket_acl",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_acl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_acl",
      "id": "5b87f82e0a8b8a567f589356",
      "uid": "action:aws:s3_get_bucket_acl"
  },
  {
      "name": "s3_get_bucket_analytics_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket from which an analytics configuration is retrieved."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "get_bucket_analytics_configuration",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The identifier used to represent an analytics configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_analytics_configuration",
      "id": "5b87f82e0a8b8a567f589357",
      "uid": "action:aws:s3_get_bucket_analytics_configuration"
  },
  {
      "name": "s3_get_bucket_cors",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_cors",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_cors",
      "id": "5b87f82e0a8b8a567f589358",
      "uid": "action:aws:s3_get_bucket_cors"
  },
  {
      "name": "s3_get_bucket_inventory_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket containing the inventory configuration to retrieve."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "get_bucket_inventory_configuration",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The ID used to identify the inventory configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_inventory_configuration",
      "id": "5b87f82e0a8b8a567f589359",
      "uid": "action:aws:s3_get_bucket_inventory_configuration"
  },
  {
      "name": "s3_get_bucket_lifecycle",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_lifecycle",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_lifecycle",
      "id": "5b87f82e0a8b8a567f58935a",
      "uid": "action:aws:s3_get_bucket_lifecycle"
  },
  {
      "name": "s3_get_bucket_lifecycle_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_lifecycle_configuration",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_lifecycle_configuration",
      "id": "5b87f82e0a8b8a567f58935b",
      "uid": "action:aws:s3_get_bucket_lifecycle_configuration"
  },
  {
      "name": "s3_get_bucket_location",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_location",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_location",
      "id": "5b87f82e0a8b8a567f58935c",
      "uid": "action:aws:s3_get_bucket_location"
  },
  {
      "name": "s3_get_bucket_logging",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_logging",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_logging",
      "id": "5b87f82e0a8b8a567f58935d",
      "uid": "action:aws:s3_get_bucket_logging"
  },
  {
      "name": "s3_get_bucket_metrics_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket containing the metrics configuration to retrieve."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "get_bucket_metrics_configuration",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The ID used to identify the metrics configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_metrics_configuration",
      "id": "5b87f82e0a8b8a567f58935e",
      "uid": "action:aws:s3_get_bucket_metrics_configuration"
  },
  {
      "name": "s3_get_bucket_notification",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "Name of the bucket to get the notification configuration for."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_notification",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_notification",
      "id": "5b87f82e0a8b8a567f58935f",
      "uid": "action:aws:s3_get_bucket_notification"
  },
  {
      "name": "s3_get_bucket_notification_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "Name of the bucket to get the notification configuration for."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_notification_configuration",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_notification_configuration",
      "id": "5b87f82e0a8b8a567f589360",
      "uid": "action:aws:s3_get_bucket_notification_configuration"
  },
  {
      "name": "s3_get_bucket_policy",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_policy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_policy",
      "id": "5b87f82e0a8b8a567f589361",
      "uid": "action:aws:s3_get_bucket_policy"
  },
  {
      "name": "s3_get_bucket_replication",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_replication",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_replication",
      "id": "5b87f82e0a8b8a567f589362",
      "uid": "action:aws:s3_get_bucket_replication"
  },
  {
      "name": "s3_get_bucket_request_payment",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_request_payment",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_request_payment",
      "id": "5b87f82e0a8b8a567f589363",
      "uid": "action:aws:s3_get_bucket_request_payment"
  },
  {
      "name": "s3_get_bucket_tagging",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_tagging",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_tagging",
      "id": "5b87f82e0a8b8a567f589364",
      "uid": "action:aws:s3_get_bucket_tagging"
  },
  {
      "name": "s3_get_bucket_versioning",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_versioning",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_versioning",
      "id": "5b87f82e0a8b8a567f589365",
      "uid": "action:aws:s3_get_bucket_versioning"
  },
  {
      "name": "s3_get_bucket_website",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_bucket_website",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_bucket_website",
      "id": "5b87f82e0a8b8a567f589366",
      "uid": "action:aws:s3_get_bucket_website"
  },
  {
      "name": "s3_get_canonical_user_id",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_canonical_user_id",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_get_canonical_user_id",
      "pack": "aws",
      "ref": "aws.s3_get_canonical_user_id",
      "id": "5b87f82e0a8b8a567f589367",
      "runner_type": "python-script"
  },
  {
      "name": "s3_get_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_get_http_connection",
      "pack": "aws",
      "ref": "aws.s3_get_http_connection",
      "id": "5b87f82e0a8b8a567f589368",
      "runner_type": "python-script"
  },
  {
      "name": "s3_get_object",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "IfNoneMatch": {
              "type": "string",
              "description": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified)."
          },
          "ResponseContentDisposition": {
              "type": "string",
              "description": "Sets the Content-Disposition header of the response"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "PartNumber": {
              "type": "integer",
              "description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified. Useful for downloading just a part of an object."
          },
          "ResponseContentEncoding": {
              "type": "string",
              "description": "Sets the Content-Encoding header of the response."
          },
          "SSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side\u200b-encryption\u200b-customer-algorithm header."
          },
          "ResponseContentType": {
              "type": "string",
              "description": "Sets the Content-Type header of the response."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ResponseCacheControl": {
              "type": "string",
              "description": "Sets the Cache-Control header of the response."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "IfModifiedSince": {
              "type": "string",
              "description": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified)."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          },
          "ResponseExpires": {
              "type": "string",
              "description": "Sets the Expires header of the response."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Range": {
              "type": "string",
              "description": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35."
          },
          "IfMatch": {
              "type": "string",
              "description": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed)."
          },
          "IfUnmodifiedSince": {
              "type": "string",
              "description": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed)."
          },
          "SSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          },
          "ResponseContentLanguage": {
              "type": "string",
              "description": "Sets the Content-Language header of the response."
          },
          "SSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": "VersionId used to reference a specific version of the object."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "get_object",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          }
      },
      "ref": "aws.s3_get_object",
      "id": "5b87f82e0a8b8a567f589369",
      "uid": "action:aws:s3_get_object"
  },
  {
      "name": "s3_get_object_acl",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": "VersionId used to reference a specific version of the object."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_object_acl",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_object_acl",
      "id": "5b87f82e0a8b8a567f58936a",
      "uid": "action:aws:s3_get_object_acl"
  },
  {
      "name": "s3_get_object_tagging",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": ""
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_object_tagging",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_object_tagging",
      "id": "5b87f82e0a8b8a567f58936b",
      "uid": "action:aws:s3_get_object_tagging"
  },
  {
      "name": "s3_get_object_torrent",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_object_torrent",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_get_object_torrent",
      "id": "5b87f82e0a8b8a567f58936c",
      "uid": "action:aws:s3_get_object_torrent"
  },
  {
      "name": "s3_get_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_get_path",
      "pack": "aws",
      "ref": "aws.s3_get_path",
      "id": "5b87f82e0a8b8a567f58936d",
      "runner_type": "python-script"
  },
  {
      "name": "s3_get_proxy_auth_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_auth_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_get_proxy_auth_header",
      "pack": "aws",
      "ref": "aws.s3_get_proxy_auth_header",
      "id": "5b87f82e0a8b8a567f58936e",
      "runner_type": "python-script"
  },
  {
      "name": "s3_get_proxy_url_with_auth",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_url_with_auth",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_get_proxy_url_with_auth",
      "pack": "aws",
      "ref": "aws.s3_get_proxy_url_with_auth",
      "id": "5b87f82e0a8b8a567f58936f",
      "runner_type": "python-script"
  },
  {
      "name": "s3_handle_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "proxy_pass": {
              "required": true,
              "type": "string"
          },
          "proxy_port": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "proxy": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "handle_proxy",
              "type": "string",
              "immutable": true
          },
          "proxy_user": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_handle_proxy",
      "pack": "aws",
      "ref": "aws.s3_handle_proxy",
      "id": "5b87f82e0a8b8a567f589370",
      "runner_type": "python-script"
  },
  {
      "name": "s3_head_bucket",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "head_bucket",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_head_bucket",
      "id": "5b87f82e0a8b8a567f589371",
      "uid": "action:aws:s3_head_bucket"
  },
  {
      "name": "s3_head_object",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "IfNoneMatch": {
              "type": "string",
              "description": "Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified)."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "PartNumber": {
              "type": "integer",
              "description": "Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object."
          },
          "SSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side\u200b-encryption\u200b-customer-algorithm header."
          },
          "IfUnmodifiedSince": {
              "type": "string",
              "description": "Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed)."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "IfModifiedSince": {
              "type": "string",
              "description": "Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified)."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "head_object",
              "type": "string",
              "immutable": true
          },
          "Range": {
              "type": "string",
              "description": "Downloads the specified range bytes of an object. For more information about the HTTP Range header, go to http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35."
          },
          "IfMatch": {
              "type": "string",
              "description": "Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed)."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "SSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          },
          "SSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": "VersionId used to reference a specific version of the object."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          }
      },
      "ref": "aws.s3_head_object",
      "id": "5b87f82e0a8b8a567f589372",
      "uid": "action:aws:s3_head_object"
  },
  {
      "name": "s3_list_bucket_analytics_configurations",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket from which analytics configurations are retrieved."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "list_bucket_analytics_configurations",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ContinuationToken": {
              "type": "string",
              "description": "The ContinuationToken that represents a placeholder from where this request should begin."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_list_bucket_analytics_configurations",
      "id": "5b87f82e0a8b8a567f589373",
      "uid": "action:aws:s3_list_bucket_analytics_configurations"
  },
  {
      "name": "s3_list_bucket_inventory_configurations",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket containing the inventory configurations to retrieve."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "list_bucket_inventory_configurations",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ContinuationToken": {
              "type": "string",
              "description": "The marker used to continue an inventory configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_list_bucket_inventory_configurations",
      "id": "5b87f82e0a8b8a567f589374",
      "uid": "action:aws:s3_list_bucket_inventory_configurations"
  },
  {
      "name": "s3_list_bucket_metrics_configurations",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket containing the metrics configurations to retrieve."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "list_bucket_metrics_configurations",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ContinuationToken": {
              "type": "string",
              "description": "The marker that is used to continue a metrics configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_list_bucket_metrics_configurations",
      "id": "5b87f82e0a8b8a567f589375",
      "uid": "action:aws:s3_list_bucket_metrics_configurations"
  },
  {
      "name": "s3_list_multipart_uploads",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "UploadIdMarker": {
              "type": "string",
              "description": "Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "Prefix": {
              "type": "string",
              "description": "Lists in-progress uploads only for those keys that begin with the specified prefix."
          },
          "headers": {
              "type": "string"
          },
          "Delimiter": {
              "type": "string",
              "description": "Character you use to group keys."
          },
          "KeyMarker": {
              "type": "string",
              "description": "Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_multipart_uploads",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "MaxUploads": {
              "type": "integer",
              "description": "Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response."
          },
          "EncodingType": {
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_list_multipart_uploads",
      "id": "5b87f82e0a8b8a567f589376",
      "uid": "action:aws:s3_list_multipart_uploads"
  },
  {
      "name": "s3_list_object_versions",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "MaxKeys": {
              "type": "integer",
              "description": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "Prefix": {
              "type": "string",
              "description": "Limits the response to keys that begin with the specified prefix."
          },
          "headers": {
              "type": "string"
          },
          "Delimiter": {
              "type": "string",
              "description": "A delimiter is a character you use to group keys."
          },
          "KeyMarker": {
              "type": "string",
              "description": "Specifies the key to start with when listing objects in a bucket."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_object_versions",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "EncodingType": {
              "type": "string",
              "description": ""
          },
          "VersionIdMarker": {
              "type": "string",
              "description": "Specifies the object version you want to start listing from."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_list_object_versions",
      "id": "5b87f82e0a8b8a567f589377",
      "uid": "action:aws:s3_list_object_versions"
  },
  {
      "name": "s3_list_objects",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "MaxKeys": {
              "type": "integer",
              "description": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more."
          },
          "RequestPayer": {
              "type": "string",
              "description": "Confirms that the requester knows that she or he will be charged for the list objects request. Bucket owners need not specify this parameter in their requests."
          },
          "headers": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "Prefix": {
              "type": "string",
              "description": "Limits the response to keys that begin with the specified prefix."
          },
          "action": {
              "default": "list_objects",
              "type": "string",
              "immutable": true
          },
          "Delimiter": {
              "type": "string",
              "description": "A delimiter is a character you use to group keys."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Marker": {
              "type": "string",
              "description": "Specifies the key to start with when listing objects in a bucket."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "EncodingType": {
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_list_objects",
      "id": "5b87f82e0a8b8a567f589378",
      "uid": "action:aws:s3_list_objects"
  },
  {
      "name": "s3_list_objects_v2",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "RequestPayer": {
              "type": "string",
              "description": "Confirms that the requester knows that she or he will be charged for the list objects request in V2 style. Bucket owners need not specify this parameter in their requests."
          },
          "MaxKeys": {
              "type": "integer",
              "description": "Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more."
          },
          "StartAfter": {
              "type": "string",
              "description": "StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "Name of the bucket to list."
          },
          "Prefix": {
              "type": "string",
              "description": "Limits the response to keys that begin with the specified prefix."
          },
          "FetchOwner": {
              "type": "boolean",
              "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true"
          },
          "headers": {
              "type": "string"
          },
          "Delimiter": {
              "type": "string",
              "description": "A delimiter is a character you use to group keys."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "list_objects_v2",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "EncodingType": {
              "type": "string",
              "description": "Encoding type used by Amazon S3 to encode object keys in the response."
          },
          "ContinuationToken": {
              "type": "string",
              "description": "ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key"
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_list_objects_v2",
      "id": "5b87f82e0a8b8a567f589379",
      "uid": "action:aws:s3_list_objects_v2"
  },
  {
      "name": "s3_list_parts",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "UploadId": {
              "required": true,
              "type": "string",
              "description": "Upload ID identifying the multipart upload whose parts are being listed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "MaxParts": {
              "type": "integer",
              "description": "Sets the maximum number of parts to return."
          },
          "action": {
              "default": "list_parts",
              "type": "string",
              "immutable": true
          },
          "PartNumberMarker": {
              "type": "integer",
              "description": "Specifies the part after which listing should begin. Only parts with higher part numbers will be listed."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_list_parts",
      "id": "5b87f82f0a8b8a567f58937a",
      "uid": "action:aws:s3_list_parts"
  },
  {
      "name": "s3_lookup",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "bucket_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "validate": {
              "default": true,
              "type": "boolean"
          },
          "action": {
              "default": "lookup",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_lookup",
      "pack": "aws",
      "ref": "aws.s3_lookup",
      "id": "5b87f82f0a8b8a567f58937b",
      "runner_type": "python-script"
  },
  {
      "name": "s3_make_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "query_args": {
              "type": "string"
          },
          "bucket": {
              "default": "",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "override_num_retries": {
              "type": "string"
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "headers": {
              "type": "string"
          },
          "key": {
              "default": "",
              "type": "string"
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "make_request",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "retry_handler": {
              "type": "string"
          },
          "sender": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_make_request",
      "pack": "aws",
      "ref": "aws.s3_make_request",
      "id": "5b87f82f0a8b8a567f58937c",
      "runner_type": "python-script"
  },
  {
      "name": "s3_new_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "new_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_new_http_connection",
      "pack": "aws",
      "ref": "aws.s3_new_http_connection",
      "id": "5b87f82f0a8b8a567f58937d",
      "runner_type": "python-script"
  },
  {
      "name": "s3_prefix_proxy_to_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "prefix_proxy_to_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_prefix_proxy_to_path",
      "pack": "aws",
      "ref": "aws.s3_prefix_proxy_to_path",
      "id": "5b87f82f0a8b8a567f58937e",
      "runner_type": "python-script"
  },
  {
      "name": "s3_proxy_ssl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "proxy_ssl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_proxy_ssl",
      "pack": "aws",
      "ref": "aws.s3_proxy_ssl",
      "id": "5b87f82f0a8b8a567f58937f",
      "runner_type": "python-script"
  },
  {
      "name": "s3_put_bucket_accelerate_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "Name of the bucket for which the accelerate configuration is set."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "AccelerateConfiguration": {
              "required": true,
              "type": "object",
              "description": "Specifies the Accelerate Configuration you want to set for the bucket."
          },
          "action": {
              "default": "put_bucket_accelerate_configuration",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_accelerate_configuration",
      "id": "5b87f82f0a8b8a567f589380",
      "uid": "action:aws:s3_put_bucket_accelerate_configuration"
  },
  {
      "name": "s3_put_bucket_acl",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "GrantFullControl": {
              "type": "string",
              "description": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket."
          },
          "GrantWriteACP": {
              "type": "string",
              "description": "Allows grantee to write the ACL for the applicable bucket."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "GrantReadACP": {
              "type": "string",
              "description": "Allows grantee to read the bucket ACL."
          },
          "GrantWrite": {
              "type": "string",
              "description": "Allows grantee to create, overwrite, and delete any object in the bucket."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ACL": {
              "type": "string",
              "description": "The canned ACL to apply to the bucket."
          },
          "AccessControlPolicy": {
              "type": "object",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "GrantRead": {
              "type": "string",
              "description": "Allows grantee to list the objects in the bucket."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_acl",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_acl",
      "id": "5b87f82f0a8b8a567f589381",
      "uid": "action:aws:s3_put_bucket_acl"
  },
  {
      "name": "s3_put_bucket_analytics_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "AnalyticsConfiguration": {
              "required": true,
              "type": "object",
              "description": "The configuration and any analyses for the analytics filter."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket to which an analytics configuration is stored."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "put_bucket_analytics_configuration",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The identifier used to represent an analytics configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_analytics_configuration",
      "id": "5b87f82f0a8b8a567f589382",
      "uid": "action:aws:s3_put_bucket_analytics_configuration"
  },
  {
      "name": "s3_put_bucket_cors",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "CORSConfiguration": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_cors",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_cors",
      "id": "5b87f82f0a8b8a567f589383",
      "uid": "action:aws:s3_put_bucket_cors"
  },
  {
      "name": "s3_put_bucket_inventory_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "InventoryConfiguration": {
              "required": true,
              "type": "object",
              "description": "Specifies the inventory configuration."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket where the inventory configuration will be stored."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "put_bucket_inventory_configuration",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The ID used to identify the inventory configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_inventory_configuration",
      "id": "5b87f82f0a8b8a567f589384",
      "uid": "action:aws:s3_put_bucket_inventory_configuration"
  },
  {
      "name": "s3_put_bucket_lifecycle",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "LifecycleConfiguration": {
              "type": "object",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_lifecycle",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_lifecycle",
      "id": "5b87f82f0a8b8a567f589385",
      "uid": "action:aws:s3_put_bucket_lifecycle"
  },
  {
      "name": "s3_put_bucket_lifecycle_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "LifecycleConfiguration": {
              "type": "object",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_lifecycle_configuration",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_lifecycle_configuration",
      "id": "5b87f82f0a8b8a567f589386",
      "uid": "action:aws:s3_put_bucket_lifecycle_configuration"
  },
  {
      "name": "s3_put_bucket_logging",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "BucketLoggingStatus": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_logging",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_logging",
      "id": "5b87f82f0a8b8a567f589387",
      "uid": "action:aws:s3_put_bucket_logging"
  },
  {
      "name": "s3_put_bucket_metrics_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "MetricsConfiguration": {
              "required": true,
              "type": "object",
              "description": "Specifies the metrics configuration."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "The name of the bucket for which the metrics configuration is set."
          },
          "headers": {
              "type": "string"
          },
          "action": {
              "default": "put_bucket_metrics_configuration",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Id": {
              "required": true,
              "type": "string",
              "description": "The ID used to identify the metrics configuration."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_metrics_configuration",
      "id": "5b87f82f0a8b8a567f589388",
      "uid": "action:aws:s3_put_bucket_metrics_configuration"
  },
  {
      "name": "s3_put_bucket_notification",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NotificationConfiguration": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "action": {
              "default": "put_bucket_notification",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_notification",
      "id": "5b87f82f0a8b8a567f589389",
      "uid": "action:aws:s3_put_bucket_notification"
  },
  {
      "name": "s3_put_bucket_notification_configuration",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NotificationConfiguration": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "action": {
              "default": "put_bucket_notification_configuration",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_notification_configuration",
      "id": "5b87f82f0a8b8a567f58938a",
      "uid": "action:aws:s3_put_bucket_notification_configuration"
  },
  {
      "name": "s3_put_bucket_policy",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Policy": {
              "required": true,
              "type": "string",
              "description": "The bucket policy as a JSON document."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_policy",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_policy",
      "id": "5b87f82f0a8b8a567f58938b",
      "uid": "action:aws:s3_put_bucket_policy"
  },
  {
      "name": "s3_put_bucket_replication",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ReplicationConfiguration": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "put_bucket_replication",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_replication",
      "id": "5b87f82f0a8b8a567f58938c",
      "uid": "action:aws:s3_put_bucket_replication"
  },
  {
      "name": "s3_put_bucket_request_payment",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "RequestPaymentConfiguration": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_request_payment",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_request_payment",
      "id": "5b87f82f0a8b8a567f58938d",
      "uid": "action:aws:s3_put_bucket_request_payment"
  },
  {
      "name": "s3_put_bucket_tagging",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_tagging",
              "type": "string",
              "immutable": true
          },
          "Tagging": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_tagging",
      "id": "5b87f82f0a8b8a567f58938e",
      "uid": "action:aws:s3_put_bucket_tagging"
  },
  {
      "name": "s3_put_bucket_versioning",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "MFA": {
              "type": "string",
              "description": "The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "VersioningConfiguration": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_bucket_versioning",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_versioning",
      "id": "5b87f82f0a8b8a567f58938f",
      "uid": "action:aws:s3_put_bucket_versioning"
  },
  {
      "name": "s3_put_bucket_website",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "WebsiteConfiguration": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "put_bucket_website",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_bucket_website",
      "id": "5b87f82f0a8b8a567f589390",
      "uid": "action:aws:s3_put_bucket_website"
  },
  {
      "name": "s3_put_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "connection": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_put_http_connection",
      "pack": "aws",
      "ref": "aws.s3_put_http_connection",
      "id": "5b87f82f0a8b8a567f589391",
      "runner_type": "python-script"
  },
  {
      "name": "s3_put_object",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "ContentEncoding": {
              "type": "string",
              "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field."
          },
          "StorageClass": {
              "type": "string",
              "description": "The type of storage to use for the object. Defaults to 'STANDARD'."
          },
          "GrantReadACP": {
              "type": "string",
              "description": "Allows grantee to read the object ACL."
          },
          "ServerSideEncryption": {
              "type": "string",
              "description": "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms)."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "SSEKMSKeyId": {
              "type": "string",
              "description": "Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version"
          },
          "ContentDisposition": {
              "type": "string",
              "description": "Specifies presentational information for the object."
          },
          "Metadata": {
              "type": "object",
              "description": "A map of metadata to store with the object in S3."
          },
          "Body": {
              "type": "string",
              "description": "Object data."
          },
          "SSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side\u200b-encryption\u200b-customer-algorithm header."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "WebsiteRedirectLocation": {
              "type": "string",
              "description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata."
          },
          "Expires": {
              "type": "string",
              "description": "The date and time at which the object is no longer cacheable."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": "Object key for which the PUT operation was initiated."
          },
          "CacheControl": {
              "type": "string",
              "description": "Specifies caching behavior along the request/reply chain."
          },
          "Tagging": {
              "type": "string",
              "description": "The tag-set for the object. The tag-set must be encoded as URL Query parameters"
          },
          "cls": {
              "default": "s3",
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ContentLength": {
              "type": "integer",
              "description": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "Name of the bucket to which the PUT operation was initiated."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "GrantRead": {
              "type": "string",
              "description": "Allows grantee to read the object data and its metadata."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "ContentType": {
              "type": "string",
              "description": "A standard MIME type describing the format of the object data."
          },
          "ACL": {
              "type": "string",
              "description": "The canned ACL to apply to the object."
          },
          "GrantFullControl": {
              "type": "string",
              "description": "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object."
          },
          "SSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
          },
          "GrantWriteACP": {
              "type": "string",
              "description": "Allows grantee to write the ACL for the applicable object."
          },
          "ContentLanguage": {
              "type": "string",
              "description": "The language the content is in."
          },
          "ContentMD5": {
              "type": "string",
              "description": "The base64-encoded 128-bit MD5 digest of the part data."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "put_object",
              "type": "string",
              "immutable": true
          },
          "SSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          }
      },
      "ref": "aws.s3_put_object",
      "id": "5b87f82f0a8b8a567f589392",
      "uid": "action:aws:s3_put_object"
  },
  {
      "name": "s3_put_object_acl",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "GrantFullControl": {
              "type": "string",
              "description": "Allows grantee the read, write, read ACP, and write ACP permissions on the bucket."
          },
          "GrantWriteACP": {
              "type": "string",
              "description": "Allows grantee to write the ACL for the applicable bucket."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "GrantReadACP": {
              "type": "string",
              "description": "Allows grantee to read the bucket ACL."
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "GrantWrite": {
              "type": "string",
              "description": "Allows grantee to create, overwrite, and delete any object in the bucket."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ACL": {
              "type": "string",
              "description": "The canned ACL to apply to the object."
          },
          "AccessControlPolicy": {
              "type": "object",
              "description": ""
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": "VersionId used to reference a specific version of the object."
          },
          "GrantRead": {
              "type": "string",
              "description": "Allows grantee to list the objects in the bucket."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_object_acl",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_object_acl",
      "id": "5b87f82f0a8b8a567f589393",
      "uid": "action:aws:s3_put_object_acl"
  },
  {
      "name": "s3_put_object_tagging",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "ContentMD5": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": ""
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_object_tagging",
              "type": "string",
              "immutable": true
          },
          "Tagging": {
              "required": true,
              "type": "object",
              "description": ""
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_put_object_tagging",
      "id": "5b87f82f0a8b8a567f589394",
      "uid": "action:aws:s3_put_object_tagging"
  },
  {
      "name": "s3_restore_object",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "headers": {
              "type": "string"
          },
          "VersionId": {
              "type": "string",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "RestoreRequest": {
              "type": "object",
              "description": ""
          },
          "action": {
              "default": "restore_object",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "s3",
              "type": "string"
          }
      },
      "ref": "aws.s3_restore_object",
      "id": "5b87f82f0a8b8a567f589395",
      "uid": "action:aws:s3_restore_object"
  },
  {
      "name": "s3_server_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "server_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_server_name",
      "pack": "aws",
      "ref": "aws.s3_server_name",
      "id": "5b87f82f0a8b8a567f589396",
      "runner_type": "python-script"
  },
  {
      "name": "s3_set_bucket_class",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "bucket_class": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_bucket_class",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_set_bucket_class",
      "pack": "aws",
      "ref": "aws.s3_set_bucket_class",
      "id": "5b87f82f0a8b8a567f589397",
      "runner_type": "python-script"
  },
  {
      "name": "s3_set_host_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "request": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_host_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_set_host_header",
      "pack": "aws",
      "ref": "aws.s3_set_host_header",
      "id": "5b87f82f0a8b8a567f589398",
      "runner_type": "python-script"
  },
  {
      "name": "s3_set_request_hook",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "hook": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_request_hook",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_set_request_hook",
      "pack": "aws",
      "ref": "aws.s3_set_request_hook",
      "id": "5b87f82f0a8b8a567f589399",
      "runner_type": "python-script"
  },
  {
      "name": "s3_skip_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "skip_proxy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.s3.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Connection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_skip_proxy",
      "pack": "aws",
      "ref": "aws.s3_skip_proxy",
      "id": "5b87f82f0a8b8a567f58939a",
      "runner_type": "python-script"
  },
  {
      "name": "s3_upload_file",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "key": {
              "required": true,
              "type": "string"
          },
          "bucket": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "filename": {
              "required": true,
              "type": "string"
          },
          "headers": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3.s3.transfer",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "upload_file",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "S3Transfer",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:s3_upload_file",
      "pack": "aws",
      "ref": "aws.s3_upload_file",
      "id": "5b87f82f0a8b8a567f58939b",
      "runner_type": "python-script"
  },
  {
      "name": "s3_upload_part",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "Body": {
              "type": "string",
              "description": "Object data."
          },
          "SSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side\u200b-encryption\u200b-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": "Object key for which the multipart upload was initiated."
          },
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ContentLength": {
              "type": "integer",
              "description": "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically."
          },
          "ContentMD5": {
              "type": "string",
              "description": "The base64-encoded 128-bit MD5 digest of the part data."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": "Name of the bucket to which the multipart upload was initiated."
          },
          "SSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "UploadId": {
              "required": true,
              "type": "string",
              "description": "Upload ID identifying the multipart upload whose part is being uploaded."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "upload_part",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "PartNumber": {
              "required": true,
              "type": "integer",
              "description": "Part number of part being uploaded. This is a positive integer between 1 and 10,000."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          },
          "SSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          }
      },
      "ref": "aws.s3_upload_part",
      "id": "5b87f82f0a8b8a567f58939c",
      "uid": "action:aws:s3_upload_part"
  },
  {
      "name": "s3_upload_part_copy",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "RequestPayer": {
              "type": "string",
              "description": ""
          },
          "CopySourceIfModifiedSince": {
              "type": "string",
              "description": "Copies the object if it has been modified since the specified time."
          },
          "CopySourceIfUnmodifiedSince": {
              "type": "string",
              "description": "Copies the object if it hasn't been modified since the specified time."
          },
          "CopySourceSSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "PartNumber": {
              "required": true,
              "type": "integer",
              "description": "Part number of part being copied. This is a positive integer between 1 and 10,000."
          },
          "SSECustomerKey": {
              "type": "string",
              "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side\u200b-encryption\u200b-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "CopySource": {
              "required": true,
              "type": "string",
              "description": "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded."
          },
          "Key": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "CopySourceRange": {
              "type": "string",
              "description": "The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first ten bytes of the source. You can copy a range only if the source object is greater than 5 GB."
          },
          "cls": {
              "default": "s3",
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "CopySourceSSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use when decrypting the source object (e.g., AES256)."
          },
          "Bucket": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "CopySourceSSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          },
          "UploadId": {
              "required": true,
              "type": "string",
              "description": "Upload ID identifying the multipart upload whose part is being copied."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "CopySourceIfMatch": {
              "type": "string",
              "description": "Copies the object if its entity tag (ETag) matches the specified tag."
          },
          "SSECustomerAlgorithm": {
              "type": "string",
              "description": "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
          },
          "headers": {
              "type": "string"
          },
          "CopySourceIfNoneMatch": {
              "type": "string",
              "description": "Copies the object if its entity tag (ETag) is different than the specified ETag."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "upload_part_copy",
              "type": "string",
              "immutable": true
          },
          "SSECustomerKeyMD5": {
              "type": "string",
              "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
          }
      },
      "ref": "aws.s3_upload_part_copy",
      "id": "5b87f82f0a8b8a567f58939d",
      "uid": "action:aws:s3_upload_part_copy"
  },
  {
      "name": "set_hostname_cloud",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "The hostname to set"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "cmd": {
              "default": "sed -i -e \"s/\\(preserve_hostname: \\)false/\\1true/\" /etc/cloud/cloud.cfg && echo \"{{hostname}}\" > /etc/hostname && hostname {{hostname}} && echo \"127.0.0.1 {{hostname}}\" >> /etc/hosts",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Set the hostname on a VM and update cloud.cfg",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:aws:set_hostname_cloud",
      "pack": "aws",
      "ref": "aws.set_hostname_cloud",
      "id": "5b87f82f0a8b8a567f58939e",
      "runner_type": "run-remote"
  },
  {
      "name": "sns_add_permission",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "ActionName": {
              "required": true,
              "type": "array",
              "description": "The action you want to allow for the specified principal(s). Valid values: any Amazon SNS action name."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Label": {
              "required": true,
              "type": "string",
              "description": "A unique identifier for the new policy statement."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "AWSAccountId": {
              "required": true,
              "type": "array",
              "description": "The AWS account IDs of the users (principals) who will be given access to the specified actions. The users must have AWS accounts, but do not need to be signed up for this service."
          },
          "action": {
              "default": "add_permission",
              "type": "string",
              "immutable": true
          },
          "TopicArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the topic whose access control policy you wish to modify."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_add_permission",
      "id": "5b87f82f0a8b8a567f58939f",
      "uid": "action:aws:sns_add_permission"
  },
  {
      "name": "sns_check_if_phone_number_is_opted_out",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "phoneNumber": {
              "required": true,
              "type": "string",
              "description": "The phone number for which you want to check the opt out status."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "check_if_phone_number_is_opted_out",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_check_if_phone_number_is_opted_out",
      "id": "5b87f82f0a8b8a567f5893a0",
      "uid": "action:aws:sns_check_if_phone_number_is_opted_out"
  },
  {
      "name": "sns_confirm_subscription",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AuthenticateOnUnsubscribe": {
              "type": "string",
              "description": "Disallows unauthenticated unsubscribes of the subscription. If the value of this parameter is true and the request has an AWS signature, then only the topic owner and the subscription owner can unsubscribe the endpoint. The unsubscribe action requires AWS authentication. "
          },
          "headers": {
              "type": "string"
          },
          "Token": {
              "required": true,
              "type": "string",
              "description": "Short-lived token sent to an endpoint during the Subscribe action."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "confirm_subscription",
              "type": "string",
              "immutable": true
          },
          "TopicArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the topic for which you wish to confirm a subscription."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_confirm_subscription",
      "id": "5b87f82f0a8b8a567f5893a1",
      "uid": "action:aws:sns_confirm_subscription"
  },
  {
      "name": "sns_create_platform_application",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Platform": {
              "required": true,
              "type": "string",
              "description": "The following platforms are supported: ADM (Amazon Device Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Google Cloud Messaging)."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "Attributes": {
              "required": true,
              "type": "object",
              "description": "For a list of attributes, see SetPlatformApplicationAttributes "
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Name": {
              "required": true,
              "type": "string",
              "description": "Application names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, hyphens, and periods, and must be between 1 and 256 characters long."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_platform_application",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_create_platform_application",
      "id": "5b87f82f0a8b8a567f5893a2",
      "uid": "action:aws:sns_create_platform_application"
  },
  {
      "name": "sns_create_platform_endpoint",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "PlatformApplicationArn": {
              "required": true,
              "type": "string",
              "description": "PlatformApplicationArn returned from CreatePlatformApplication is used to create a an endpoint."
          },
          "headers": {
              "type": "string"
          },
          "Token": {
              "required": true,
              "type": "string",
              "description": "Unique identifier created by the notification service for an app on a device. The specific name for Token will vary, depending on which notification service is being used. For example, when using APNS as the notification service, you need the device token. Alternatively, when using GCM or ADM, the device token equivalent is called the registration ID."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Attributes": {
              "type": "object",
              "description": "For a list of attributes, see SetEndpointAttributes."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_platform_endpoint",
              "type": "string",
              "immutable": true
          },
          "CustomUserData": {
              "type": "string",
              "description": "Arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_create_platform_endpoint",
      "id": "5b87f82f0a8b8a567f5893a3",
      "uid": "action:aws:sns_create_platform_endpoint"
  },
  {
      "name": "sns_create_topic",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_topic",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "Name": {
              "required": true,
              "type": "string",
              "description": "The name of the topic you want to create. Constraints: Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_create_topic",
      "id": "5b87f82f0a8b8a567f5893a4",
      "uid": "action:aws:sns_create_topic"
  },
  {
      "name": "sns_delete_endpoint",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "EndpointArn": {
              "required": true,
              "type": "string",
              "description": "EndpointArn of endpoint to delete."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_endpoint",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_delete_endpoint",
      "id": "5b87f82f0a8b8a567f5893a5",
      "uid": "action:aws:sns_delete_endpoint"
  },
  {
      "name": "sns_delete_platform_application",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "PlatformApplicationArn": {
              "required": true,
              "type": "string",
              "description": "PlatformApplicationArn of platform application object to delete."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_platform_application",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_delete_platform_application",
      "id": "5b87f8300a8b8a567f5893a6",
      "uid": "action:aws:sns_delete_platform_application"
  },
  {
      "name": "sns_delete_topic",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_topic",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "TopicArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the topic you want to delete."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_delete_topic",
      "id": "5b87f8300a8b8a567f5893a7",
      "uid": "action:aws:sns_delete_topic"
  },
  {
      "name": "sns_get_endpoint_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "EndpointArn": {
              "required": true,
              "type": "string",
              "description": "EndpointArn for GetEndpointAttributes input."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_endpoint_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_get_endpoint_attributes",
      "id": "5b87f8300a8b8a567f5893a8",
      "uid": "action:aws:sns_get_endpoint_attributes"
  },
  {
      "name": "sns_get_platform_application_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "PlatformApplicationArn": {
              "required": true,
              "type": "string",
              "description": "PlatformApplicationArn for GetPlatformApplicationAttributesInput."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_platform_application_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_get_platform_application_attributes",
      "id": "5b87f8300a8b8a567f5893a9",
      "uid": "action:aws:sns_get_platform_application_attributes"
  },
  {
      "name": "sns_get_sms_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "attributes": {
              "type": "array",
              "description": "A list of the individual attribute names, such as MonthlySpendLimit, for which you want values. For all attribute names, see SetSMSAttributes. If you don't use this parameter, Amazon SNS returns all SMS attributes."
          },
          "action": {
              "default": "get_sms_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_get_sms_attributes",
      "id": "5b87f8300a8b8a567f5893aa",
      "uid": "action:aws:sns_get_sms_attributes"
  },
  {
      "name": "sns_get_subscription_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "SubscriptionArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the subscription whose properties you want to get."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_subscription_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_get_subscription_attributes",
      "id": "5b87f8300a8b8a567f5893ab",
      "uid": "action:aws:sns_get_subscription_attributes"
  },
  {
      "name": "sns_get_topic_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_topic_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "TopicArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the topic whose properties you want to get."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_get_topic_attributes",
      "id": "5b87f8300a8b8a567f5893ac",
      "uid": "action:aws:sns_get_topic_attributes"
  },
  {
      "name": "sns_list_endpoints_by_platform_application",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "PlatformApplicationArn": {
              "required": true,
              "type": "string",
              "description": "PlatformApplicationArn for ListEndpointsByPlatformApplicationInput action."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "NextToken string is used when calling ListEndpointsByPlatformApplication action to retrieve additional records that are available after the first page results."
          },
          "action": {
              "default": "list_endpoints_by_platform_application",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_list_endpoints_by_platform_application",
      "id": "5b87f8300a8b8a567f5893ad",
      "uid": "action:aws:sns_list_endpoints_by_platform_application"
  },
  {
      "name": "sns_list_phone_numbers_opted_out",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_phone_numbers_opted_out",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "nextToken": {
              "type": "string",
              "description": "A NextToken string is used when you call the ListPhoneNumbersOptedOut action to retrieve additional records that are available after the first page of results."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_list_phone_numbers_opted_out",
      "id": "5b87f8300a8b8a567f5893ae",
      "uid": "action:aws:sns_list_phone_numbers_opted_out"
  },
  {
      "name": "sns_list_platform_applications",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_platform_applications",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "NextToken string is used when calling ListPlatformApplications action to retrieve additional records that are available after the first page results."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_list_platform_applications",
      "id": "5b87f8300a8b8a567f5893af",
      "uid": "action:aws:sns_list_platform_applications"
  },
  {
      "name": "sns_list_subscriptions",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_subscriptions",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "Token returned by the previous ListSubscriptions request."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_list_subscriptions",
      "id": "5b87f8300a8b8a567f5893b0",
      "uid": "action:aws:sns_list_subscriptions"
  },
  {
      "name": "sns_list_subscriptions_by_topic",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "Token returned by the previous ListSubscriptionsByTopic request."
          },
          "action": {
              "default": "list_subscriptions_by_topic",
              "type": "string",
              "immutable": true
          },
          "TopicArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the topic for which you wish to find subscriptions."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_list_subscriptions_by_topic",
      "id": "5b87f8300a8b8a567f5893b1",
      "uid": "action:aws:sns_list_subscriptions_by_topic"
  },
  {
      "name": "sns_list_topics",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "list_topics",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "NextToken": {
              "type": "string",
              "description": "Token returned by the previous ListTopics request."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_list_topics",
      "id": "5b87f8300a8b8a567f5893b2",
      "uid": "action:aws:sns_list_topics"
  },
  {
      "name": "sns_opt_in_phone_number",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "phoneNumber": {
              "required": true,
              "type": "string",
              "description": "The phone number to opt in."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "opt_in_phone_number",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_opt_in_phone_number",
      "id": "5b87f8300a8b8a567f5893b3",
      "uid": "action:aws:sns_opt_in_phone_number"
  },
  {
      "name": "sns_publish",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "PhoneNumber": {
              "type": "string",
              "description": "The phone number to which you want to deliver an SMS message. Use E.164 format. If you don't specify a value for the PhoneNumber parameter, you must specify a value for the TargetArn or TopicArn parameters."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "Subject": {
              "type": "string",
              "description": "Optional parameter to be used as the 'Subject' line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints. Constraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "MessageStructure": {
              "type": "string",
              "description": "Set MessageStructure to json if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set MessageStructure to json, the value of the Message parameter must:    be a syntactically valid JSON object; and   contain at least a top-level JSON key of 'default' with a value that is a string.   You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., 'http'). For information about sending different messages for each protocol using the AWS Management Console, go to Create Different Messages for Each Protocol in the Amazon Simple Notification Service Getting Started Guide.  Valid value: json "
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "publish",
              "type": "string",
              "immutable": true
          },
          "TargetArn": {
              "type": "string",
              "description": "Either TopicArn or EndpointArn, but not both. If you don't specify a value for the TargetArn parameter, you must specify a value for the PhoneNumber or TopicArn parameters."
          },
          "Message": {
              "required": true,
              "type": "string",
              "description": "The message you want to send to the topic. If you want to send the same message to all transport protocols, include the text of the message as a String value. If you want to send different messages for each transport protocol, set the value of the MessageStructure parameter to json and use a JSON object for the Message parameter.  Constraints: Messages must be UTF-8 encoded strings at most 256 KB in size (262144 bytes, not 262144 characters). JSON-specific constraints:   Keys in the JSON object that correspond to supported transport protocols must have simple JSON string values.   The values will be parsed (unescaped) before they are used in outgoing messages.   Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).   Values have a minimum length of 0 (the empty string, '', is allowed).   Values have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).   Non-string values will cause the key to be ignored.   Keys that do not correspond to supported transport protocols are ignored.   Duplicate keys are not allowed.   Failure to parse or validate any key or value in the message will cause the Publish call to return an error (no partial delivery).  "
          },
          "cls": {
              "default": "sns",
              "type": "string"
          },
          "TopicArn": {
              "type": "string",
              "description": "The topic you want to publish to. If you don't specify a value for the TopicArn parameter, you must specify a value for the PhoneNumber or TargetArn parameters."
          },
          "MessageAttributes": {
              "type": "object",
              "description": "Message attributes for Publish action."
          }
      },
      "ref": "aws.sns_publish",
      "id": "5b87f8300a8b8a567f5893b4",
      "uid": "action:aws:sns_publish"
  },
  {
      "name": "sns_remove_permission",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "Label": {
              "required": true,
              "type": "string",
              "description": "The unique label of the statement you want to remove."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "remove_permission",
              "type": "string",
              "immutable": true
          },
          "TopicArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the topic whose access control policy you wish to modify."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_remove_permission",
      "id": "5b87f8300a8b8a567f5893b5",
      "uid": "action:aws:sns_remove_permission"
  },
  {
      "name": "sns_set_endpoint_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "EndpointArn": {
              "required": true,
              "type": "string",
              "description": "EndpointArn used for SetEndpointAttributes action."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Attributes": {
              "required": true,
              "type": "object",
              "description": "A map of the endpoint attributes. Attributes in this map include the following:    CustomUserData -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.    Enabled -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.    Token -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.  "
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_endpoint_attributes",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_set_endpoint_attributes",
      "id": "5b87f8300a8b8a567f5893b6",
      "uid": "action:aws:sns_set_endpoint_attributes"
  },
  {
      "name": "sns_set_platform_application_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "PlatformApplicationArn": {
              "required": true,
              "type": "string",
              "description": "PlatformApplicationArn for SetPlatformApplicationAttributes action."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Attributes": {
              "required": true,
              "type": "object",
              "description": "A map of the platform application attributes. Attributes in this map include the following:    PlatformCredential -- The credential received from the notification service. For APNS/APNS_SANDBOX, PlatformCredential is private key. For GCM, PlatformCredential is 'API key'. For ADM, PlatformCredential is 'client secret'.    PlatformPrincipal -- The principal received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is SSL certificate. For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is 'client id'.    EventEndpointCreated -- Topic ARN to which EndpointCreated event notifications should be sent.    EventEndpointDeleted -- Topic ARN to which EndpointDeleted event notifications should be sent.    EventEndpointUpdated -- Topic ARN to which EndpointUpdate event notifications should be sent.    EventDeliveryFailure -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.    SuccessFeedbackRoleArn -- IAM role ARN used to give Amazon SNS write access to use CloudWatch Logs on your behalf.    FailureFeedbackRoleArn -- IAM role ARN used to give Amazon SNS write access to use CloudWatch Logs on your behalf.    SuccessFeedbackSampleRate -- Sample rate percentage (0-100) of successfully delivered messages.  "
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_platform_application_attributes",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_set_platform_application_attributes",
      "id": "5b87f8300a8b8a567f5893b7",
      "uid": "action:aws:sns_set_platform_application_attributes"
  },
  {
      "name": "sns_set_sms_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "attributes": {
              "required": true,
              "type": "object",
              "description": "The default settings for sending SMS messages from your account. You can set values for the following attribute names:  MonthlySpendLimit \u2013 The maximum amount in USD that you are willing to spend each month to send SMS messages. When Amazon SNS determines that sending an SMS message would incur a cost that exceeds this limit, it stops sending SMS messages within minutes.  Amazon SNS stops sending SMS messages within minutes of the limit being crossed. During that interval, if you continue to send SMS messages, you will incur costs that exceed your limit.  By default, the spend limit is set to the maximum allowed by Amazon SNS. If you want to exceed the maximum, contact AWS Support or your AWS sales representative for a service limit increase.  DeliveryStatusIAMRole \u2013 The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For each SMS message that you send, Amazon SNS writes a log that includes the message price, the success or failure status, the reason for failure (if the message failed), the message dwell time, and other information.  DeliveryStatusSuccessSamplingRate \u2013 The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value can be an integer from 0 - 100. For example, to write logs only for failed deliveries, set this value to 0. To write logs for 10% of your successful deliveries, set it to 10.  DefaultSenderID \u2013 A string, such as your business brand, that is displayed as the sender on the receiving device. Support for sender IDs varies by country. The sender ID can be 1 - 11 alphanumeric characters, and it must contain at least one letter.  DefaultSMSType \u2013 The type of SMS message that you will send by default. You can assign the following values:    Promotional \u2013 (Default) Noncritical messages, such as marketing messages. Amazon SNS optimizes the message delivery to incur the lowest cost.    Transactional \u2013 Critical messages that support customer transactions, such as one-time passcodes for multi-factor authentication. Amazon SNS optimizes the message delivery to achieve the highest reliability.    UsageReportS3Bucket \u2013 The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS will deliver a usage report as a CSV file to the bucket. The report includes the following information for each SMS message that was successfully delivered by your account:   Time that the message was published (in UTC)   Message ID   Destination phone number   Message type   Delivery status   Message price (in USD)   Part number (a message is split into multiple parts if it is too long for a single message)   Total number of parts   To receive the report, the bucket must have a policy that allows the Amazon SNS service principle to perform the s3:PutObject and s3:GetBucketLocation actions. For an example bucket policy and usage report, see Monitoring SMS Activity in the Amazon SNS Developer Guide."
          },
          "action": {
              "default": "set_sms_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_set_sms_attributes",
      "id": "5b87f8300a8b8a567f5893b8",
      "uid": "action:aws:sns_set_sms_attributes"
  },
  {
      "name": "sns_set_subscription_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AttributeName": {
              "required": true,
              "type": "string",
              "description": "The name of the attribute you want to set. Only a subset of the subscriptions attributes are mutable. Valid values: DeliveryPolicy | RawMessageDelivery "
          },
          "SubscriptionArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the subscription to modify."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "AttributeValue": {
              "type": "string",
              "description": "The new value for the attribute in JSON format."
          },
          "action": {
              "default": "set_subscription_attributes",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_set_subscription_attributes",
      "id": "5b87f8300a8b8a567f5893b9",
      "uid": "action:aws:sns_set_subscription_attributes"
  },
  {
      "name": "sns_set_topic_attributes",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "AttributeName": {
              "required": true,
              "type": "string",
              "description": "The name of the attribute you want to set. Only a subset of the topic's attributes are mutable. Valid values: Policy | DisplayName | DeliveryPolicy "
          },
          "AttributeValue": {
              "type": "string",
              "description": "The new value for the attribute."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "set_topic_attributes",
              "type": "string",
              "immutable": true
          },
          "TopicArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the topic to modify."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_set_topic_attributes",
      "id": "5b87f8300a8b8a567f5893ba",
      "uid": "action:aws:sns_set_topic_attributes"
  },
  {
      "name": "sns_subscribe",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "Endpoint": {
              "type": "string",
              "description": "The endpoint that you want to receive notifications. Endpoints vary by protocol:   For the http protocol, the endpoint is an URL beginning with 'http://'   For the https protocol, the endpoint is a URL beginning with 'https://'   For the email protocol, the endpoint is an email address   For the email-json protocol, the endpoint is an email address   For the sms protocol, the endpoint is a phone number of an SMS-enabled device   For the sqs protocol, the endpoint is the ARN of an Amazon SQS queue   For the application protocol, the endpoint is the EndpointArn of a mobile app and device.   For the lambda protocol, the endpoint is the ARN of an AWS Lambda function.  "
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "Protocol": {
              "required": true,
              "type": "string",
              "description": "The protocol you want to use. Supported protocols include:    http -- delivery of JSON-encoded message via HTTP POST    https -- delivery of JSON-encoded message via HTTPS POST    email -- delivery of message via SMTP    email-json -- delivery of JSON-encoded message via SMTP    sms -- delivery of message via SMS    sqs -- delivery of JSON-encoded message to an Amazon SQS queue    application -- delivery of JSON-encoded message to an EndpointArn for a mobile app and device.    lambda -- delivery of JSON-encoded message to an AWS Lambda function.  "
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "subscribe",
              "type": "string",
              "immutable": true
          },
          "TopicArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the topic you want to subscribe to."
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_subscribe",
      "id": "5b87f8300a8b8a567f5893bb",
      "uid": "action:aws:sns_subscribe"
  },
  {
      "name": "sns_unsubscribe",
      "runner_type": "python-script",
      "tags": [],
      "enabled": true,
      "pack": "aws",
      "entry_point": "run.py",
      "notify": {},
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "SubscriptionArn": {
              "required": true,
              "type": "string",
              "description": "The ARN of the subscription to be deleted."
          },
          "headers": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "unsubscribe",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto3",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "sns",
              "type": "string"
          }
      },
      "ref": "aws.sns_unsubscribe",
      "id": "5b87f8300a8b8a567f5893bc",
      "uid": "action:aws:sns_unsubscribe"
  },
  {
      "name": "sqs_add_permission",
      "parameters": {
          "action_name": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "add_permission",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "aws_account_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_add_permission",
      "pack": "aws",
      "ref": "aws.sqs_add_permission",
      "id": "5b87f8300a8b8a567f5893bd",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_build_base_http_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "default": "build_base_http_request",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "host": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "auth_path": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_build_base_http_request",
      "pack": "aws",
      "ref": "aws.sqs_build_base_http_request",
      "id": "5b87f8300a8b8a567f5893be",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_build_complex_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_complex_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_build_complex_list_params",
      "pack": "aws",
      "ref": "aws.sqs_build_complex_list_params",
      "id": "5b87f8300a8b8a567f5893bf",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_build_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_build_list_params",
      "pack": "aws",
      "ref": "aws.sqs_build_list_params",
      "id": "5b87f8300a8b8a567f5893c0",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_change_message_visibility",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "change_message_visibility",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "receipt_handle": {
              "required": true,
              "type": "string"
          },
          "visibility_timeout": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_change_message_visibility",
      "pack": "aws",
      "ref": "aws.sqs_change_message_visibility",
      "id": "5b87f8300a8b8a567f5893c1",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_change_message_visibility_batch",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "messages": {
              "required": true,
              "type": "string"
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "change_message_visibility_batch",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_change_message_visibility_batch",
      "pack": "aws",
      "ref": "aws.sqs_change_message_visibility_batch",
      "id": "5b87f8300a8b8a567f5893c2",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "close",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_close",
      "pack": "aws",
      "ref": "aws.sqs_close",
      "id": "5b87f8300a8b8a567f5893c3",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_create_queue",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_queue",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "visibility_timeout": {
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_create_queue",
      "pack": "aws",
      "ref": "aws.sqs_create_queue",
      "id": "5b87f8300a8b8a567f5893c4",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_delete_message",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_message",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_delete_message",
      "pack": "aws",
      "ref": "aws.sqs_delete_message",
      "id": "5b87f8300a8b8a567f5893c5",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_delete_message_batch",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "messages": {
              "required": true,
              "type": "string"
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_message_batch",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_delete_message_batch",
      "pack": "aws",
      "ref": "aws.sqs_delete_message_batch",
      "id": "5b87f8300a8b8a567f5893c6",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_delete_message_from_handle",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_message_from_handle",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "receipt_handle": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_delete_message_from_handle",
      "pack": "aws",
      "ref": "aws.sqs_delete_message_from_handle",
      "id": "5b87f8300a8b8a567f5893c7",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_delete_queue",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_queue",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "force_deletion": {
              "default": false,
              "type": "boolean"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_delete_queue",
      "pack": "aws",
      "ref": "aws.sqs_delete_queue",
      "id": "5b87f8300a8b8a567f5893c8",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_all_queues",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "prefix": {
              "default": "",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_queues",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_all_queues",
      "pack": "aws",
      "ref": "aws.sqs_get_all_queues",
      "id": "5b87f8300a8b8a567f5893c9",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_dead_letter_source_queues",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_dead_letter_source_queues",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_dead_letter_source_queues",
      "pack": "aws",
      "ref": "aws.sqs_get_dead_letter_source_queues",
      "id": "5b87f8300a8b8a567f5893ca",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_http_connection",
      "pack": "aws",
      "ref": "aws.sqs_get_http_connection",
      "id": "5b87f8300a8b8a567f5893cb",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "markers": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_list",
      "pack": "aws",
      "ref": "aws.sqs_get_list",
      "id": "5b87f8300a8b8a567f5893cc",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_object",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_object",
      "pack": "aws",
      "ref": "aws.sqs_get_object",
      "id": "5b87f8300a8b8a567f5893cd",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_path",
      "pack": "aws",
      "ref": "aws.sqs_get_path",
      "id": "5b87f8300a8b8a567f5893ce",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_proxy_auth_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_auth_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_proxy_auth_header",
      "pack": "aws",
      "ref": "aws.sqs_get_proxy_auth_header",
      "id": "5b87f8300a8b8a567f5893cf",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_proxy_url_with_auth",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_url_with_auth",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_proxy_url_with_auth",
      "pack": "aws",
      "ref": "aws.sqs_get_proxy_url_with_auth",
      "id": "5b87f8300a8b8a567f5893d0",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_queue",
      "parameters": {
          "owner_acct_id": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_queue",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_queue",
      "pack": "aws",
      "ref": "aws.sqs_get_queue",
      "id": "5b87f8300a8b8a567f5893d1",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_queue_attributes",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "attribute": {
              "default": "All",
              "type": "string"
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_queue_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_queue_attributes",
      "pack": "aws",
      "ref": "aws.sqs_get_queue_attributes",
      "id": "5b87f8300a8b8a567f5893d2",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_status",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_status",
      "pack": "aws",
      "ref": "aws.sqs_get_status",
      "id": "5b87f8300a8b8a567f5893d3",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_get_utf8_value",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_utf8_value",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_get_utf8_value",
      "pack": "aws",
      "ref": "aws.sqs_get_utf8_value",
      "id": "5b87f8300a8b8a567f5893d4",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_handle_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "proxy_pass": {
              "required": true,
              "type": "string"
          },
          "proxy_port": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "proxy": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "handle_proxy",
              "type": "string",
              "immutable": true
          },
          "proxy_user": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_handle_proxy",
      "pack": "aws",
      "ref": "aws.sqs_handle_proxy",
      "id": "5b87f8300a8b8a567f5893d5",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_lookup",
      "parameters": {
          "owner_acct_id": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "lookup",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_lookup",
      "pack": "aws",
      "ref": "aws.sqs_lookup",
      "id": "5b87f8300a8b8a567f5893d6",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_make_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_make_request",
      "pack": "aws",
      "ref": "aws.sqs_make_request",
      "id": "5b87f8300a8b8a567f5893d7",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_new_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "new_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_new_http_connection",
      "pack": "aws",
      "ref": "aws.sqs_new_http_connection",
      "id": "5b87f8300a8b8a567f5893d8",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_prefix_proxy_to_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "prefix_proxy_to_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_prefix_proxy_to_path",
      "pack": "aws",
      "ref": "aws.sqs_prefix_proxy_to_path",
      "id": "5b87f8300a8b8a567f5893d9",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_proxy_ssl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "proxy_ssl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_proxy_ssl",
      "pack": "aws",
      "ref": "aws.sqs_proxy_ssl",
      "id": "5b87f8300a8b8a567f5893da",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_purge_queue",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "purge_queue",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_purge_queue",
      "pack": "aws",
      "ref": "aws.sqs_purge_queue",
      "id": "5b87f8310a8b8a567f5893db",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_put_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "connection": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_put_http_connection",
      "pack": "aws",
      "ref": "aws.sqs_put_http_connection",
      "id": "5b87f8310a8b8a567f5893dc",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_receive_message",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "wait_time_seconds": {
              "type": "string"
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "message_attributes": {
              "type": "string"
          },
          "action": {
              "default": "receive_message",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "attributes": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "number_messages": {
              "default": 1,
              "type": "string"
          },
          "visibility_timeout": {
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_receive_message",
      "pack": "aws",
      "ref": "aws.sqs_receive_message",
      "id": "5b87f8310a8b8a567f5893dd",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_remove_permission",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "remove_permission",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_remove_permission",
      "pack": "aws",
      "ref": "aws.sqs_remove_permission",
      "id": "5b87f8310a8b8a567f5893de",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_send_message",
      "parameters": {
          "message_content": {
              "required": true,
              "type": "string"
          },
          "delay_seconds": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "message_attributes": {
              "type": "string"
          },
          "action": {
              "default": "send_message",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_send_message",
      "pack": "aws",
      "ref": "aws.sqs_send_message",
      "id": "5b87f8310a8b8a567f5893df",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_send_message_batch",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "messages": {
              "required": true,
              "type": "string"
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "send_message_batch",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_send_message_batch",
      "pack": "aws",
      "ref": "aws.sqs_send_message_batch",
      "id": "5b87f8310a8b8a567f5893e0",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_server_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "server_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_server_name",
      "pack": "aws",
      "ref": "aws.sqs_server_name",
      "id": "5b87f8310a8b8a567f5893e1",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_set_host_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "request": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_host_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_set_host_header",
      "pack": "aws",
      "ref": "aws.sqs_set_host_header",
      "id": "5b87f8310a8b8a567f5893e2",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_set_queue_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "queue": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_queue_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_set_queue_attribute",
      "pack": "aws",
      "ref": "aws.sqs_set_queue_attribute",
      "id": "5b87f8310a8b8a567f5893e3",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_set_request_hook",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "hook": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_request_hook",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_set_request_hook",
      "pack": "aws",
      "ref": "aws.sqs_set_request_hook",
      "id": "5b87f8310a8b8a567f5893e4",
      "runner_type": "python-script"
  },
  {
      "name": "sqs_skip_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "skip_proxy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.sqs.connection",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "SQSConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:sqs_skip_proxy",
      "pack": "aws",
      "ref": "aws.sqs_skip_proxy",
      "id": "5b87f8310a8b8a567f5893e5",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_accept_vpc_peering_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "vpc_peering_connection_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "accept_vpc_peering_connection",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_accept_vpc_peering_connection",
      "pack": "aws",
      "ref": "aws.vpc_accept_vpc_peering_connection",
      "id": "5b87f8310a8b8a567f5893e6",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_allocate_address",
      "parameters": {
          "domain": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "allocate_address",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_allocate_address",
      "pack": "aws",
      "ref": "aws.vpc_allocate_address",
      "id": "5b87f8310a8b8a567f5893e7",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_assign_private_ip_addresses",
      "parameters": {
          "allow_reassignment": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "private_ip_addresses": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "secondary_private_ip_address_count": {
              "type": "string"
          },
          "action": {
              "default": "assign_private_ip_addresses",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_assign_private_ip_addresses",
      "pack": "aws",
      "ref": "aws.vpc_assign_private_ip_addresses",
      "id": "5b87f8310a8b8a567f5893e8",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_associate_address",
      "parameters": {
          "public_ip": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "allocation_id": {
              "type": "string"
          },
          "allow_reassociation": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "private_ip_address": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "associate_address",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_associate_address",
      "pack": "aws",
      "ref": "aws.vpc_associate_address",
      "id": "5b87f8310a8b8a567f5893e9",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_associate_address_object",
      "parameters": {
          "public_ip": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "allocation_id": {
              "type": "string"
          },
          "allow_reassociation": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "private_ip_address": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "associate_address_object",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_associate_address_object",
      "pack": "aws",
      "ref": "aws.vpc_associate_address_object",
      "id": "5b87f8310a8b8a567f5893ea",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_associate_dhcp_options",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "associate_dhcp_options",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "dhcp_options_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_associate_dhcp_options",
      "pack": "aws",
      "ref": "aws.vpc_associate_dhcp_options",
      "id": "5b87f8310a8b8a567f5893eb",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_associate_network_acl",
      "parameters": {
          "network_acl_id": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "subnet_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "associate_network_acl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_associate_network_acl",
      "pack": "aws",
      "ref": "aws.vpc_associate_network_acl",
      "id": "5b87f8310a8b8a567f5893ec",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_associate_route_table",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "subnet_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "associate_route_table",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_associate_route_table",
      "pack": "aws",
      "ref": "aws.vpc_associate_route_table",
      "id": "5b87f8310a8b8a567f5893ed",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_attach_classic_link_vpc",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "groups": {
              "required": true,
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "attach_classic_link_vpc",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_attach_classic_link_vpc",
      "pack": "aws",
      "ref": "aws.vpc_attach_classic_link_vpc",
      "id": "5b87f8310a8b8a567f5893ee",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_attach_internet_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "internet_gateway_id": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "attach_internet_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_attach_internet_gateway",
      "pack": "aws",
      "ref": "aws.vpc_attach_internet_gateway",
      "id": "5b87f8310a8b8a567f5893ef",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_attach_network_interface",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "device_index": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "attach_network_interface",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_attach_network_interface",
      "pack": "aws",
      "ref": "aws.vpc_attach_network_interface",
      "id": "5b87f8310a8b8a567f5893f0",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_attach_volume",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "device": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "attach_volume",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_attach_volume",
      "pack": "aws",
      "ref": "aws.vpc_attach_volume",
      "id": "5b87f8310a8b8a567f5893f1",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_attach_vpn_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "attach_vpn_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "vpn_gateway_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_attach_vpn_gateway",
      "pack": "aws",
      "ref": "aws.vpc_attach_vpn_gateway",
      "id": "5b87f8310a8b8a567f5893f2",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_authorize_security_group",
      "parameters": {
          "src_security_group_owner_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "group_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "src_security_group_name": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "authorize_security_group",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "src_security_group_group_id": {
              "type": "string"
          },
          "group_id": {
              "type": "string"
          },
          "cidr_ip": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_authorize_security_group",
      "pack": "aws",
      "ref": "aws.vpc_authorize_security_group",
      "id": "5b87f8310a8b8a567f5893f3",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_authorize_security_group_deprecated",
      "parameters": {
          "src_security_group_owner_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "src_security_group_name": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "authorize_security_group_deprecated",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "cidr_ip": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_authorize_security_group_deprecated",
      "pack": "aws",
      "ref": "aws.vpc_authorize_security_group_deprecated",
      "id": "5b87f8310a8b8a567f5893f4",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_authorize_security_group_egress",
      "parameters": {
          "src_group_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "required": true,
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "authorize_security_group_egress",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "group_id": {
              "required": true,
              "type": "string"
          },
          "cidr_ip": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_authorize_security_group_egress",
      "pack": "aws",
      "ref": "aws.vpc_authorize_security_group_egress",
      "id": "5b87f8310a8b8a567f5893f5",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_build_base_http_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "data": {
              "default": "",
              "type": "string"
          },
          "action": {
              "default": "build_base_http_request",
              "type": "string",
              "immutable": true
          },
          "headers": {
              "type": "string"
          },
          "host": {
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "auth_path": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "method": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_build_base_http_request",
      "pack": "aws",
      "ref": "aws.vpc_build_base_http_request",
      "id": "5b87f8310a8b8a567f5893f6",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_build_complex_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_complex_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_build_complex_list_params",
      "pack": "aws",
      "ref": "aws.vpc_build_complex_list_params",
      "id": "5b87f8310a8b8a567f5893f7",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_build_configurations_param_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_configurations_param_list",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "target_configurations": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_build_configurations_param_list",
      "pack": "aws",
      "ref": "aws.vpc_build_configurations_param_list",
      "id": "5b87f8310a8b8a567f5893f8",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_build_filter_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_filter_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_build_filter_params",
      "pack": "aws",
      "ref": "aws.vpc_build_filter_params",
      "id": "5b87f8310a8b8a567f5893f9",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_build_list_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "items": {
              "required": true,
              "type": "string"
          },
          "label": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_list_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_build_list_params",
      "pack": "aws",
      "ref": "aws.vpc_build_list_params",
      "id": "5b87f8310a8b8a567f5893fa",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_build_tag_param_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "tags": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "build_tag_param_list",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_build_tag_param_list",
      "pack": "aws",
      "ref": "aws.vpc_build_tag_param_list",
      "id": "5b87f8310a8b8a567f5893fb",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_bundle_instance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "s3_bucket": {
              "required": true,
              "type": "string"
          },
          "s3_upload_policy": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "s3_prefix": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "bundle_instance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_bundle_instance",
      "pack": "aws",
      "ref": "aws.vpc_bundle_instance",
      "id": "5b87f8310a8b8a567f5893fc",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_cancel_bundle_task",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "bundle_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "cancel_bundle_task",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_cancel_bundle_task",
      "pack": "aws",
      "ref": "aws.vpc_cancel_bundle_task",
      "id": "5b87f8310a8b8a567f5893fd",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_cancel_reserved_instances_listing",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "reserved_instances_listing_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "cancel_reserved_instances_listing",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_cancel_reserved_instances_listing",
      "pack": "aws",
      "ref": "aws.vpc_cancel_reserved_instances_listing",
      "id": "5b87f8310a8b8a567f5893fe",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_cancel_spot_instance_requests",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "request_ids": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "cancel_spot_instance_requests",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_cancel_spot_instance_requests",
      "pack": "aws",
      "ref": "aws.vpc_cancel_spot_instance_requests",
      "id": "5b87f8310a8b8a567f5893ff",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "close",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_close",
      "pack": "aws",
      "ref": "aws.vpc_close",
      "id": "5b87f8310a8b8a567f589400",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_confirm_product_instance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "confirm_product_instance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "product_code": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_confirm_product_instance",
      "pack": "aws",
      "ref": "aws.vpc_confirm_product_instance",
      "id": "5b87f8310a8b8a567f589401",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_copy_image",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "description": {
              "type": "string"
          },
          "source_image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "source_region": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "copy_image",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "client_token": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_copy_image",
      "pack": "aws",
      "ref": "aws.vpc_copy_image",
      "id": "5b87f8310a8b8a567f589402",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_copy_snapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "description": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "source_region": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "copy_snapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "source_snapshot_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_copy_snapshot",
      "pack": "aws",
      "ref": "aws.vpc_copy_snapshot",
      "id": "5b87f8310a8b8a567f589403",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_customer_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "ip_address": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "bgp_asn": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "create_customer_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "type": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_customer_gateway",
      "pack": "aws",
      "ref": "aws.vpc_create_customer_gateway",
      "id": "5b87f8310a8b8a567f589404",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_dhcp_options",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "ntp_servers": {
              "type": "string"
          },
          "domain_name_servers": {
              "type": "string"
          },
          "domain_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "netbios_node_type": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_dhcp_options",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "netbios_name_servers": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_dhcp_options",
      "pack": "aws",
      "ref": "aws.vpc_create_dhcp_options",
      "id": "5b87f8310a8b8a567f589405",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_image",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "description": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "block_device_mapping": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "no_reboot": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_image",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_image",
      "pack": "aws",
      "ref": "aws.vpc_create_image",
      "id": "5b87f8310a8b8a567f589406",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_internet_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_internet_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_internet_gateway",
      "pack": "aws",
      "ref": "aws.vpc_create_internet_gateway",
      "id": "5b87f8310a8b8a567f589407",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_key_pair",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "key_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_key_pair",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_key_pair",
      "pack": "aws",
      "ref": "aws.vpc_create_key_pair",
      "id": "5b87f8310a8b8a567f589408",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_network_acl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_network_acl",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_network_acl",
      "pack": "aws",
      "ref": "aws.vpc_create_network_acl",
      "id": "5b87f8310a8b8a567f589409",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_network_acl_entry",
      "parameters": {
          "icmp_code": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "network_acl_id": {
              "required": true,
              "type": "string"
          },
          "protocol": {
              "required": true,
              "type": "string"
          },
          "port_range_from": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "rule_number": {
              "required": true,
              "type": "string"
          },
          "rule_action": {
              "required": true,
              "type": "string"
          },
          "port_range_to": {
              "type": "string"
          },
          "egress": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_network_acl_entry",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cidr_block": {
              "required": true,
              "type": "string"
          },
          "icmp_type": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_network_acl_entry",
      "pack": "aws",
      "ref": "aws.vpc_create_network_acl_entry",
      "id": "5b87f8310a8b8a567f58940a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_network_interface",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "groups": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "subnet_id": {
              "required": true,
              "type": "string"
          },
          "description": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "private_ip_address": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_network_interface",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_network_interface",
      "pack": "aws",
      "ref": "aws.vpc_create_network_interface",
      "id": "5b87f8310a8b8a567f58940b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_placement_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "strategy": {
              "default": "cluster",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_placement_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_placement_group",
      "pack": "aws",
      "ref": "aws.vpc_create_placement_group",
      "id": "5b87f8310a8b8a567f58940c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_reserved_instances_listing",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_count": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "reserved_instances_id": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_reserved_instances_listing",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "client_token": {
              "required": true,
              "type": "string"
          },
          "price_schedules": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_reserved_instances_listing",
      "pack": "aws",
      "ref": "aws.vpc_create_reserved_instances_listing",
      "id": "5b87f8310a8b8a567f58940d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_route",
      "parameters": {
          "gateway_id": {
              "type": "string"
          },
          "vpc_peering_connection_id": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "destination_cidr_block": {
              "required": true,
              "type": "string"
          },
          "interface_id": {
              "type": "string"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_route",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_route",
      "pack": "aws",
      "ref": "aws.vpc_create_route",
      "id": "5b87f8320a8b8a567f58940e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_route_table",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_route_table",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_route_table",
      "pack": "aws",
      "ref": "aws.vpc_create_route_table",
      "id": "5b87f8320a8b8a567f58940f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_security_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "description": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "type": "string"
          },
          "action": {
              "default": "create_security_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_security_group",
      "pack": "aws",
      "ref": "aws.vpc_create_security_group",
      "id": "5b87f8320a8b8a567f589410",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_snapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "description": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "create_snapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_snapshot",
      "pack": "aws",
      "ref": "aws.vpc_create_snapshot",
      "id": "5b87f8320a8b8a567f589411",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_spot_datafeed_subscription",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "bucket": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "prefix": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_spot_datafeed_subscription",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_spot_datafeed_subscription",
      "pack": "aws",
      "ref": "aws.vpc_create_spot_datafeed_subscription",
      "id": "5b87f8320a8b8a567f589412",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_subnet",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "availability_zone": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_subnet",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "cidr_block": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_subnet",
      "pack": "aws",
      "ref": "aws.vpc_create_subnet",
      "id": "5b87f8320a8b8a567f589413",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_tags",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "tags": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "resource_ids": {
              "required": true,
              "type": "array"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_tags",
      "pack": "aws",
      "ref": "aws.vpc_create_tags",
      "id": "5b87f8320a8b8a567f589414",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_volume",
      "parameters": {
          "size": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "encrypted": {
              "default": false,
              "type": "boolean"
          },
          "volume_type": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "iops": {
              "type": "string"
          },
          "snapshot": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_volume",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "zone": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_volume",
      "pack": "aws",
      "ref": "aws.vpc_create_volume",
      "id": "5b87f8320a8b8a567f589415",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_vpc",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_tenancy": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_vpc",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cidr_block": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_vpc",
      "pack": "aws",
      "ref": "aws.vpc_create_vpc",
      "id": "5b87f8320a8b8a567f589416",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_vpc_peering_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "peer_vpc_id": {
              "required": true,
              "type": "string"
          },
          "peer_owner_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "create_vpc_peering_connection",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_vpc_peering_connection",
      "pack": "aws",
      "ref": "aws.vpc_create_vpc_peering_connection",
      "id": "5b87f8320a8b8a567f589417",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_vpn_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "customer_gateway_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "static_routes_only": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_vpn_connection",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "vpn_gateway_id": {
              "required": true,
              "type": "string"
          },
          "type": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_vpn_connection",
      "pack": "aws",
      "ref": "aws.vpc_create_vpn_connection",
      "id": "5b87f8320a8b8a567f589418",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_vpn_connection_route",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "vpn_connection_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_vpn_connection_route",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "destination_cidr_block": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_vpn_connection_route",
      "pack": "aws",
      "ref": "aws.vpc_create_vpn_connection_route",
      "id": "5b87f8320a8b8a567f589419",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_create_vpn_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "availability_zone": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "create_vpn_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "type": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_create_vpn_gateway",
      "pack": "aws",
      "ref": "aws.vpc_create_vpn_gateway",
      "id": "5b87f8320a8b8a567f58941a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_customer_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "customer_gateway_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_customer_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_customer_gateway",
      "pack": "aws",
      "ref": "aws.vpc_delete_customer_gateway",
      "id": "5b87f8320a8b8a567f58941b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_dhcp_options",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_dhcp_options",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "dhcp_options_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_dhcp_options",
      "pack": "aws",
      "ref": "aws.vpc_delete_dhcp_options",
      "id": "5b87f8320a8b8a567f58941c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_internet_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "internet_gateway_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_internet_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_internet_gateway",
      "pack": "aws",
      "ref": "aws.vpc_delete_internet_gateway",
      "id": "5b87f8320a8b8a567f58941d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_key_pair",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "key_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_key_pair",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_key_pair",
      "pack": "aws",
      "ref": "aws.vpc_delete_key_pair",
      "id": "5b87f8320a8b8a567f58941e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_network_acl",
      "parameters": {
          "network_acl_id": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_network_acl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_network_acl",
      "pack": "aws",
      "ref": "aws.vpc_delete_network_acl",
      "id": "5b87f8320a8b8a567f58941f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_network_acl_entry",
      "parameters": {
          "network_acl_id": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "rule_number": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "egress": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_network_acl_entry",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_network_acl_entry",
      "pack": "aws",
      "ref": "aws.vpc_delete_network_acl_entry",
      "id": "5b87f8320a8b8a567f589420",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_network_interface",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_network_interface",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_network_interface",
      "pack": "aws",
      "ref": "aws.vpc_delete_network_interface",
      "id": "5b87f8320a8b8a567f589421",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_placement_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_placement_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_placement_group",
      "pack": "aws",
      "ref": "aws.vpc_delete_placement_group",
      "id": "5b87f8320a8b8a567f589422",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_route",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "action": {
              "default": "delete_route",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "destination_cidr_block": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_route",
      "pack": "aws",
      "ref": "aws.vpc_delete_route",
      "id": "5b87f8320a8b8a567f589423",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_route_table",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_route_table",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_route_table",
      "pack": "aws",
      "ref": "aws.vpc_delete_route_table",
      "id": "5b87f8320a8b8a567f589424",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_security_group",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_security_group",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "group_id": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_security_group",
      "pack": "aws",
      "ref": "aws.vpc_delete_security_group",
      "id": "5b87f8320a8b8a567f589425",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_snapshot",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "delete_snapshot",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_snapshot",
      "pack": "aws",
      "ref": "aws.vpc_delete_snapshot",
      "id": "5b87f8320a8b8a567f589426",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_spot_datafeed_subscription",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_spot_datafeed_subscription",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_spot_datafeed_subscription",
      "pack": "aws",
      "ref": "aws.vpc_delete_spot_datafeed_subscription",
      "id": "5b87f8320a8b8a567f589427",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_subnet",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "subnet_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_subnet",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_subnet",
      "pack": "aws",
      "ref": "aws.vpc_delete_subnet",
      "id": "5b87f8320a8b8a567f589428",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_tags",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "tags": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "resource_ids": {
              "required": true,
              "type": "array"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_tags",
      "pack": "aws",
      "ref": "aws.vpc_delete_tags",
      "id": "5b87f8320a8b8a567f589429",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_volume",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "delete_volume",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_volume",
      "pack": "aws",
      "ref": "aws.vpc_delete_volume",
      "id": "5b87f8320a8b8a567f58942a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_vpc",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "delete_vpc",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_vpc",
      "pack": "aws",
      "ref": "aws.vpc_delete_vpc",
      "id": "5b87f8320a8b8a567f58942b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_vpc_peering_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "vpc_peering_connection_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_vpc_peering_connection",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_vpc_peering_connection",
      "pack": "aws",
      "ref": "aws.vpc_delete_vpc_peering_connection",
      "id": "5b87f8320a8b8a567f58942c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_vpn_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "vpn_connection_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_vpn_connection",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_vpn_connection",
      "pack": "aws",
      "ref": "aws.vpc_delete_vpn_connection",
      "id": "5b87f8320a8b8a567f58942d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_vpn_connection_route",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "vpn_connection_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_vpn_connection_route",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "destination_cidr_block": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_vpn_connection_route",
      "pack": "aws",
      "ref": "aws.vpc_delete_vpn_connection_route",
      "id": "5b87f8320a8b8a567f58942e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_delete_vpn_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "delete_vpn_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "vpn_gateway_id": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_delete_vpn_gateway",
      "pack": "aws",
      "ref": "aws.vpc_delete_vpn_gateway",
      "id": "5b87f8320a8b8a567f58942f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_deregister_image",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "delete_snapshot": {
              "default": false,
              "type": "boolean"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "deregister_image",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_deregister_image",
      "pack": "aws",
      "ref": "aws.vpc_deregister_image",
      "id": "5b87f8320a8b8a567f589430",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_describe_account_attributes",
      "parameters": {
          "attribute_names": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "describe_account_attributes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_describe_account_attributes",
      "pack": "aws",
      "ref": "aws.vpc_describe_account_attributes",
      "id": "5b87f8320a8b8a567f589431",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_describe_reserved_instances_modifications",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "describe_reserved_instances_modifications",
              "type": "string",
              "immutable": true
          },
          "reserved_instances_modification_ids": {
              "type": "string"
          },
          "next_token": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_describe_reserved_instances_modifications",
      "pack": "aws",
      "ref": "aws.vpc_describe_reserved_instances_modifications",
      "id": "5b87f8320a8b8a567f589432",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_describe_vpc_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "describe_vpc_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_describe_vpc_attribute",
      "pack": "aws",
      "ref": "aws.vpc_describe_vpc_attribute",
      "id": "5b87f8320a8b8a567f589433",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_detach_classic_link_vpc",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "detach_classic_link_vpc",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_detach_classic_link_vpc",
      "pack": "aws",
      "ref": "aws.vpc_detach_classic_link_vpc",
      "id": "5b87f8320a8b8a567f589434",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_detach_internet_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "internet_gateway_id": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "detach_internet_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_detach_internet_gateway",
      "pack": "aws",
      "ref": "aws.vpc_detach_internet_gateway",
      "id": "5b87f8320a8b8a567f589435",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_detach_network_interface",
      "parameters": {
          "force": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "detach_network_interface",
              "type": "string",
              "immutable": true
          },
          "attachment_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_detach_network_interface",
      "pack": "aws",
      "ref": "aws.vpc_detach_network_interface",
      "id": "5b87f8320a8b8a567f589436",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_detach_volume",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "device": {
              "type": "string"
          },
          "force": {
              "default": false,
              "type": "boolean"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "detach_volume",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_detach_volume",
      "pack": "aws",
      "ref": "aws.vpc_detach_volume",
      "id": "5b87f8320a8b8a567f589437",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_detach_vpn_gateway",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "detach_vpn_gateway",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "vpn_gateway_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_detach_vpn_gateway",
      "pack": "aws",
      "ref": "aws.vpc_detach_vpn_gateway",
      "id": "5b87f8320a8b8a567f589438",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_disable_vgw_route_propagation",
      "parameters": {
          "gateway_id": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "disable_vgw_route_propagation",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_disable_vgw_route_propagation",
      "pack": "aws",
      "ref": "aws.vpc_disable_vgw_route_propagation",
      "id": "5b87f8320a8b8a567f589439",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_disable_vpc_classic_link",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "disable_vpc_classic_link",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_disable_vpc_classic_link",
      "pack": "aws",
      "ref": "aws.vpc_disable_vpc_classic_link",
      "id": "5b87f8320a8b8a567f58943a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_disassociate_address",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "public_ip": {
              "type": "string"
          },
          "association_id": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "disassociate_address",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_disassociate_address",
      "pack": "aws",
      "ref": "aws.vpc_disassociate_address",
      "id": "5b87f8320a8b8a567f58943b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_disassociate_network_acl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "subnet_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "disassociate_network_acl",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_disassociate_network_acl",
      "pack": "aws",
      "ref": "aws.vpc_disassociate_network_acl",
      "id": "5b87f8320a8b8a567f58943c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_disassociate_route_table",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "association_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "disassociate_route_table",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_disassociate_route_table",
      "pack": "aws",
      "ref": "aws.vpc_disassociate_route_table",
      "id": "5b87f8320a8b8a567f58943d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_enable_vgw_route_propagation",
      "parameters": {
          "gateway_id": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "enable_vgw_route_propagation",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_enable_vgw_route_propagation",
      "pack": "aws",
      "ref": "aws.vpc_enable_vgw_route_propagation",
      "id": "5b87f8320a8b8a567f58943e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_enable_volume_io",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "enable_volume_io",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_enable_volume_io",
      "pack": "aws",
      "ref": "aws.vpc_enable_volume_io",
      "id": "5b87f8320a8b8a567f58943f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_enable_vpc_classic_link",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "enable_vpc_classic_link",
              "type": "string",
              "immutable": true
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_enable_vpc_classic_link",
      "pack": "aws",
      "ref": "aws.vpc_enable_vpc_classic_link",
      "id": "5b87f8320a8b8a567f589440",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_addresses",
      "parameters": {
          "allocation_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "addresses": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_addresses",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_addresses",
      "pack": "aws",
      "ref": "aws.vpc_get_all_addresses",
      "id": "5b87f8320a8b8a567f589441",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_bundle_tasks",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "bundle_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_bundle_tasks",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_bundle_tasks",
      "pack": "aws",
      "ref": "aws.vpc_get_all_bundle_tasks",
      "id": "5b87f8320a8b8a567f589442",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_classic_link_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_classic_link_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_classic_link_instances",
      "pack": "aws",
      "ref": "aws.vpc_get_all_classic_link_instances",
      "id": "5b87f8330a8b8a567f589443",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_classic_link_vpcs",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "vpc_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_classic_link_vpcs",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_classic_link_vpcs",
      "pack": "aws",
      "ref": "aws.vpc_get_all_classic_link_vpcs",
      "id": "5b87f8330a8b8a567f589444",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_customer_gateways",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "customer_gateway_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_customer_gateways",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_customer_gateways",
      "pack": "aws",
      "ref": "aws.vpc_get_all_customer_gateways",
      "id": "5b87f8330a8b8a567f589445",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_dhcp_options",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "dhcp_options_ids": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_dhcp_options",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_dhcp_options",
      "pack": "aws",
      "ref": "aws.vpc_get_all_dhcp_options",
      "id": "5b87f8330a8b8a567f589446",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_images",
      "parameters": {
          "owners": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "image_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "executable_by": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_images",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_images",
      "pack": "aws",
      "ref": "aws.vpc_get_all_images",
      "id": "5b87f8330a8b8a567f589447",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_instance_status",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "include_all_instances": {
              "default": false,
              "type": "boolean"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_instance_status",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_instance_status",
      "pack": "aws",
      "ref": "aws.vpc_get_all_instance_status",
      "id": "5b87f8330a8b8a567f589448",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_instance_types",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_instance_types",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_instance_types",
      "pack": "aws",
      "ref": "aws.vpc_get_all_instance_types",
      "id": "5b87f8330a8b8a567f589449",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_instances",
      "pack": "aws",
      "ref": "aws.vpc_get_all_instances",
      "id": "5b87f8330a8b8a567f58944a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_internet_gateways",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "internet_gateway_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_internet_gateways",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_internet_gateways",
      "pack": "aws",
      "ref": "aws.vpc_get_all_internet_gateways",
      "id": "5b87f8330a8b8a567f58944b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_kernels",
      "parameters": {
          "owners": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_kernels",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "kernel_ids": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_kernels",
      "pack": "aws",
      "ref": "aws.vpc_get_all_kernels",
      "id": "5b87f8330a8b8a567f58944c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_key_pairs",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "keynames": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_key_pairs",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_key_pairs",
      "pack": "aws",
      "ref": "aws.vpc_get_all_key_pairs",
      "id": "5b87f8330a8b8a567f58944d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_network_acls",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_network_acls",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "network_acl_ids": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_network_acls",
      "pack": "aws",
      "ref": "aws.vpc_get_all_network_acls",
      "id": "5b87f8330a8b8a567f58944e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_network_interfaces",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_ids": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_network_interfaces",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_network_interfaces",
      "pack": "aws",
      "ref": "aws.vpc_get_all_network_interfaces",
      "id": "5b87f8330a8b8a567f58944f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_placement_groups",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "groupnames": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_placement_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_placement_groups",
      "pack": "aws",
      "ref": "aws.vpc_get_all_placement_groups",
      "id": "5b87f8330a8b8a567f589450",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_ramdisks",
      "parameters": {
          "owners": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_ramdisks",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "ramdisk_ids": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_ramdisks",
      "pack": "aws",
      "ref": "aws.vpc_get_all_ramdisks",
      "id": "5b87f8330a8b8a567f589451",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_regions",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "region_names": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_regions",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_regions",
      "pack": "aws",
      "ref": "aws.vpc_get_all_regions",
      "id": "5b87f8330a8b8a567f589452",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_reservations",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_reservations",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_reservations",
      "pack": "aws",
      "ref": "aws.vpc_get_all_reservations",
      "id": "5b87f8330a8b8a567f589453",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_reserved_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "reserved_instances_id": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_reserved_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_reserved_instances",
      "pack": "aws",
      "ref": "aws.vpc_get_all_reserved_instances",
      "id": "5b87f8330a8b8a567f589454",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_reserved_instances_offerings",
      "parameters": {
          "max_duration": {
              "type": "string"
          },
          "max_instance_count": {
              "type": "string"
          },
          "availability_zone": {
              "type": "string"
          },
          "min_duration": {
              "type": "string"
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "next_token": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_tenancy": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "reserved_instances_offering_ids": {
              "type": "string"
          },
          "action": {
              "default": "get_all_reserved_instances_offerings",
              "type": "string",
              "immutable": true
          },
          "offering_type": {
              "type": "string"
          },
          "include_marketplace": {
              "type": "string"
          },
          "product_description": {
              "type": "string"
          },
          "instance_type": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_reserved_instances_offerings",
      "pack": "aws",
      "ref": "aws.vpc_get_all_reserved_instances_offerings",
      "id": "5b87f8330a8b8a567f589455",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_route_tables",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_route_tables",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "route_table_ids": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_route_tables",
      "pack": "aws",
      "ref": "aws.vpc_get_all_route_tables",
      "id": "5b87f8330a8b8a567f589456",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_security_groups",
      "parameters": {
          "group_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "groupnames": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_security_groups",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_security_groups",
      "pack": "aws",
      "ref": "aws.vpc_get_all_security_groups",
      "id": "5b87f8330a8b8a567f589457",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_snapshots",
      "parameters": {
          "restorable_by": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "filters": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "snapshot_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "owner": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_all_snapshots",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_snapshots",
      "pack": "aws",
      "ref": "aws.vpc_get_all_snapshots",
      "id": "5b87f8330a8b8a567f589458",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_spot_instance_requests",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "request_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_spot_instance_requests",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_spot_instance_requests",
      "pack": "aws",
      "ref": "aws.vpc_get_all_spot_instance_requests",
      "id": "5b87f8330a8b8a567f589459",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_subnets",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "object"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_subnets",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "subnet_ids": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_subnets",
      "pack": "aws",
      "ref": "aws.vpc_get_all_subnets",
      "id": "5b87f8330a8b8a567f58945a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_tags",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_tags",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_tags",
      "pack": "aws",
      "ref": "aws.vpc_get_all_tags",
      "id": "5b87f8330a8b8a567f58945b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_volume_status",
      "parameters": {
          "volume_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_volume_status",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_volume_status",
      "pack": "aws",
      "ref": "aws.vpc_get_all_volume_status",
      "id": "5b87f8330a8b8a567f58945c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_volumes",
      "parameters": {
          "volume_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_volumes",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_volumes",
      "pack": "aws",
      "ref": "aws.vpc_get_all_volumes",
      "id": "5b87f8330a8b8a567f58945d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_vpc_peering_connections",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "vpc_peering_connection_ids": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_vpc_peering_connections",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_vpc_peering_connections",
      "pack": "aws",
      "ref": "aws.vpc_get_all_vpc_peering_connections",
      "id": "5b87f8330a8b8a567f58945e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_vpcs",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "vpc_ids": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_vpcs",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_vpcs",
      "pack": "aws",
      "ref": "aws.vpc_get_all_vpcs",
      "id": "5b87f8330a8b8a567f58945f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_vpn_connections",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "vpn_connection_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_vpn_connections",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_vpn_connections",
      "pack": "aws",
      "ref": "aws.vpc_get_all_vpn_connections",
      "id": "5b87f8330a8b8a567f589460",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_vpn_gateways",
      "parameters": {
          "vpn_gateway_ids": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_vpn_gateways",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_vpn_gateways",
      "pack": "aws",
      "ref": "aws.vpc_get_all_vpn_gateways",
      "id": "5b87f8330a8b8a567f589461",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_all_zones",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "zones": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_all_zones",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_all_zones",
      "pack": "aws",
      "ref": "aws.vpc_get_all_zones",
      "id": "5b87f8330a8b8a567f589462",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_console_output",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_console_output",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_console_output",
      "pack": "aws",
      "ref": "aws.vpc_get_console_output",
      "id": "5b87f8330a8b8a567f589463",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_http_connection",
      "pack": "aws",
      "ref": "aws.vpc_get_http_connection",
      "id": "5b87f8330a8b8a567f589464",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_image",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_image",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_image",
      "pack": "aws",
      "ref": "aws.vpc_get_image",
      "id": "5b87f8330a8b8a567f589465",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_image_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "launchPermission",
              "type": "string"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_image_attribute",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_image_attribute",
      "pack": "aws",
      "ref": "aws.vpc_get_image_attribute",
      "id": "5b87f8330a8b8a567f589466",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_instance_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_instance_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_instance_attribute",
      "pack": "aws",
      "ref": "aws.vpc_get_instance_attribute",
      "id": "5b87f8330a8b8a567f589467",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_key_pair",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "keyname": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_key_pair",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_key_pair",
      "pack": "aws",
      "ref": "aws.vpc_get_key_pair",
      "id": "5b87f8330a8b8a567f589468",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "markers": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_list",
      "pack": "aws",
      "ref": "aws.vpc_get_list",
      "id": "5b87f8330a8b8a567f589469",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_object",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_object",
      "pack": "aws",
      "ref": "aws.vpc_get_object",
      "id": "5b87f8330a8b8a567f58946a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_only_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "max_results": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_only_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_only_instances",
      "pack": "aws",
      "ref": "aws.vpc_get_only_instances",
      "id": "5b87f8330a8b8a567f58946b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_params",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_params",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_params",
      "pack": "aws",
      "ref": "aws.vpc_get_params",
      "id": "5b87f8330a8b8a567f58946c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_password_data",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_password_data",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_password_data",
      "pack": "aws",
      "ref": "aws.vpc_get_password_data",
      "id": "5b87f8330a8b8a567f58946d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_path",
      "pack": "aws",
      "ref": "aws.vpc_get_path",
      "id": "5b87f8330a8b8a567f58946e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_proxy_auth_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_auth_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_proxy_auth_header",
      "pack": "aws",
      "ref": "aws.vpc_get_proxy_auth_header",
      "id": "5b87f8330a8b8a567f58946f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_proxy_url_with_auth",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_proxy_url_with_auth",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_proxy_url_with_auth",
      "pack": "aws",
      "ref": "aws.vpc_get_proxy_url_with_auth",
      "id": "5b87f8330a8b8a567f589470",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_snapshot_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "createVolumePermission",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_snapshot_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_snapshot_attribute",
      "pack": "aws",
      "ref": "aws.vpc_get_snapshot_attribute",
      "id": "5b87f8330a8b8a567f589471",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_spot_datafeed_subscription",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_spot_datafeed_subscription",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_spot_datafeed_subscription",
      "pack": "aws",
      "ref": "aws.vpc_get_spot_datafeed_subscription",
      "id": "5b87f8330a8b8a567f589472",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_spot_price_history",
      "parameters": {
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "availability_zone": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "start_time": {
              "type": "string"
          },
          "product_description": {
              "type": "string"
          },
          "instance_type": {
              "type": "string"
          },
          "max_results": {
              "type": "string"
          },
          "end_time": {
              "type": "string"
          },
          "filters": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "get_spot_price_history",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "next_token": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_spot_price_history",
      "pack": "aws",
      "ref": "aws.vpc_get_spot_price_history",
      "id": "5b87f8330a8b8a567f589473",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_status",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parent": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_status",
      "pack": "aws",
      "ref": "aws.vpc_get_status",
      "id": "5b87f8330a8b8a567f589474",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_utf8_value",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "get_utf8_value",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_utf8_value",
      "pack": "aws",
      "ref": "aws.vpc_get_utf8_value",
      "id": "5b87f8330a8b8a567f589475",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_get_volume_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "autoEnableIO",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "get_volume_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_get_volume_attribute",
      "pack": "aws",
      "ref": "aws.vpc_get_volume_attribute",
      "id": "5b87f8330a8b8a567f589476",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_handle_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "proxy_pass": {
              "required": true,
              "type": "string"
          },
          "proxy_port": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "proxy": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "handle_proxy",
              "type": "string",
              "immutable": true
          },
          "proxy_user": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_handle_proxy",
      "pack": "aws",
      "ref": "aws.vpc_handle_proxy",
      "id": "5b87f8330a8b8a567f589477",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_import_key_pair",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "key_name": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "public_key_material": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "import_key_pair",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_import_key_pair",
      "pack": "aws",
      "ref": "aws.vpc_import_key_pair",
      "id": "5b87f8340a8b8a567f589478",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_make_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "verb": {
              "default": "GET",
              "type": "string"
          },
          "params": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "path": {
              "default": "/",
              "type": "string"
          },
          "action": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_make_request",
      "pack": "aws",
      "ref": "aws.vpc_make_request",
      "id": "5b87f8340a8b8a567f589479",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_modify_image_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "groups": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "launchPermission",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "user_ids": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "operation": {
              "default": "add",
              "type": "string"
          },
          "product_codes": {
              "type": "string"
          },
          "action": {
              "default": "modify_image_attribute",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_modify_image_attribute",
      "pack": "aws",
      "ref": "aws.vpc_modify_image_attribute",
      "id": "5b87f8340a8b8a567f58947a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_modify_instance_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "modify_instance_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_modify_instance_attribute",
      "pack": "aws",
      "ref": "aws.vpc_modify_instance_attribute",
      "id": "5b87f8340a8b8a567f58947b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_modify_network_interface_attribute",
      "parameters": {
          "attachment_id": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attr": {
              "required": true,
              "type": "string"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "interface_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "modify_network_interface_attribute",
              "type": "string",
              "immutable": true
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_modify_network_interface_attribute",
      "pack": "aws",
      "ref": "aws.vpc_modify_network_interface_attribute",
      "id": "5b87f8340a8b8a567f58947c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_modify_reserved_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "reserved_instance_ids": {
              "required": true,
              "type": "string"
          },
          "target_configurations": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "modify_reserved_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "client_token": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_modify_reserved_instances",
      "pack": "aws",
      "ref": "aws.vpc_modify_reserved_instances",
      "id": "5b87f8340a8b8a567f58947d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_modify_snapshot_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "groups": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "createVolumePermission",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "user_ids": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "modify_snapshot_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "operation": {
              "default": "add",
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_modify_snapshot_attribute",
      "pack": "aws",
      "ref": "aws.vpc_modify_snapshot_attribute",
      "id": "5b87f8340a8b8a567f58947e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_modify_volume_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "volume_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "new_value": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "modify_volume_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_modify_volume_attribute",
      "pack": "aws",
      "ref": "aws.vpc_modify_volume_attribute",
      "id": "5b87f8340a8b8a567f58947f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_modify_vpc_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "enable_dns_support": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "vpc_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "modify_vpc_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "enable_dns_hostnames": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_modify_vpc_attribute",
      "pack": "aws",
      "ref": "aws.vpc_modify_vpc_attribute",
      "id": "5b87f8340a8b8a567f589480",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_monitor_instance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "monitor_instance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_monitor_instance",
      "pack": "aws",
      "ref": "aws.vpc_monitor_instance",
      "id": "5b87f8340a8b8a567f589481",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_monitor_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "monitor_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_monitor_instances",
      "pack": "aws",
      "ref": "aws.vpc_monitor_instances",
      "id": "5b87f8340a8b8a567f589482",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_new_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "new_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_new_http_connection",
      "pack": "aws",
      "ref": "aws.vpc_new_http_connection",
      "id": "5b87f8340a8b8a567f589483",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_prefix_proxy_to_path",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "prefix_proxy_to_path",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "path": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_prefix_proxy_to_path",
      "pack": "aws",
      "ref": "aws.vpc_prefix_proxy_to_path",
      "id": "5b87f8340a8b8a567f589484",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_proxy_ssl",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "proxy_ssl",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_proxy_ssl",
      "pack": "aws",
      "ref": "aws.vpc_proxy_ssl",
      "id": "5b87f8340a8b8a567f589485",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_purchase_reserved_instance_offering",
      "parameters": {
          "reserved_instances_offering_id": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_count": {
              "default": 1,
              "type": "string"
          },
          "limit_price": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "purchase_reserved_instance_offering",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_purchase_reserved_instance_offering",
      "pack": "aws",
      "ref": "aws.vpc_purchase_reserved_instance_offering",
      "id": "5b87f8340a8b8a567f589486",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_put_http_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "connection": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "put_http_connection",
              "type": "string",
              "immutable": true
          },
          "is_secure": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "port": {
              "required": true,
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_put_http_connection",
      "pack": "aws",
      "ref": "aws.vpc_put_http_connection",
      "id": "5b87f8340a8b8a567f589487",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_reboot_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "reboot_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_reboot_instances",
      "pack": "aws",
      "ref": "aws.vpc_reboot_instances",
      "id": "5b87f8340a8b8a567f589488",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_register_image",
      "parameters": {
          "image_location": {
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "description": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "kernel_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ramdisk_id": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "delete_root_volume_on_termination": {
              "default": false,
              "type": "boolean"
          },
          "snapshot_id": {
              "type": "string"
          },
          "root_device_name": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "block_device_map": {
              "type": "string"
          },
          "action": {
              "default": "register_image",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "architecture": {
              "type": "string"
          },
          "virtualization_type": {
              "type": "string"
          },
          "sriov_net_support": {
              "type": "string"
          },
          "name": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_register_image",
      "pack": "aws",
      "ref": "aws.vpc_register_image",
      "id": "5b87f8340a8b8a567f589489",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_reject_vpc_peering_connection",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "vpc_peering_connection_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "reject_vpc_peering_connection",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_reject_vpc_peering_connection",
      "pack": "aws",
      "ref": "aws.vpc_reject_vpc_peering_connection",
      "id": "5b87f8340a8b8a567f58948a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_release_address",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "allocation_id": {
              "type": "string"
          },
          "public_ip": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "release_address",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_release_address",
      "pack": "aws",
      "ref": "aws.vpc_release_address",
      "id": "5b87f8340a8b8a567f58948b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_replace_network_acl_entry",
      "parameters": {
          "icmp_code": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "network_acl_id": {
              "required": true,
              "type": "string"
          },
          "protocol": {
              "required": true,
              "type": "string"
          },
          "port_range_from": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "rule_number": {
              "required": true,
              "type": "string"
          },
          "rule_action": {
              "required": true,
              "type": "string"
          },
          "port_range_to": {
              "type": "string"
          },
          "egress": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "replace_network_acl_entry",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cidr_block": {
              "required": true,
              "type": "string"
          },
          "icmp_type": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_replace_network_acl_entry",
      "pack": "aws",
      "ref": "aws.vpc_replace_network_acl_entry",
      "id": "5b87f8340a8b8a567f58948c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_replace_route",
      "parameters": {
          "gateway_id": {
              "type": "string"
          },
          "vpc_peering_connection_id": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "destination_cidr_block": {
              "required": true,
              "type": "string"
          },
          "interface_id": {
              "type": "string"
          },
          "instance_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "replace_route",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_replace_route",
      "pack": "aws",
      "ref": "aws.vpc_replace_route",
      "id": "5b87f8340a8b8a567f58948d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_replace_route_table_assocation",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "association_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "replace_route_table_assocation",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_replace_route_table_assocation",
      "pack": "aws",
      "ref": "aws.vpc_replace_route_table_assocation",
      "id": "5b87f8340a8b8a567f58948e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_replace_route_table_association_with_assoc",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "association_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "route_table_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "replace_route_table_association_with_assoc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_replace_route_table_association_with_assoc",
      "pack": "aws",
      "ref": "aws.vpc_replace_route_table_association_with_assoc",
      "id": "5b87f8340a8b8a567f58948f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_request_spot_instances",
      "parameters": {
          "ramdisk_id": {
              "type": "string"
          },
          "user_data": {
              "type": "string"
          },
          "block_device_map": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "instance_profile_arn": {
              "type": "string"
          },
          "security_groups": {
              "type": "string"
          },
          "valid_from": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "subnet_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ebs_optimized": {
              "default": false,
              "type": "boolean"
          },
          "placement_group": {
              "type": "string"
          },
          "type": {
              "default": "one-time",
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "valid_until": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "kernel_id": {
              "type": "string"
          },
          "key_name": {
              "type": "string"
          },
          "price": {
              "required": true,
              "type": "string"
          },
          "addressing_type": {
              "type": "string"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "security_group_ids": {
              "type": "string"
          },
          "count": {
              "default": 1,
              "type": "string"
          },
          "launch_group": {
              "type": "string"
          },
          "placement": {
              "type": "string"
          },
          "instance_profile_name": {
              "type": "string"
          },
          "network_interfaces": {
              "type": "string"
          },
          "availability_zone_group": {
              "type": "string"
          },
          "monitoring_enabled": {
              "default": false,
              "type": "boolean"
          },
          "instance_type": {
              "default": "m1.small",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "request_spot_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_request_spot_instances",
      "pack": "aws",
      "ref": "aws.vpc_request_spot_instances",
      "id": "5b87f8340a8b8a567f589490",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_reset_image_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "launchPermission",
              "type": "string"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "reset_image_attribute",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_reset_image_attribute",
      "pack": "aws",
      "ref": "aws.vpc_reset_image_attribute",
      "id": "5b87f8340a8b8a567f589491",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_reset_instance_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "required": true,
              "type": "string"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "reset_instance_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_reset_instance_attribute",
      "pack": "aws",
      "ref": "aws.vpc_reset_instance_attribute",
      "id": "5b87f8340a8b8a567f589492",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_reset_snapshot_attribute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "attribute": {
              "default": "createVolumePermission",
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "snapshot_id": {
              "required": true,
              "type": "string"
          },
          "action": {
              "default": "reset_snapshot_attribute",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_reset_snapshot_attribute",
      "pack": "aws",
      "ref": "aws.vpc_reset_snapshot_attribute",
      "id": "5b87f8340a8b8a567f589493",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_revoke_security_group",
      "parameters": {
          "src_security_group_owner_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "group_name": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "src_security_group_name": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "revoke_security_group",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "src_security_group_group_id": {
              "type": "string"
          },
          "group_id": {
              "type": "string"
          },
          "cidr_ip": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_revoke_security_group",
      "pack": "aws",
      "ref": "aws.vpc_revoke_security_group",
      "id": "5b87f8340a8b8a567f589494",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_revoke_security_group_deprecated",
      "parameters": {
          "src_security_group_owner_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "group_name": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "src_security_group_name": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "revoke_security_group_deprecated",
              "type": "string",
              "immutable": true
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "cidr_ip": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_revoke_security_group_deprecated",
      "pack": "aws",
      "ref": "aws.vpc_revoke_security_group_deprecated",
      "id": "5b87f8340a8b8a567f589495",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_revoke_security_group_egress",
      "parameters": {
          "src_group_id": {
              "type": "string"
          },
          "from_port": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "ip_protocol": {
              "required": true,
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "to_port": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "revoke_security_group_egress",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "group_id": {
              "required": true,
              "type": "string"
          },
          "cidr_ip": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_revoke_security_group_egress",
      "pack": "aws",
      "ref": "aws.vpc_revoke_security_group_egress",
      "id": "5b87f8340a8b8a567f589496",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_run_instances",
      "parameters": {
          "ramdisk_id": {
              "type": "string"
          },
          "user_data": {
              "type": "string"
          },
          "max_count": {
              "default": 1,
              "type": "string"
          },
          "block_device_map": {
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "instance_profile_arn": {
              "type": "string"
          },
          "additional_info": {
              "type": "string"
          },
          "security_groups": {
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "subnet_id": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "ebs_optimized": {
              "default": false,
              "type": "boolean"
          },
          "placement_group": {
              "type": "string"
          },
          "disable_api_termination": {
              "default": false,
              "type": "boolean"
          },
          "client_token": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "kernel_id": {
              "type": "string"
          },
          "key_name": {
              "type": "string"
          },
          "addressing_type": {
              "type": "string"
          },
          "private_ip_address": {
              "type": "string"
          },
          "tenancy": {
              "type": "string"
          },
          "min_count": {
              "default": 1,
              "type": "string"
          },
          "security_group_ids": {
              "type": "string"
          },
          "placement": {
              "type": "string"
          },
          "instance_profile_name": {
              "type": "string"
          },
          "image_id": {
              "required": true,
              "type": "string"
          },
          "network_interfaces": {
              "type": "string"
          },
          "instance_initiated_shutdown_behavior": {
              "type": "string"
          },
          "monitoring_enabled": {
              "default": false,
              "type": "boolean"
          },
          "instance_type": {
              "default": "m1.small",
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "default": "run_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_run_instances",
      "pack": "aws",
      "ref": "aws.vpc_run_instances",
      "id": "5b87f8340a8b8a567f589497",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_server_name",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "server_name",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "port": {
              "type": "string"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_server_name",
      "pack": "aws",
      "ref": "aws.vpc_server_name",
      "id": "5b87f8340a8b8a567f589498",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_set_host_header",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "request": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_host_header",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_set_host_header",
      "pack": "aws",
      "ref": "aws.vpc_set_host_header",
      "id": "5b87f8340a8b8a567f589499",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_set_request_hook",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "hook": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "set_request_hook",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_set_request_hook",
      "pack": "aws",
      "ref": "aws.vpc_set_request_hook",
      "id": "5b87f8340a8b8a567f58949a",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_skip_proxy",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "skip_proxy",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_skip_proxy",
      "pack": "aws",
      "ref": "aws.vpc_skip_proxy",
      "id": "5b87f8340a8b8a567f58949b",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_start_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "start_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_start_instances",
      "pack": "aws",
      "ref": "aws.vpc_start_instances",
      "id": "5b87f8340a8b8a567f58949c",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_stop_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "action": {
              "default": "stop_instances",
              "type": "string",
              "immutable": true
          },
          "force": {
              "default": false,
              "type": "boolean"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_stop_instances",
      "pack": "aws",
      "ref": "aws.vpc_stop_instances",
      "id": "5b87f8340a8b8a567f58949d",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_terminate_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "terminate_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_terminate_instances",
      "pack": "aws",
      "ref": "aws.vpc_terminate_instances",
      "id": "5b87f8340a8b8a567f58949e",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_trim_snapshots",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "hourly_backups": {
              "default": 8,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "daily_backups": {
              "default": 7,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "trim_snapshots",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "weekly_backups": {
              "default": 4,
              "type": "string"
          },
          "monthly_backups": {
              "default": true,
              "type": "boolean"
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_trim_snapshots",
      "pack": "aws",
      "ref": "aws.vpc_trim_snapshots",
      "id": "5b87f8340a8b8a567f58949f",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_unassign_private_ip_addresses",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "private_ip_addresses": {
              "type": "string"
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "network_interface_id": {
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "unassign_private_ip_addresses",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_unassign_private_ip_addresses",
      "pack": "aws",
      "ref": "aws.vpc_unassign_private_ip_addresses",
      "id": "5b87f8340a8b8a567f5894a0",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_unmonitor_instance",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_id": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "unmonitor_instance",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_unmonitor_instance",
      "pack": "aws",
      "ref": "aws.vpc_unmonitor_instance",
      "id": "5b87f8340a8b8a567f5894a1",
      "runner_type": "python-script"
  },
  {
      "name": "vpc_unmonitor_instances",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "dry_run": {
              "default": false,
              "type": "boolean"
          },
          "instance_ids": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "action": {
              "default": "unmonitor_instances",
              "type": "string",
              "immutable": true
          },
          "module_path": {
              "default": "boto.vpc",
              "type": "string",
              "immutable": true
          },
          "cls": {
              "default": "VPCConnection",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:aws:vpc_unmonitor_instances",
      "pack": "aws",
      "ref": "aws.vpc_unmonitor_instances",
      "id": "5b87f8340a8b8a567f5894a2",
      "runner_type": "python-script"
  },
  {
      "name": "format_execution_result",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "execution_id": {
              "required": true,
              "type": "string",
              "description": "Id of execution to format"
          }
      },
      "tags": [],
      "description": "Format an execution result for chatops",
      "enabled": true,
      "entry_point": "format_execution_result.py",
      "notify": {},
      "uid": "action:chatops:format_execution_result",
      "pack": "chatops",
      "ref": "chatops.format_execution_result",
      "id": "5b87f7d80a8b8a55c6191dd1",
      "runner_type": "python-script"
  },
  {
      "name": "match",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "text": {
              "required": true,
              "type": "string",
              "description": "The text to match"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Match a string to an action alias",
      "enabled": true,
      "entry_point": "match.py",
      "notify": {},
      "uid": "action:chatops:match",
      "pack": "chatops",
      "ref": "chatops.match",
      "id": "5b87f7d80a8b8a55c6191dd2",
      "runner_type": "python-script"
  },
  {
      "name": "match_and_execute",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "text": {
              "required": true,
              "type": "string",
              "description": "The text to match"
          },
          "user": {
              "required": false,
              "type": "string",
              "description": "User ID calling the command"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "source_channel": {
              "required": false,
              "type": "string",
              "description": "The source channel to set on the execution"
          }
      },
      "tags": [],
      "description": "Execute a chatops string to an action alias",
      "enabled": true,
      "entry_point": "match_and_execute.py",
      "notify": {},
      "uid": "action:chatops:match_and_execute",
      "pack": "chatops",
      "ref": "chatops.match_and_execute",
      "id": "5b87f7d80a8b8a55c6191dd3",
      "runner_type": "python-script"
  },
  {
      "name": "post_message",
      "parameters": {
          "extra": {
              "type": "object",
              "description": "Extra adapter-specific parameters."
          },
          "whisper": {
              "default": false,
              "type": "boolean",
              "description": "Send a private message to user"
          },
          "route": {
              "default": "chatops",
              "minLength": 1,
              "type": "string",
              "description": "The routing_key used to route the message to consumers. Might be a list of words, delimited by dots.",
              "maxLength": 255
          },
          "experimental": {
              "default": true,
              "required": true,
              "type": "boolean",
              "description": "Flag to indicate acknowledgment of using experimental runner",
              "immutable": true
          },
          "user": {
              "type": "string",
              "description": "Explicitly notify a user"
          },
          "message": {
              "required": true,
              "type": "string",
              "description": "Message to send."
          },
          "channel": {
              "required": true,
              "type": "string",
              "description": "Channel to post to"
          }
      },
      "tags": [],
      "description": "Post a message to stream for chatops",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:chatops:post_message",
      "pack": "chatops",
      "ref": "chatops.post_message",
      "id": "5b87f7d80a8b8a55c6191dd4",
      "runner_type": "announcement"
  },
  {
      "name": "post_result",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "channel": {
              "required": true,
              "type": "string",
              "description": "Channel to post to"
          },
          "whisper": {
              "default": false,
              "type": "boolean",
              "description": "Send a private message to user"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "user": {
              "type": "string",
              "description": "Explicitly notify a user"
          },
          "execution_id": {
              "required": true,
              "type": "string",
              "description": "ID of an execution to send"
          }
      },
      "tags": [],
      "description": "Post an execution result to stream for chatops",
      "enabled": true,
      "entry_point": "workflows/post_result.yaml",
      "notify": {},
      "uid": "action:chatops:post_result",
      "pack": "chatops",
      "ref": "chatops.post_result",
      "id": "5b87f7d80a8b8a55c6191dd5",
      "runner_type": "action-chain"
  },
  {
      "name": "run",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "whisper": {
              "default": false,
              "type": "boolean",
              "description": "Send a private message to user"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "user": {
              "type": "string",
              "description": "Explicitly notify a user"
          },
          "text": {
              "required": true,
              "type": "string",
              "description": "Chatops command"
          },
          "channel": {
              "required": true,
              "type": "string",
              "description": "Channel to post to"
          }
      },
      "tags": [],
      "description": "Match a text chatops command, execute it and post the result",
      "enabled": true,
      "entry_point": "workflows/run.yaml",
      "notify": {},
      "uid": "action:chatops:run",
      "pack": "chatops",
      "ref": "chatops.run",
      "id": "5b87f7d80a8b8a55c6191dd6",
      "runner_type": "action-chain"
  },
  {
      "name": "cancel_build",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username in circle ci."
          },
          "project": {
              "required": true,
              "type": "string",
              "description": "Name of project in circle ci."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "build_num": {
              "required": true,
              "type": "integer",
              "description": "Build number from circle CI."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "vcs_type": {
              "default": "github",
              "required": true,
              "type": "string",
              "description": "Name of version control system.",
              "enum": [
                  "github",
                  "bitbucket"
              ]
          }
      },
      "tags": [],
      "description": "Cancel specific build for project.",
      "enabled": true,
      "entry_point": "cancel_build.py",
      "notify": {},
      "uid": "action:circle_ci:cancel_build",
      "pack": "circle_ci",
      "ref": "circle_ci.cancel_build",
      "id": "5b87f80b0a8b8a567f58911a",
      "runner_type": "python-script"
  },
  {
      "name": "get_build_info",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username in circle ci."
          },
          "project": {
              "required": true,
              "type": "string",
              "description": "Name of project in circle ci."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "build_num": {
              "required": true,
              "type": "integer",
              "description": "Build number from circle CI."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "vcs_type": {
              "default": "github",
              "required": true,
              "type": "string",
              "description": "Name of version control system.",
              "enum": [
                  "github",
                  "bitbucket"
              ]
          }
      },
      "tags": [],
      "description": "Get info for build number.",
      "enabled": true,
      "entry_point": "get_build_info.py",
      "notify": {},
      "uid": "action:circle_ci:get_build_info",
      "pack": "circle_ci",
      "ref": "circle_ci.get_build_info",
      "id": "5b87f80b0a8b8a567f58911b",
      "runner_type": "python-script"
  },
  {
      "name": "get_build_number",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username in circle ci."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "project": {
              "required": true,
              "type": "string",
              "description": "Name of project in circle ci."
          },
          "search_limit": {
              "default": 10,
              "required": false,
              "type": "number",
              "description": "Number of previous builds to search."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "vcs_revision": {
              "required": true,
              "type": "string",
              "description": "Commit SHA/revision (usually github SHA)."
          },
          "vcs_type": {
              "default": "github",
              "required": true,
              "type": "string",
              "description": "Name of version control system.",
              "enum": [
                  "github",
                  "bitbucket"
              ]
          }
      },
      "tags": [],
      "description": "Get build number for given SHA.",
      "enabled": true,
      "entry_point": "get_build_number.py",
      "notify": {},
      "uid": "action:circle_ci:get_build_number",
      "pack": "circle_ci",
      "ref": "circle_ci.get_build_number",
      "id": "5b87f80b0a8b8a567f58911c",
      "runner_type": "python-script"
  },
  {
      "name": "retry_build",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username in circle ci."
          },
          "project": {
              "required": true,
              "type": "string",
              "description": "Name of project in circle ci."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "build_num": {
              "required": true,
              "type": "integer",
              "description": "Build number from circle CI."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "vcs_type": {
              "default": "github",
              "required": true,
              "type": "string",
              "description": "Name of version control system.",
              "enum": [
                  "github",
                  "bitbucket"
              ]
          }
      },
      "tags": [],
      "description": "Retry build for project.",
      "enabled": true,
      "entry_point": "retry_build.py",
      "notify": {},
      "uid": "action:circle_ci:retry_build",
      "pack": "circle_ci",
      "ref": "circle_ci.retry_build",
      "id": "5b87f80b0a8b8a567f58911d",
      "runner_type": "python-script"
  },
  {
      "name": "run_build",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username in circle ci."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "project": {
              "required": true,
              "type": "string",
              "description": "Name of project in circle ci."
          },
          "tag": {
              "type": "string",
              "description": "Tag to run the build on."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "type": "string",
              "description": "Branch to run the build on."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "build_parameters": {
              "type": "object",
              "description": "k-v pair of extra build_parameters"
          },
          "vcs_revision": {
              "type": "string",
              "description": "Commit SHA/revision (usually github SHA)."
          },
          "vcs_type": {
              "default": "github",
              "required": true,
              "type": "string",
              "description": "Name of version control system.",
              "enum": [
                  "github",
                  "bitbucket"
              ]
          }
      },
      "tags": [],
      "description": "Run build for project and branch.",
      "enabled": true,
      "entry_point": "run_build.py",
      "notify": {},
      "uid": "action:circle_ci:run_build",
      "pack": "circle_ci",
      "ref": "circle_ci.run_build",
      "id": "5b87f80b0a8b8a567f58911e",
      "runner_type": "python-script"
  },
  {
      "name": "wait_until_build_finishes",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username in circle ci."
          },
          "project": {
              "required": true,
              "type": "string",
              "description": "Name of project in circle ci."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "build_num": {
              "required": true,
              "type": "string",
              "description": "Circle CI build number."
          },
          "wait_timeout": {
              "default": 600,
              "required": false,
              "type": "number",
              "description": "How long to wait before quits (in seconds)."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "vcs_type": {
              "default": "github",
              "required": true,
              "type": "string",
              "description": "Name of version control system.",
              "enum": [
                  "github",
                  "bitbucket"
              ]
          }
      },
      "tags": [],
      "description": "Wait until build finishes.",
      "enabled": true,
      "entry_point": "wait_until_build_finishes.py",
      "notify": {},
      "uid": "action:circle_ci:wait_until_build_finishes",
      "pack": "circle_ci",
      "ref": "circle_ci.wait_until_build_finishes",
      "id": "5b87f80b0a8b8a567f58911f",
      "runner_type": "python-script"
  },
  {
      "name": "announcement",
      "parameters": {
          "route": {
              "default": "general",
              "minLength": 1,
              "type": "string",
              "description": "The routing_key used to route the message to consumers. Might be a list of words, delimited by dots.",
              "maxLength": 255
          },
          "message": {
              "type": "object",
              "description": "Message to broadcast."
          },
          "experimental": {
              "default": true,
              "required": true,
              "type": "boolean",
              "description": "Flag to indicate acknowledgment of using experimental runner",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Action that broadcasts the announcement to all stream consumers.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:announcement",
      "pack": "core",
      "ref": "core.announcement",
      "id": "5b87f7d80a8b8a55c6191db3",
      "runner_type": "announcement"
  },
  {
      "name": "ask",
      "parameters": {
          "route": {
              "default": "",
              "required": false,
              "type": "string",
              "description": "An arbitrary value for allowing rules to route to proper notification channel"
          },
          "schema": {
              "default": {
                  "type": "object",
                  "properties": {
                      "continue": {
                          "required": true,
                          "type": "boolean",
                          "description": "Would you like to continue the workflow?"
                      }
                  },
                  "title": "response_data"
              },
              "required": true,
              "type": "object",
              "description": "A JSON schema that will be used to validate the response data"
          },
          "users": {
              "default": [],
              "required": false,
              "type": "array",
              "description": "A list of usernames that are permitted to respond to the action (if nothing provided, all are permitted)"
          },
          "roles": {
              "default": [],
              "required": false,
              "type": "array",
              "description": "A list of roles that are permitted to respond to the action (if nothing provided, all are permitted) - REQUIRES ENTERPRISE FEATURES"
          },
          "ttl": {
              "default": 1440,
              "required": true,
              "type": "integer",
              "description": "Time (in minutes) to wait before timing out the inquiry if no response is received"
          }
      },
      "tags": [],
      "description": "Action for initiating an Inquiry (usually in a workflow)",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:ask",
      "pack": "core",
      "ref": "core.ask",
      "id": "5b87f7d80a8b8a55c6191db4",
      "runner_type": "inquirer"
  },
  {
      "name": "echo",
      "parameters": {
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "description": "Sudo password. To be used when paswordless sudo is not allowed.",
              "default": null,
              "required": false,
              "secret": true,
              "type": "string",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "echo \"{{message}}\"",
              "required": true,
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the local host.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "message": {
              "required": true,
              "type": "string",
              "description": "The message that the command will echo."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "Action that executes the Linux echo command on the localhost.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:echo",
      "pack": "core",
      "ref": "core.echo",
      "id": "5b87f7d80a8b8a55c6191db5",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "http",
      "parameters": {
          "username": {
              "type": "string",
              "description": "Username required by basic authentication."
          },
          "body": {
              "type": "string",
              "description": "Body to send with the request"
          },
          "cookies": {
              "type": "object",
              "description": "Optional cookies to send with the request."
          },
          "https_proxy": {
              "type": "string",
              "description": "URL of HTTPS proxy to use (e.g. http://10.10.1.10:3128)."
          },
          "url": {
              "required": true,
              "type": "string",
              "description": "URL to the HTTP endpoint."
          },
          "file_name": {
              "type": "string",
              "description": "Magic attribute which is automatically populated when file_path is specified"
          },
          "file_content_type": {
              "type": "string",
              "description": "Optional content type for the uploaded file"
          },
          "http_proxy": {
              "type": "string",
              "description": "URL of HTTP proxy to use (e.g. http://10.10.1.10:3128)."
          },
          "auth": {
              "type": "string",
              "description": "Auth string to be used. This can be like 'x-auth-token=XYZ'."
          },
          "method": {
              "enum": [
                  "HEAD",
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
              ],
              "type": "string",
              "description": "HTTP method to use."
          },
          "file_content": {
              "type": "string",
              "description": "Magic attribute which is automatically populated when file_path is specified"
          },
          "params": {
              "type": "object",
              "description": "Query params to be used with the HTTP request."
          },
          "timeout": {
              "default": 60,
              "type": "number",
              "description": "Timeout for the HTTP request."
          },
          "allow_redirects": {
              "default": false,
              "type": "boolean",
              "description": "Set to True if POST/PUT/DELETE redirect following is allowed."
          },
          "password": {
              "secret": true,
              "type": "string",
              "description": "Password required by basic authentication."
          },
          "file_path": {
              "type": "string",
              "description": "Path to the file to upload"
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification."
          },
          "headers": {
              "type": "object",
              "description": "HTTP headers to use with the request."
          }
      },
      "tags": [],
      "description": "Action that performs an http request.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:http",
      "pack": "core",
      "ref": "core.http",
      "id": "5b87f7d80a8b8a55c6191db6",
      "runner_type": "http-request"
  },
  {
      "name": "inject_trigger",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "trace_tag": {
              "required": false,
              "type": "string",
              "description": "Optional trace tag."
          },
          "trigger": {
              "required": true,
              "type": "string",
              "description": "Trigger reference (e.g. mypack.my_trigger)."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "payload": {
              "type": "object",
              "description": "Trigger payload."
          }
      },
      "tags": [],
      "description": "Action which injects a new trigger in the system.",
      "enabled": true,
      "entry_point": "inject_trigger.py",
      "notify": {},
      "uid": "action:core:inject_trigger",
      "pack": "core",
      "ref": "core.inject_trigger",
      "id": "5b87f7d80a8b8a55c6191db7",
      "runner_type": "python-script"
  },
  {
      "name": "local",
      "parameters": {
          "cmd": {
              "required": true,
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the local host."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "Action that executes an arbitrary Linux command on the localhost.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:local",
      "pack": "core",
      "ref": "core.local",
      "id": "5b87f7d80a8b8a55c6191db8",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "local_sudo",
      "parameters": {
          "cmd": {
              "required": true,
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s)."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "Action that executes an arbitrary Linux command on the localhost.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:local_sudo",
      "pack": "core",
      "ref": "core.local_sudo",
      "id": "5b87f7d80a8b8a55c6191db9",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "noop",
      "parameters": {},
      "tags": [],
      "description": "Action that does nothing",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:noop",
      "pack": "core",
      "ref": "core.noop",
      "id": "5b87f7d80a8b8a55c6191dba",
      "runner_type": "noop"
  },
  {
      "name": "pause",
      "parameters": {
          "max_pause": {
              "position": 0,
              "required": true,
              "type": "integer",
              "description": "Maximum length of time to pause (Seconds)"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "random": {
              "default": false,
              "position": 1,
              "required": false,
              "type": "boolean",
              "description": "Randomize pause for current flow/sub-flow to a max of max_pause. "
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Action to pause current thread of workflow/sub-workflow.",
      "enabled": true,
      "entry_point": "pause.py",
      "notify": {},
      "uid": "action:core:pause",
      "pack": "core",
      "ref": "core.pause",
      "id": "5b87f7d80a8b8a55c6191dbb",
      "runner_type": "python-script"
  },
  {
      "name": "remote",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "required": true,
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s)."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Action to execute arbitrary linux command remotely.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:remote",
      "pack": "core",
      "ref": "core.remote",
      "id": "5b87f7d80a8b8a55c6191dbc",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "remote_sudo",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "required": true,
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s)."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Action to execute arbitrary linux command remotely.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:remote_sudo",
      "pack": "core",
      "ref": "core.remote_sudo",
      "id": "5b87f7d80a8b8a55c6191dbd",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "sendmail",
      "parameters": {
          "send_empty_body": {
              "default": true,
              "position": 3,
              "required": false,
              "type": "boolean",
              "description": "Send a message even if the body is empty."
          },
          "body": {
              "position": 5,
              "required": true,
              "type": "string",
              "description": "Body of the email."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "content_type": {
              "default": "text/html",
              "position": 4,
              "type": "string",
              "description": "Content type of message to be sent"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "attachments": {
              "position": 6,
              "required": false,
              "type": "string",
              "description": "Array of attachment file paths, comma-delimited."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "to": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Recipient email address."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "from": {
              "default": "stanley",
              "position": 0,
              "required": false,
              "type": "string",
              "description": "Sender email address."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "subject": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Subject of the email."
          }
      },
      "tags": [],
      "description": "This sends an email",
      "enabled": true,
      "entry_point": "send_mail/send_mail",
      "notify": {},
      "uid": "action:core:sendmail",
      "pack": "core",
      "ref": "core.sendmail",
      "id": "5b87f7d80a8b8a55c6191dbe",
      "runner_type": "local-shell-script"
  },
  {
      "name": "uuid",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "uuid_type": {
              "default": "uuid4",
              "enum": [
                  "uuid1",
                  "uuid4"
              ],
              "type": "string",
              "description": "UUID type (uuid1 or uuid4). Defaults to uuid4"
          }
      },
      "tags": [],
      "description": "Generate a new UUID (default uuid4)",
      "enabled": true,
      "entry_point": "generate_uuid.py",
      "notify": {},
      "uid": "action:core:uuid",
      "pack": "core",
      "ref": "core.uuid",
      "id": "5b87f7d80a8b8a55c6191dbf",
      "runner_type": "python-script"
  },
  {
      "name": "windows_cmd",
      "parameters": {
          "username": {
              "default": "Administrator",
              "required": true,
              "type": "string",
              "description": "Username used to log-in."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Password used to log in."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "Host to execute the command on"
          },
          "cmd": {
              "required": true,
              "type": "string",
              "description": "Arbitrary Windows command to be executed on the remote host."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Action to execute arbitrary Windows command remotely.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:windows_cmd",
      "pack": "core",
      "ref": "core.windows_cmd",
      "id": "5b87f7d80a8b8a55c6191dc0",
      "runner_type": "windows-cmd"
  },
  {
      "name": "winrm_cmd",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username used to log-in."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Password used to log in."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command (e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "required": true,
              "type": "string",
              "description": "Arbitrary Windows Command Prompt command to be executed on the remote host."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          },
          "kwarg_op": {
              "default": "-",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"-\" or \"/\"."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "A host where the command will be run"
          },
          "transport": {
              "default": "ntlm",
              "required": false,
              "type": "string",
              "description": "The type of transport that WinRM will use to communicate. See https://github.com/diyan/pywinrm#valid-transport-options",
              "enum": [
                  "basic",
                  "certificate",
                  "credssp",
                  "kerberos",
                  "ntlm",
                  "plaintext",
                  "ssl"
              ]
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "scheme": {
              "default": "https",
              "required": false,
              "type": "string",
              "description": "Scheme to use in the WinRM URL. If using scheme \"http\" port must be 5985"
          },
          "port": {
              "default": 5986,
              "required": false,
              "type": "integer",
              "description": "WinRM port to connect on. If using port 5985 scheme must be \"http\""
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification."
          }
      },
      "tags": [],
      "description": "Action to execute arbitrary Windows Command Prompt command remotely via WinRM.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:winrm_cmd",
      "pack": "core",
      "ref": "core.winrm_cmd",
      "id": "5b87f7d80a8b8a55c6191dc1",
      "runner_type": "winrm-cmd"
  },
  {
      "name": "winrm_ps_cmd",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username used to log-in."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Password used to log in."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command (e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "required": true,
              "type": "string",
              "description": "Arbitrary Windows PowerShell command to be executed on the remote host."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          },
          "kwarg_op": {
              "default": "-",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"-\" or \"/\"."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "A host where the command will be run"
          },
          "transport": {
              "default": "ntlm",
              "required": false,
              "type": "string",
              "description": "The type of transport that WinRM will use to communicate. See https://github.com/diyan/pywinrm#valid-transport-options",
              "enum": [
                  "basic",
                  "certificate",
                  "credssp",
                  "kerberos",
                  "ntlm",
                  "plaintext",
                  "ssl"
              ]
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "scheme": {
              "default": "https",
              "required": false,
              "type": "string",
              "description": "Scheme to use in the WinRM URL. If using scheme \"http\" port must be 5985"
          },
          "port": {
              "default": 5986,
              "required": false,
              "type": "integer",
              "description": "WinRM port to connect on. If using port 5985 scheme must be \"http\""
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification."
          }
      },
      "tags": [],
      "description": "Action to execute arbitrary Windows PowerShell command remotely via WinRM.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:core:winrm_ps_cmd",
      "pack": "core",
      "ref": "core.winrm_ps_cmd",
      "id": "5b87f7d80a8b8a55c6191dc2",
      "runner_type": "winrm-ps-cmd"
  },
  {
      "name": "format",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "quote_char": {
              "default": "\"",
              "required": false,
              "type": "string",
              "description": "Character used to quote the strings."
          },
          "delimiter": {
              "default": ",",
              "required": false,
              "type": "string",
              "description": "String delimiter character."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "data": {
              "required": true,
              "type": "array",
              "description": "Data to parse"
          }
      },
      "tags": [],
      "description": "Format a Python list into a CSV string",
      "enabled": true,
      "entry_point": "format.py",
      "notify": {},
      "uid": "action:csv:format",
      "pack": "csv",
      "ref": "csv.format",
      "id": "5b87fafc0a8b8a0784464cd1",
      "runner_type": "python-script"
  },
  {
      "name": "parse",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "quote_char": {
              "default": "\"",
              "required": false,
              "type": "string",
              "description": "Character used to quote the strings."
          },
          "delimiter": {
              "default": ",",
              "required": false,
              "type": "string",
              "description": "String delimiter character."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "data": {
              "required": true,
              "type": "string",
              "description": "CSV string to parse."
          }
      },
      "tags": [],
      "description": "Parse CSV string and return JSON object.",
      "enabled": true,
      "entry_point": "parse.py",
      "notify": {},
      "uid": "action:csv:parse",
      "pack": "csv",
      "ref": "csv.parse",
      "id": "5b87fa1e0a8b8a0784464c8b",
      "runner_type": "python-script"
  },
  {
      "name": "parse_file",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "quote_char": {
              "default": "\"",
              "required": false,
              "type": "string",
              "description": "Character used to quote the strings."
          },
          "delimiter": {
              "default": ",",
              "required": false,
              "type": "string",
              "description": "String delimiter character."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "file_path": {
              "required": true,
              "type": "string",
              "description": "Path to the file to parse."
          }
      },
      "tags": [],
      "description": "Parse a file in CSV format and return JSON object.",
      "enabled": true,
      "entry_point": "parse_file.py",
      "notify": {},
      "uid": "action:csv:parse_file",
      "pack": "csv",
      "ref": "csv.parse_file",
      "id": "5b87fafc0a8b8a0784464cd2",
      "runner_type": "python-script"
  },
  {
      "name": "action_chain_streaming_demo",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "sleep_delay": {
              "default": 0.2,
              "required": true,
              "type": "number"
          },
          "count": {
              "default": 5,
              "required": true,
              "type": "integer"
          }
      },
      "tags": [],
      "description": "Action output streaming functionality demo for action chain workflows.",
      "enabled": true,
      "entry_point": "chains/action_chain_streaming_demo.yaml",
      "notify": {},
      "uid": "action:examples:action_chain_streaming_demo",
      "pack": "examples",
      "ref": "examples.action_chain_streaming_demo",
      "id": "5b87f95e0a8b8a0be7676932",
      "runner_type": "action-chain"
  },
  {
      "name": "chain-sequential",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [
                  "task1",
                  "task2",
                  "task3"
              ],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "name": {
              "default": "Lakshmi",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic sequential workflow.",
      "enabled": true,
      "entry_point": "chains/chain_sequential.yaml",
      "notify": {},
      "uid": "action:examples:chain-sequential",
      "pack": "examples",
      "ref": "examples.chain-sequential",
      "id": "5b87f95e0a8b8a0be7676933",
      "runner_type": "action-chain"
  },
  {
      "name": "chain-test-cancel",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "tempfile": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Simple action chain to test cancellation.",
      "enabled": true,
      "entry_point": "chains/chain_test_cancel.yaml",
      "notify": {},
      "uid": "action:examples:chain-test-cancel",
      "pack": "examples",
      "ref": "examples.chain-test-cancel",
      "id": "5b87f95e0a8b8a0be7676935",
      "runner_type": "action-chain"
  },
  {
      "name": "chain-test-cancel-with-subworkflow",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "tempfile": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Simple action chain with a Mistral subworkflow to test cancellation.",
      "enabled": true,
      "entry_point": "chains/chain_test_cancel_with_subworkflow.yaml",
      "notify": {},
      "uid": "action:examples:chain-test-cancel-with-subworkflow",
      "pack": "examples",
      "ref": "examples.chain-test-cancel-with-subworkflow",
      "id": "5b87f95e0a8b8a0be7676934",
      "runner_type": "action-chain"
  },
  {
      "name": "chain-test-inquiry",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "A basic ActionChain workflow illustrating the use of Inquiries",
      "enabled": true,
      "entry_point": "chains/chain_test_inquiry.yaml",
      "notify": {},
      "uid": "action:examples:chain-test-inquiry",
      "pack": "examples",
      "ref": "examples.chain-test-inquiry",
      "id": "5b87f95e0a8b8a0be7676937",
      "runner_type": "action-chain"
  },
  {
      "name": "chain-test-inquiry-parent",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "A workflow to test Inquiry pausing nested actionchain workflows",
      "enabled": true,
      "entry_point": "chains/chain_test_inquiry_parent.yaml",
      "notify": {},
      "uid": "action:examples:chain-test-inquiry-parent",
      "pack": "examples",
      "ref": "examples.chain-test-inquiry-parent",
      "id": "5b87f95e0a8b8a0be7676936",
      "runner_type": "action-chain"
  },
  {
      "name": "chain-test-pause-resume",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "tempfile": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Simple action chain to test pause and resume.",
      "enabled": true,
      "entry_point": "chains/chain_test_pause_resume.yaml",
      "notify": {},
      "uid": "action:examples:chain-test-pause-resume",
      "pack": "examples",
      "ref": "examples.chain-test-pause-resume",
      "id": "5b87f95e0a8b8a0be767693a",
      "runner_type": "action-chain"
  },
  {
      "name": "chain-test-pause-resume-with-subchain",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "tempfile": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Simple action chain with a subchain to test pause and resume.",
      "enabled": true,
      "entry_point": "chains/chain_test_pause_resume_with_subchain.yaml",
      "notify": {},
      "uid": "action:examples:chain-test-pause-resume-with-subchain",
      "pack": "examples",
      "ref": "examples.chain-test-pause-resume-with-subchain",
      "id": "5b87f95e0a8b8a0be7676938",
      "runner_type": "action-chain"
  },
  {
      "name": "chain-test-pause-resume-with-subworkflow",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "tempfile": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Simple action chain with a Mistral subworkflow to test pause and resume.",
      "enabled": true,
      "entry_point": "chains/chain_test_pause_resume_with_subworkflow.yaml",
      "notify": {},
      "uid": "action:examples:chain-test-pause-resume-with-subworkflow",
      "pack": "examples",
      "ref": "examples.chain-test-pause-resume-with-subworkflow",
      "id": "5b87f95e0a8b8a0be7676939",
      "runner_type": "action-chain"
  },
  {
      "name": "cloudslang-basic",
      "parameters": {
          "inputs": {
              "default": {},
              "type": "object",
              "description": "Inputs which will be available to CloudSlang flow execution(e.g. input1=val1,input2=val2)"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "text": {
              "type": "string",
              "description": "Text to print to the console"
          }
      },
      "tags": [],
      "description": "Greet StackStorm from cloudslang ;) !",
      "enabled": true,
      "entry_point": "workflows/print_text.sl",
      "notify": {},
      "uid": "action:examples:cloudslang-basic",
      "pack": "examples",
      "ref": "examples.cloudslang-basic",
      "id": "5b87f95e0a8b8a0be767693b",
      "runner_type": "cloudslang"
  },
  {
      "name": "data_jinja_filter",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow showing how to use jinja data filters in st2.",
      "enabled": true,
      "entry_point": "chains/data_jinja_filter.yaml",
      "notify": {},
      "uid": "action:examples:data_jinja_filter",
      "pack": "examples",
      "ref": "examples.data_jinja_filter",
      "id": "5b87f95e0a8b8a0be767693c",
      "runner_type": "action-chain"
  },
  {
      "name": "decrypt_kv_jinja_filter",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow showing how to use jinja crypto filters in st2.",
      "enabled": true,
      "entry_point": "chains/decrypt_kv_jinja_filter.yaml",
      "notify": {},
      "uid": "action:examples:decrypt_kv_jinja_filter",
      "pack": "examples",
      "ref": "examples.decrypt_kv_jinja_filter",
      "id": "5b87f95e0a8b8a0be767693d",
      "runner_type": "action-chain"
  },
  {
      "name": "echochain",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [
                  "c2"
              ],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow",
      "enabled": true,
      "entry_point": "chains/echochain.yaml",
      "notify": {
          "on-complete": {
              "routes": [
                  "slack"
              ],
              "message": "\"@channel: Action succeeded.\""
          }
      },
      "uid": "action:examples:echochain",
      "pack": "examples",
      "ref": "examples.echochain",
      "id": "5b87f95e0a8b8a0be767693e",
      "runner_type": "action-chain"
  },
  {
      "name": "echochain-param",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "input1": {
              "required": true,
              "type": "string",
              "description": "Any string to pass down"
          }
      },
      "tags": [],
      "description": "Action Chain workflow passing variables",
      "enabled": true,
      "entry_point": "chains/echochain_param.yaml",
      "notify": {},
      "uid": "action:examples:echochain-param",
      "pack": "examples",
      "ref": "examples.echochain-param",
      "id": "5b87f95e0a8b8a0be767693f",
      "runner_type": "action-chain"
  },
  {
      "name": "echochain_task_failure",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow with task failure",
      "enabled": true,
      "entry_point": "chains/echochain_task_failure.yaml",
      "notify": {},
      "uid": "action:examples:echochain_task_failure",
      "pack": "examples",
      "ref": "examples.echochain_task_failure",
      "id": "5b87f95f0a8b8a0be7676940",
      "runner_type": "action-chain"
  },
  {
      "name": "echochain_top_level_failure",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow with a top level (chain) failure",
      "enabled": true,
      "entry_point": "chains/echochain_top_level_failure.yaml",
      "notify": {},
      "uid": "action:examples:echochain_top_level_failure",
      "pack": "examples",
      "ref": "examples.echochain_top_level_failure",
      "id": "5b87f95f0a8b8a0be7676941",
      "runner_type": "action-chain"
  },
  {
      "name": "env_reader",
      "parameters": {
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the script will be executed in"
          }
      },
      "tags": [],
      "description": "Reads env vars.",
      "enabled": true,
      "entry_point": "env_reader.sh",
      "notify": {},
      "uid": "action:examples:env_reader",
      "pack": "examples",
      "ref": "examples.env_reader",
      "id": "5b87f95f0a8b8a0be7676942",
      "runner_type": "local-shell-script"
  },
  {
      "name": "forloop_chain",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "github_organization_url": {
              "default": "https://github.com/StackStorm-Exchange",
              "required": false,
              "type": "string",
              "description": "Organization url to parse data from"
          }
      },
      "tags": [],
      "description": "Action Chain to loop over an organization github page and get all the repositories list",
      "enabled": true,
      "entry_point": "chains/forloop_chain.yaml",
      "notify": {},
      "uid": "action:examples:forloop_chain",
      "pack": "examples",
      "ref": "examples.forloop_chain",
      "id": "5b87f95f0a8b8a0be7676943",
      "runner_type": "action-chain"
  },
  {
      "name": "forloop_get_github_page",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "url": {
              "required": true,
              "type": "string",
              "description": "Url of the page to be requested"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "required": false,
              "type": "string",
              "description": "Page number to request"
          }
      },
      "tags": [],
      "description": "Action to get the contents of a github page with support to choose the page",
      "enabled": true,
      "entry_point": "pythonactions/forloop_get_github_page.py",
      "notify": {},
      "uid": "action:examples:forloop_get_github_page",
      "pack": "examples",
      "ref": "examples.forloop_get_github_page",
      "id": "5b87f95f0a8b8a0be7676944",
      "runner_type": "python-script"
  },
  {
      "name": "forloop_increase_index_and_check_condition",
      "parameters": {
          "index": {
              "required": true,
              "type": "string",
              "description": "Index to be operated on"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "pagesize": {
              "required": true,
              "type": "string",
              "description": "Expected number of items on each page"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "input": {
              "required": true,
              "type": "object",
              "description": "Dataset to compare to the pagesize"
          }
      },
      "tags": [],
      "description": "Increase a for-loop index by a certain value and return false if condition is broken",
      "enabled": true,
      "entry_point": "pythonactions/forloop_increase_index_and_check_condition.py",
      "notify": {},
      "uid": "action:examples:forloop_increase_index_and_check_condition",
      "pack": "examples",
      "ref": "examples.forloop_increase_index_and_check_condition",
      "id": "5b87f95f0a8b8a0be7676945",
      "runner_type": "python-script"
  },
  {
      "name": "forloop_parse_github_repos",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content": {
              "required": true,
              "type": "string",
              "description": "Complete html page of the github request"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Action to parse the data and make it readable",
      "enabled": true,
      "entry_point": "pythonactions/forloop_parse_github_repos.py",
      "notify": {},
      "uid": "action:examples:forloop_parse_github_repos",
      "pack": "examples",
      "ref": "examples.forloop_parse_github_repos",
      "id": "5b87f95f0a8b8a0be7676946",
      "runner_type": "python-script"
  },
  {
      "name": "forloop_push_github_repos",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "data_to_push": {
              "required": true,
              "type": "object",
              "description": "Dictonary of the data to be pushed"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Action to push the data to an external service",
      "enabled": true,
      "entry_point": "pythonactions/forloop_push_github_repos.py",
      "notify": {},
      "uid": "action:examples:forloop_push_github_repos",
      "pack": "examples",
      "ref": "examples.forloop_push_github_repos",
      "id": "5b87f95f0a8b8a0be7676947",
      "runner_type": "python-script"
  },
  {
      "name": "get_windows_uptime",
      "parameters": {
          "username": {
              "default": "Administrator",
              "required": true,
              "type": "string",
              "description": "Username used to log-in."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "Host to execute the command on"
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Password used to log in."
          },
          "share": {
              "default": "C$",
              "required": true,
              "type": "string",
              "description": "Name of the Windows share where script files are uploaded"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Action that returns Windows host's uptime.",
      "enabled": true,
      "entry_point": "windows/get_uptime.ps1",
      "notify": {},
      "uid": "action:examples:get_windows_uptime",
      "pack": "examples",
      "ref": "examples.get_windows_uptime",
      "id": "5b87f9620a8b8a0be76769c9",
      "runner_type": "windows-script"
  },
  {
      "name": "invoke-mistral-with-jinja",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "cmd": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Example to invoke a Mistral workflow from an Action Chain",
      "enabled": true,
      "entry_point": "chains/invoke_mistral_with_jinja.yaml",
      "notify": {},
      "uid": "action:examples:invoke-mistral-with-jinja",
      "pack": "examples",
      "ref": "examples.invoke-mistral-with-jinja",
      "id": "5b87f95f0a8b8a0be7676948",
      "runner_type": "action-chain"
  },
  {
      "name": "isprime",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "value": {
              "required": true,
              "type": "integer"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Check if an integer is prime.",
      "enabled": true,
      "entry_point": "pythonactions/isprime.py",
      "notify": {},
      "uid": "action:examples:isprime",
      "pack": "examples",
      "ref": "examples.isprime",
      "id": "5b87f95f0a8b8a0be7676949",
      "runner_type": "python-script"
  },
  {
      "name": "json_escape_jinja_filter",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow showing how to use jinja json_escape filter",
      "enabled": true,
      "entry_point": "chains/json_escape_jinja_filter.yaml",
      "notify": {},
      "uid": "action:examples:json_escape_jinja_filter",
      "pack": "examples",
      "ref": "examples.json_escape_jinja_filter",
      "id": "5b87f95f0a8b8a0be767694a",
      "runner_type": "action-chain"
  },
  {
      "name": "json_string_to_object",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "json_str": {
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Convert JSON str to object.",
      "enabled": true,
      "entry_point": "pythonactions/json_string_to_object.py",
      "notify": {},
      "uid": "action:examples:json_string_to_object",
      "pack": "examples",
      "ref": "examples.json_string_to_object",
      "id": "5b87f95f0a8b8a0be767694b",
      "runner_type": "python-script"
  },
  {
      "name": "local-notify",
      "parameters": {
          "cmd": {
              "required": true,
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s)."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "Action that executes an arbitrary Linux command on the localhost.",
      "enabled": true,
      "entry_point": "",
      "notify": {
          "on-complete": {
              "routes": [
                  "slack"
              ],
              "message": "\"@channel: Action run by {{action_context.user}} succeeded. Cmd run was {{cmd}}.\""
          }
      },
      "uid": "action:examples:local-notify",
      "pack": "examples",
      "ref": "examples.local-notify",
      "id": "5b87f95f0a8b8a0be767694d",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "local-random-exit",
      "parameters": {
          "cmd": {
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the host."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "Action that returns a randomly generated exit code.",
      "enabled": true,
      "entry_point": "bash_exit_code/bash_exit_code.sh",
      "notify": {},
      "uid": "action:examples:local-random-exit",
      "pack": "examples",
      "ref": "examples.local-random-exit",
      "id": "5b87f95f0a8b8a0be767694c",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "local_command_runner_print_to_stdout_and_stderr",
      "parameters": {
          "count": {
              "default": 100,
              "position": 1,
              "required": true,
              "type": "integer",
              "description": "Number of repetitions."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sleep_delay": {
              "default": 0.5,
              "position": 2,
              "required": true,
              "type": "number",
              "description": "Sleep delay between each repetition."
          },
          "cmd": {
              "default": "i=0; while [ $i -lt {{ count }} ]; do j=$[$i+1]; if [ $(( $i % 2)) -eq 0 ]; then echo \"stderr line ${j}\" >&2; else echo \"stdout line ${j}\"; fi;\ni=$[$i+1];\nsleep {{ sleep_delay }}; done\n",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the host."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "Action which periodically prints to stdout and stderr. Useful for testing action output streaming.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:examples:local_command_runner_print_to_stdout_and_stderr",
      "pack": "examples",
      "ref": "examples.local_command_runner_print_to_stdout_and_stderr",
      "id": "5b87f95f0a8b8a0be767694e",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "local_script_runner_print_to_stdout_and_stderr",
      "parameters": {
          "count": {
              "default": 100,
              "position": 1,
              "required": true,
              "type": "integer",
              "description": "Number of repetitions."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sleep_delay": {
              "default": 0.5,
              "position": 2,
              "required": true,
              "type": "number",
              "description": "Sleep delay between each repetition."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the script will be executed in"
          }
      },
      "tags": [],
      "description": "Action which periodically prints to stdout and stderr. Useful for testing action output streaming.",
      "enabled": true,
      "entry_point": "print_to_stdout_and_stderr.sh",
      "notify": {},
      "uid": "action:examples:local_script_runner_print_to_stdout_and_stderr",
      "pack": "examples",
      "ref": "examples.local_script_runner_print_to_stdout_and_stderr",
      "id": "5b87f95f0a8b8a0be767694f",
      "runner_type": "local-shell-script"
  },
  {
      "name": "mistral-ask-basic",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A basic Mistral workflow illustrating the use of Inquiries",
      "enabled": true,
      "entry_point": "workflows/mistral-ask-basic.yaml",
      "notify": {},
      "uid": "action:examples:mistral-ask-basic",
      "pack": "examples",
      "ref": "examples.mistral-ask-basic",
      "id": "5b87f95f0a8b8a0be7676950",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-ask-parent",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Workflow for demonstrating \"ask\" functionality\n",
      "enabled": true,
      "entry_point": "workflows/mistral-ask-parent.yaml",
      "notify": {},
      "uid": "action:examples:mistral-ask-parent",
      "pack": "examples",
      "ref": "examples.mistral-ask-parent",
      "id": "5b87f95f0a8b8a0be7676951",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-basic",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "timeout": {
              "default": 60,
              "type": "integer"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "cmd": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Run a local linux command",
      "enabled": true,
      "entry_point": "workflows/mistral-basic.yaml",
      "notify": {},
      "uid": "action:examples:mistral-basic",
      "pack": "examples",
      "ref": "examples.mistral-basic",
      "id": "5b87f95f0a8b8a0be7676953",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-basic-two-tasks-with-notifications",
      "parameters": {
          "skip_notify": {
              "default": [
                  "task2"
              ],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Run mistral workflow with two tasks.",
      "enabled": true,
      "entry_point": "workflows/mistral-basic-two-tasks-with-notifications.yaml",
      "notify": {
          "on-complete": {
              "routes": [
                  "slack"
              ],
              "message": "@channel: Action succeeded."
          }
      },
      "uid": "action:examples:mistral-basic-two-tasks-with-notifications",
      "pack": "examples",
      "ref": "examples.mistral-basic-two-tasks-with-notifications",
      "id": "5b87f95f0a8b8a0be7676952",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-branching",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "which": {
              "required": true,
              "type": "string",
              "enum": [
                  "a",
                  "b",
                  "c"
              ]
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Demonstrate how to use condition to select branch of execution.",
      "enabled": true,
      "entry_point": "workflows/mistral-branching.yaml",
      "notify": {},
      "uid": "action:examples:mistral-branching",
      "pack": "examples",
      "ref": "examples.mistral-branching",
      "id": "5b87f95f0a8b8a0be7676954",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-env-var",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Example to return workflow's environment variable",
      "enabled": true,
      "entry_point": "workflows/mistral-env-var.yaml",
      "notify": {},
      "uid": "action:examples:mistral-env-var",
      "pack": "examples",
      "ref": "examples.mistral-env-var",
      "id": "5b87f95f0a8b8a0be7676955",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-error-bad-action",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow for testing error handling if action does not exist.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-error-bad-action.yaml",
      "notify": {},
      "uid": "action:examples:mistral-error-bad-action",
      "pack": "examples",
      "ref": "examples.mistral-error-bad-action",
      "id": "5b87f95f0a8b8a0be7676956",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-error-bad-task-transition",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow used to test bad task transition statement.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-error-bad-task-transition.yaml",
      "notify": {},
      "uid": "action:examples:mistral-error-bad-task-transition",
      "pack": "examples",
      "ref": "examples.mistral-error-bad-task-transition",
      "id": "5b87f95f0a8b8a0be7676957",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-error-bad-wf-arg",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "examples.mistral-error-bad-wf-arg.wf1",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "A sample workflow for testing bad input passed to subworkflow.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-error-bad-wf-arg.yaml",
      "notify": {},
      "uid": "action:examples:mistral-error-bad-wf-arg",
      "pack": "examples",
      "ref": "examples.mistral-error-bad-wf-arg",
      "id": "5b87f95f0a8b8a0be7676958",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-error-bad-with-items",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow for testing bad input to with-items statement.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-error-bad-with-items.yaml",
      "notify": {},
      "uid": "action:examples:mistral-error-bad-with-items",
      "pack": "examples",
      "ref": "examples.mistral-error-bad-with-items",
      "id": "5b87f95f0a8b8a0be7676959",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-handle-error",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "cmd": {
              "default": "foobar",
              "type": "string",
              "immutable": true
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          }
      },
      "tags": [],
      "description": "Workflow example for error handling.",
      "enabled": true,
      "entry_point": "workflows/mistral-handle-error.yaml",
      "notify": {},
      "uid": "action:examples:mistral-handle-error",
      "pack": "examples",
      "ref": "examples.mistral-handle-error",
      "id": "5b87f95f0a8b8a0be767695b",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-handle-error-task-default",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "cmd": {
              "default": "foobar",
              "type": "string",
              "immutable": true
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          }
      },
      "tags": [],
      "description": "Workflow example for error handling.",
      "enabled": true,
      "entry_point": "workflows/mistral-handle-error-task-default.yaml",
      "notify": {},
      "uid": "action:examples:mistral-handle-error-task-default",
      "pack": "examples",
      "ref": "examples.mistral-handle-error-task-default",
      "id": "5b87f95f0a8b8a0be767695a",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-handle-retry",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "examples.mistral-handle-retry.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Workflow example for error, rollback, and retry.",
      "enabled": true,
      "entry_point": "workflows/mistral-handle-retry.yaml",
      "notify": {},
      "uid": "action:examples:mistral-handle-retry",
      "pack": "examples",
      "ref": "examples.mistral-handle-retry",
      "id": "5b87f95f0a8b8a0be767695c",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-jinja-branching",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "which": {
              "required": true,
              "type": "string",
              "enum": [
                  "a",
                  "b",
                  "c"
              ]
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Demonstrate how to use condition to select branch of execution.",
      "enabled": true,
      "entry_point": "workflows/mistral-jinja-branching.yaml",
      "notify": {},
      "uid": "action:examples:mistral-jinja-branching",
      "pack": "examples",
      "ref": "examples.mistral-jinja-branching",
      "id": "5b87f95f0a8b8a0be767695d",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-jinja-env-var",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Example to return workflow's environment variable",
      "enabled": true,
      "entry_point": "workflows/mistral-jinja-env-var.yaml",
      "notify": {},
      "uid": "action:examples:mistral-jinja-env-var",
      "pack": "examples",
      "ref": "examples.mistral-jinja-env-var",
      "id": "5b87f95f0a8b8a0be767695e",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-jinja-repeat-with-items",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cmds": {
              "minItems": 1,
              "items": {
                  "type": "string"
              },
              "type": "array"
          }
      },
      "tags": [],
      "description": "Run several linux commands in a single task.",
      "enabled": true,
      "entry_point": "workflows/mistral-jinja-repeat-with-items.yaml",
      "notify": {},
      "uid": "action:examples:mistral-jinja-repeat-with-items",
      "pack": "examples",
      "ref": "examples.mistral-jinja-repeat-with-items",
      "id": "5b87f95f0a8b8a0be767695f",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-jinja-st2kv-system-scope",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow that accesses st2kv via jinja to get a system scope kvp from st2.\n",
      "enabled": true,
      "entry_point": "workflows/mistral-jinja-st2kv-system-scope.yaml",
      "notify": {},
      "uid": "action:examples:mistral-jinja-st2kv-system-scope",
      "pack": "examples",
      "ref": "examples.mistral-jinja-st2kv-system-scope",
      "id": "5b87f9600a8b8a0be7676961",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-jinja-st2kv-system-scope-encrypted",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow that accesses st2kv via jinja to get an encrypted system scope kvp from st2.\n",
      "enabled": true,
      "entry_point": "workflows/mistral-jinja-st2kv-system-scope-encrypted.yaml",
      "notify": {},
      "uid": "action:examples:mistral-jinja-st2kv-system-scope-encrypted",
      "pack": "examples",
      "ref": "examples.mistral-jinja-st2kv-system-scope-encrypted",
      "id": "5b87f9600a8b8a0be7676960",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-jinja-workbook-complex",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "vm_name": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "default": "examples.mistral-jinja-workbook-complex.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "cpu_cores": {
              "default": 1,
              "type": "integer"
          },
          "memory_mb": {
              "default": 1024,
              "type": "integer"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Run a series of simulated actions.",
      "enabled": true,
      "entry_point": "workflows/mistral-jinja-workbook-complex.yaml",
      "notify": {},
      "uid": "action:examples:mistral-jinja-workbook-complex",
      "pack": "examples",
      "ref": "examples.mistral-jinja-workbook-complex",
      "id": "5b87f9600a8b8a0be7676962",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-join",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Demonstrate how to join multiple parallel branches.",
      "enabled": true,
      "entry_point": "workflows/mistral-join.yaml",
      "notify": {},
      "uid": "action:examples:mistral-join",
      "pack": "examples",
      "ref": "examples.mistral-join",
      "id": "5b87f9600a8b8a0be7676963",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-repeat",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "count": {
              "default": 3,
              "type": "integer"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "cmd": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Repeat a local linux command for given number of times.",
      "enabled": true,
      "entry_point": "workflows/mistral-repeat.yaml",
      "notify": {},
      "uid": "action:examples:mistral-repeat",
      "pack": "examples",
      "ref": "examples.mistral-repeat",
      "id": "5b87f9600a8b8a0be7676965",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-repeat-with-items",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cmds": {
              "minItems": 1,
              "items": {
                  "type": "string"
              },
              "type": "array"
          }
      },
      "tags": [],
      "description": "Run several linux commands in a single task.",
      "enabled": true,
      "entry_point": "workflows/mistral-repeat-with-items.yaml",
      "notify": {},
      "uid": "action:examples:mistral-repeat-with-items",
      "pack": "examples",
      "ref": "examples.mistral-repeat-with-items",
      "id": "5b87f9600a8b8a0be7676964",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-streaming-demo",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "count": {
              "default": 5,
              "required": true,
              "type": "integer"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "sleep_delay": {
              "default": 0.2,
              "required": true,
              "type": "number"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Action output streaming functionality demo for Mistral workflows.",
      "enabled": true,
      "entry_point": "workflows/mistral-streaming-demo.yaml",
      "notify": {},
      "uid": "action:examples:mistral-streaming-demo",
      "pack": "examples",
      "ref": "examples.mistral-streaming-demo",
      "id": "5b87f9600a8b8a0be7676966",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-cancel",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cancel feature.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-cancel.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-cancel",
      "pack": "examples",
      "ref": "examples.mistral-test-cancel",
      "id": "5b87f9600a8b8a0be7676969",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-cancel-subworkflow-action",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading cancel of subworkflow action.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-cancel-subworkflow-action.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-cancel-subworkflow-action",
      "pack": "examples",
      "ref": "examples.mistral-test-cancel-subworkflow-action",
      "id": "5b87f9600a8b8a0be7676967",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-cancel-subworkflow-chain",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading cancellation of subchain.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-cancel-subworkflow-chain.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-cancel-subworkflow-chain",
      "pack": "examples",
      "ref": "examples.mistral-test-cancel-subworkflow-chain",
      "id": "5b87f9600a8b8a0be7676968",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-from-json-string",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "input_str": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Example for using the custom filter \"from_json_string\"",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-from-json-string.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-from-json-string",
      "pack": "examples",
      "ref": "examples.mistral-test-func-from-json-string",
      "id": "5b87f9600a8b8a0be767696a",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-from-yaml-string",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "input_str": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Example for using the custom filter \"from_yaml_string\"",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-from-yaml-string.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-from-yaml-string",
      "pack": "examples",
      "ref": "examples.mistral-test-func-from-yaml-string",
      "id": "5b87f9600a8b8a0be767696b",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-json-escape",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "input_str": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Test json_escape custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-json-escape.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-json-escape",
      "pack": "examples",
      "ref": "examples.mistral-test-func-json-escape",
      "id": "5b87f9600a8b8a0be767696c",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-jsonpath-query",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "input_query": {
              "required": true,
              "type": "string"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "input_obj": {
              "required": true,
              "type": "object"
          }
      },
      "tags": [],
      "description": "Test jsonpath_query custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-jsonpath-query.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-jsonpath-query",
      "pack": "examples",
      "ref": "examples.mistral-test-func-jsonpath-query",
      "id": "5b87f9600a8b8a0be767696d",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-regex-match",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "regex_pattern": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "input_str": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Test regex_match custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-regex-match.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-regex-match",
      "pack": "examples",
      "ref": "examples.mistral-test-func-regex-match",
      "id": "5b87f9600a8b8a0be767696e",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-regex-replace",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "regex_pattern": {
              "required": true,
              "type": "string"
          },
          "replacement_str": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "input_str": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Test regex_replace custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-regex-replace.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-regex-replace",
      "pack": "examples",
      "ref": "examples.mistral-test-func-regex-replace",
      "id": "5b87f9600a8b8a0be767696f",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-regex-search",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "regex_pattern": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "input_str": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Test regex_search custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-regex-search.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-regex-search",
      "pack": "examples",
      "ref": "examples.mistral-test-func-regex-search",
      "id": "5b87f9600a8b8a0be7676970",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-regex-substring",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "regex_pattern": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "input_str": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Test regex_substring custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-regex-substring.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-regex-substring",
      "pack": "examples",
      "ref": "examples.mistral-test-func-regex-substring",
      "id": "5b87f9600a8b8a0be7676971",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-to-complex",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "input_obj": {
              "required": true,
              "type": "object"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          }
      },
      "tags": [],
      "description": "Example for using the custom filter \"to_complex\"",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-to-complex.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-to-complex",
      "pack": "examples",
      "ref": "examples.mistral-test-func-to-complex",
      "id": "5b87f9600a8b8a0be7676972",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-to-human-time-from-seconds",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "seconds": {
              "required": true,
              "type": "integer"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Test to_human_time_from_seconds custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-to-human-time-from-seconds.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-to-human-time-from-seconds",
      "pack": "examples",
      "ref": "examples.mistral-test-func-to-human-time-from-seconds",
      "id": "5b87f9600a8b8a0be7676973",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-to-json-string",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "input_obj": {
              "required": true,
              "type": "object"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          }
      },
      "tags": [],
      "description": "Example for using the custom filter \"to_json_string\"",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-to-json-string.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-to-json-string",
      "pack": "examples",
      "ref": "examples.mistral-test-func-to-json-string",
      "id": "5b87f9600a8b8a0be7676974",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-to-yaml-string",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "input_obj": {
              "required": true,
              "type": "object"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          }
      },
      "tags": [],
      "description": "Example for using the custom filter \"to_yaml_string\"",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-to-yaml-string.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-to-yaml-string",
      "pack": "examples",
      "ref": "examples.mistral-test-func-to-yaml-string",
      "id": "5b87f9600a8b8a0be7676975",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-use-none",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "input_str": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Example for using the custom filter \"use_none\"",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-use-none.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-use-none",
      "pack": "examples",
      "ref": "examples.mistral-test-func-use-none",
      "id": "5b87f9600a8b8a0be7676976",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-bump-major",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "version": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Test version_bump_major custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-bump-major.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-bump-major",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-bump-major",
      "id": "5b87f9600a8b8a0be7676977",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-bump-minor",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "version": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Test version_bump_minor custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-bump-minor.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-bump-minor",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-bump-minor",
      "id": "5b87f9600a8b8a0be7676978",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-bump-patch",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "version": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Test version_bump_patch custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-bump-patch.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-bump-patch",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-bump-patch",
      "id": "5b87f9600a8b8a0be7676979",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-compare",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "version_a": {
              "required": true,
              "type": "string"
          },
          "version_b": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Test version_compare custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-compare.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-compare",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-compare",
      "id": "5b87f9600a8b8a0be767697a",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-equal",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "version_a": {
              "required": true,
              "type": "string"
          },
          "version_b": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Test version_equal custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-equal.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-equal",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-equal",
      "id": "5b87f9600a8b8a0be767697b",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-less-than",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "version_a": {
              "required": true,
              "type": "string"
          },
          "version_b": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Test version_less_than custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-less-than.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-less-than",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-less-than",
      "id": "5b87f9600a8b8a0be767697c",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-match",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "version_a": {
              "required": true,
              "type": "string"
          },
          "version_b": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Test version_match custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-match.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-match",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-match",
      "id": "5b87f9600a8b8a0be767697d",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-more-than",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "version_a": {
              "required": true,
              "type": "string"
          },
          "version_b": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Test version_more_than custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-more-than.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-more-than",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-more-than",
      "id": "5b87f9600a8b8a0be767697e",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-func-version-strip-patch",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "version": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Test version_strip_patch custom filter in mistral",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-func-version-strip-patch.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-func-version-strip-patch",
      "pack": "examples",
      "ref": "examples.mistral-test-func-version-strip-patch",
      "id": "5b87f9600a8b8a0be767697f",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-jinja-bad-expr",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A basic workflow for testing Jinja evaluation error.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-jinja-bad-expr.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-jinja-bad-expr",
      "pack": "examples",
      "ref": "examples.mistral-test-jinja-bad-expr",
      "id": "5b87f9610a8b8a0be7676980",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-jinja-bad-publish",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A basic workflow for testing Jinja evaluation error.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-jinja-bad-publish.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-jinja-bad-publish",
      "pack": "examples",
      "ref": "examples.mistral-test-jinja-bad-publish",
      "id": "5b87f9610a8b8a0be7676981",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-jinja-bad-subworkflow-input",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "examples.mistral-test-jinja-bad-subworkflow-input.wf1",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "A sample workflow for testing bad input passed to subworkflow.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-jinja-bad-subworkflow-input.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-jinja-bad-subworkflow-input",
      "pack": "examples",
      "ref": "examples.mistral-test-jinja-bad-subworkflow-input",
      "id": "5b87f9610a8b8a0be7676982",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-jinja-bad-task-transition",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow used to test bad task transition statement.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-jinja-bad-task-transition.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-jinja-bad-task-transition",
      "pack": "examples",
      "ref": "examples.mistral-test-jinja-bad-task-transition",
      "id": "5b87f9610a8b8a0be7676983",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-jinja-bad-with-items",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow for testing bad input to with-items statement.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-jinja-bad-with-items.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-jinja-bad-with-items",
      "pack": "examples",
      "ref": "examples.mistral-test-jinja-bad-with-items",
      "id": "5b87f9610a8b8a0be7676984",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-pause-before-task",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow used to test auto pause specified in the task.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-pause-before-task.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-pause-before-task",
      "pack": "examples",
      "ref": "examples.mistral-test-pause-before-task",
      "id": "5b87f9610a8b8a0be7676987",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-pause-before-task-subworkflow-action",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading pause and resume of subworkflow action.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-pause-before-task-subworkflow-action.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-pause-before-task-subworkflow-action",
      "pack": "examples",
      "ref": "examples.mistral-test-pause-before-task-subworkflow-action",
      "id": "5b87f9610a8b8a0be7676985",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-pause-before-task-subworkflow-workbook",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "message": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "examples.mistral-test-pause-before-task-subworkflow-workbook.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "A sample workbook used to test the cascading pause and resume of subworkflow.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-pause-before-task-subworkflow-workbook.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-pause-before-task-subworkflow-workbook",
      "pack": "examples",
      "ref": "examples.mistral-test-pause-before-task-subworkflow-workbook",
      "id": "5b87f9610a8b8a0be7676986",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-pause-resume",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the pause and resume feature.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-pause-resume.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-pause-resume",
      "pack": "examples",
      "ref": "examples.mistral-test-pause-resume",
      "id": "5b87f9610a8b8a0be767698b",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-pause-resume-subworkflow-action",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading pause and resume of subworkflow action.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-pause-resume-subworkflow-action.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-pause-resume-subworkflow-action",
      "pack": "examples",
      "ref": "examples.mistral-test-pause-resume-subworkflow-action",
      "id": "5b87f9610a8b8a0be7676988",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-pause-resume-subworkflow-chain",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading pause and resume of subchain.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-pause-resume-subworkflow-chain.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-pause-resume-subworkflow-chain",
      "pack": "examples",
      "ref": "examples.mistral-test-pause-resume-subworkflow-chain",
      "id": "5b87f9610a8b8a0be7676989",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-pause-resume-subworkflow-workbook",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "default": "examples.mistral-test-pause-resume-subworkflow-workbook.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workbook used to test the cascading pause and resume of subworkflow.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-pause-resume-subworkflow-workbook.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-pause-resume-subworkflow-workbook",
      "pack": "examples",
      "ref": "examples.mistral-test-pause-resume-subworkflow-workbook",
      "id": "5b87f9610a8b8a0be767698a",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-rerun",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the rerun feature.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-rerun.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-rerun",
      "pack": "examples",
      "ref": "examples.mistral-test-rerun",
      "id": "5b87f9610a8b8a0be767698f",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-rerun-subflow",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "examples.mistral-test-rerun-subflow.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the rerun feature.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-rerun-subflow.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-rerun-subflow",
      "pack": "examples",
      "ref": "examples.mistral-test-rerun-subflow",
      "id": "5b87f9610a8b8a0be767698d",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-rerun-subflow-with-items",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "examples.mistral-test-rerun-subflow-with-items.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the rerun feature.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-rerun-subflow-with-items.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-rerun-subflow-with-items",
      "pack": "examples",
      "ref": "examples.mistral-test-rerun-subflow-with-items",
      "id": "5b87f9610a8b8a0be767698c",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-rerun-with-items",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the rerun feature.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-rerun-with-items.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-rerun-with-items",
      "pack": "examples",
      "ref": "examples.mistral-test-rerun-with-items",
      "id": "5b87f9610a8b8a0be767698e",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-yaql-bad-expr",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A basic workflow for testing YAQL evaluation error.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-yaql-bad-expr.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-yaql-bad-expr",
      "pack": "examples",
      "ref": "examples.mistral-test-yaql-bad-expr",
      "id": "5b87f9610a8b8a0be7676990",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-yaql-bad-publish",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A basic workflow for testing YAQL evaluation error.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-yaql-bad-publish.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-yaql-bad-publish",
      "pack": "examples",
      "ref": "examples.mistral-test-yaql-bad-publish",
      "id": "5b87f9610a8b8a0be7676991",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-yaql-bad-subworkflow-input",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "examples.mistral-test-yaql-bad-subworkflow-input.wf1",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "A sample workflow for testing bad input passed to subworkflow.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-yaql-bad-subworkflow-input.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-yaql-bad-subworkflow-input",
      "pack": "examples",
      "ref": "examples.mistral-test-yaql-bad-subworkflow-input",
      "id": "5b87f9610a8b8a0be7676992",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-yaql-bad-task-transition",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow used to test bad task transition statement.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-yaql-bad-task-transition.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-yaql-bad-task-transition",
      "pack": "examples",
      "ref": "examples.mistral-test-yaql-bad-task-transition",
      "id": "5b87f9610a8b8a0be7676993",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-test-yaql-bad-with-items",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow for testing bad input to with-items statement.",
      "enabled": true,
      "entry_point": "workflows/tests/mistral-test-yaql-bad-with-items.yaml",
      "notify": {},
      "uid": "action:examples:mistral-test-yaql-bad-with-items",
      "pack": "examples",
      "ref": "examples.mistral-test-yaql-bad-with-items",
      "id": "5b87f9610a8b8a0be7676994",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-with-items-concurrency",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "count": {
              "default": 6,
              "type": "integer"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "cmd": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Repeat a local linux command for given number of times.",
      "enabled": true,
      "entry_point": "workflows/mistral-with-items-concurrency.yaml",
      "notify": {},
      "uid": "action:examples:mistral-with-items-concurrency",
      "pack": "examples",
      "ref": "examples.mistral-with-items-concurrency",
      "id": "5b87f9610a8b8a0be7676995",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-workbook-basic",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "cmd": {
              "required": true,
              "type": "string"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          }
      },
      "tags": [],
      "description": "Run a local linux command",
      "enabled": true,
      "entry_point": "workflows/mistral-workbook-basic.yaml",
      "notify": {},
      "uid": "action:examples:mistral-workbook-basic",
      "pack": "examples",
      "ref": "examples.mistral-workbook-basic",
      "id": "5b87f9610a8b8a0be7676996",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-workbook-complex",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "vm_name": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "default": "examples.mistral-workbook-complex.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "cpu_cores": {
              "default": 1,
              "type": "integer"
          },
          "memory_mb": {
              "default": 1024,
              "type": "integer"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Run a series of simulated actions.",
      "enabled": true,
      "entry_point": "workflows/mistral-workbook-complex.yaml",
      "notify": {},
      "uid": "action:examples:mistral-workbook-complex",
      "pack": "examples",
      "ref": "examples.mistral-workbook-complex",
      "id": "5b87f9610a8b8a0be7676997",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-workbook-multiple-subflows",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "examples.mistral-workbook-multiple-subflows.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run a series of subflows to illustrate some uncommon cases.",
      "enabled": true,
      "entry_point": "workflows/mistral-workbook-multiple-subflows.yaml",
      "notify": {},
      "uid": "action:examples:mistral-workbook-multiple-subflows",
      "pack": "examples",
      "ref": "examples.mistral-workbook-multiple-subflows",
      "id": "5b87f9610a8b8a0be7676998",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-workbook-subflows",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "adjective": {
              "default": "awesome",
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "subject": {
              "default": "StackStorm",
              "type": "string"
          }
      },
      "tags": [],
      "description": "Test the output for a series of mistral-basic workflows.",
      "enabled": true,
      "entry_point": "workflows/mistral-workbook-subflows.yaml",
      "notify": {},
      "uid": "action:examples:mistral-workbook-subflows",
      "pack": "examples",
      "ref": "examples.mistral-workbook-subflows",
      "id": "5b87f9610a8b8a0be7676999",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-yaql-st2kv-system-scope",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow that uses the YAQL function st2kv to get a system scope kvp from st2.\n",
      "enabled": true,
      "entry_point": "workflows/mistral-yaql-st2kv-system-scope.yaml",
      "notify": {},
      "uid": "action:examples:mistral-yaql-st2kv-system-scope",
      "pack": "examples",
      "ref": "examples.mistral-yaql-st2kv-system-scope",
      "id": "5b87f9610a8b8a0be767699a",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral-yaql-st2kv-user-scope",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "A sample workflow that uses the YAQL function st2kv to get a user scope kvp from st2.\n",
      "enabled": true,
      "entry_point": "workflows/mistral-yaql-st2kv-user-scope.yaml",
      "notify": {},
      "uid": "action:examples:mistral-yaql-st2kv-user-scope",
      "pack": "examples",
      "ref": "examples.mistral-yaql-st2kv-user-scope",
      "id": "5b87f9610a8b8a0be767699b",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral_examples",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Run selected Mistral examples",
      "enabled": true,
      "entry_point": "chains/mistral_examples.yaml",
      "notify": {},
      "uid": "action:examples:mistral_examples",
      "pack": "examples",
      "ref": "examples.mistral_examples",
      "id": "5b87f9610a8b8a0be767699c",
      "runner_type": "action-chain"
  },
  {
      "name": "object_return",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Just an example action that returns an object.",
      "enabled": true,
      "entry_point": "pythonactions/object_return.py",
      "notify": {},
      "uid": "action:examples:object_return",
      "pack": "examples",
      "ref": "examples.object_return",
      "id": "5b87f9610a8b8a0be767699d",
      "runner_type": "python-script"
  },
  {
      "name": "orquesta-ask-basic",
      "parameters": {},
      "tags": [],
      "description": "A basic workflow that demonstrates inquiry.",
      "enabled": true,
      "entry_point": "workflows/orquesta-ask-basic.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-ask-basic",
      "pack": "examples",
      "ref": "examples.orquesta-ask-basic",
      "id": "5b87f9610a8b8a0be767699e",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-ask-consecutive",
      "parameters": {},
      "tags": [],
      "description": "A basic workflow that demonstrates consecutive inquiries.",
      "enabled": true,
      "entry_point": "workflows/orquesta-ask-consecutive.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-ask-consecutive",
      "pack": "examples",
      "ref": "examples.orquesta-ask-consecutive",
      "id": "5b87f9610a8b8a0be767699f",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-ask-nested",
      "parameters": {},
      "tags": [],
      "description": "A basic workflow that demonstrates inquiry nested in a subworkflow.",
      "enabled": true,
      "entry_point": "workflows/orquesta-ask-nested.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-ask-nested",
      "pack": "examples",
      "ref": "examples.orquesta-ask-nested",
      "id": "5b87f9610a8b8a0be76769a0",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-ask-parallel",
      "parameters": {},
      "tags": [],
      "description": "A basic workflow that demonstrates parallel inquiries.",
      "enabled": true,
      "entry_point": "workflows/orquesta-ask-parallel.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-ask-parallel",
      "pack": "examples",
      "ref": "examples.orquesta-ask-parallel",
      "id": "5b87f9610a8b8a0be76769a1",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-basic",
      "parameters": {
          "cmd": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 60,
              "type": "integer"
          }
      },
      "tags": [],
      "description": "Run a local linux command",
      "enabled": true,
      "entry_point": "workflows/orquesta-basic.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-basic",
      "pack": "examples",
      "ref": "examples.orquesta-basic",
      "id": "5b87f9610a8b8a0be76769a2",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-data-flow",
      "parameters": {
          "a1": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic workflow to demonstrate data flow options.",
      "enabled": true,
      "entry_point": "workflows/orquesta-data-flow.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-data-flow",
      "pack": "examples",
      "ref": "examples.orquesta-data-flow",
      "id": "5b87f9610a8b8a0be76769a3",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-examples",
      "parameters": {},
      "tags": [],
      "description": "Run a workflow that runs other workflows. Orcheseption.",
      "enabled": true,
      "entry_point": "workflows/orquesta-examples.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-examples",
      "pack": "examples",
      "ref": "examples.orquesta-examples",
      "id": "5b87f9610a8b8a0be76769a4",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-fail-input-rendering",
      "parameters": {},
      "tags": [],
      "description": "A basic workflow with error while evaluating input.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-fail-input-rendering.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-fail-input-rendering",
      "pack": "examples",
      "ref": "examples.orquesta-fail-input-rendering",
      "id": "5b87f9610a8b8a0be76769a5",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-fail-inspection",
      "parameters": {},
      "tags": [],
      "description": "A basic sequential workflow with syntax errors.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-fail-inspection.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-fail-inspection",
      "pack": "examples",
      "ref": "examples.orquesta-fail-inspection",
      "id": "5b87f9610a8b8a0be76769a6",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-fail-output-rendering",
      "parameters": {
          "name": {
              "default": "Lakshmi",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic workflow with error while evaluating output.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-fail-output-rendering.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-fail-output-rendering",
      "pack": "examples",
      "ref": "examples.orquesta-fail-output-rendering",
      "id": "5b87f9610a8b8a0be76769a7",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-fail-start-task",
      "parameters": {
          "name": {
              "default": "Lakshmi",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic workflow with error in the rendering of the starting task.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-fail-start-task.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-fail-start-task",
      "pack": "examples",
      "ref": "examples.orquesta-fail-start-task",
      "id": "5b87f9610a8b8a0be76769a8",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-fail-task-publish",
      "parameters": {
          "name": {
              "default": "Lakshmi",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic workflow that fails on publish during task transition.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-fail-task-publish.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-fail-task-publish",
      "pack": "examples",
      "ref": "examples.orquesta-fail-task-publish",
      "id": "5b87f9610a8b8a0be76769a9",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-fail-task-transition",
      "parameters": {
          "name": {
              "default": "Lakshmi",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic workflow with error while evaluating task transition.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-fail-task-transition.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-fail-task-transition",
      "pack": "examples",
      "ref": "examples.orquesta-fail-task-transition",
      "id": "5b87f9620a8b8a0be76769aa",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-fail-vars-rendering",
      "parameters": {
          "name": {
              "default": "Lakshmi",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic workflow with error while evaluating vars.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-fail-vars-rendering.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-fail-vars-rendering",
      "pack": "examples",
      "ref": "examples.orquesta-fail-vars-rendering",
      "id": "5b87f9620a8b8a0be76769ab",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-join",
      "parameters": {},
      "tags": [],
      "description": "A basic workflow that demonstrate branching and join.",
      "enabled": true,
      "entry_point": "workflows/orquesta-join.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-join",
      "pack": "examples",
      "ref": "examples.orquesta-join",
      "id": "5b87f9620a8b8a0be76769ac",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-mock-create-vm",
      "parameters": {
          "memory_mb": {
              "default": 1024,
              "type": "integer"
          },
          "vm_name": {
              "required": true,
              "type": "string"
          },
          "cpu_cores": {
              "default": 1,
              "type": "integer"
          }
      },
      "tags": [],
      "description": "A sample workflow that demonstrates forks and join.",
      "enabled": true,
      "entry_point": "workflows/orquesta-mock-create-vm.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-mock-create-vm",
      "pack": "examples",
      "ref": "examples.orquesta-mock-create-vm",
      "id": "5b87f9620a8b8a0be76769ad",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-rollback-retry",
      "parameters": {},
      "tags": [],
      "description": "A workflow demonstrating how to rollback and retry.",
      "enabled": true,
      "entry_point": "workflows/orquesta-rollback-retry.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-rollback-retry",
      "pack": "examples",
      "ref": "examples.orquesta-rollback-retry",
      "id": "5b87f9620a8b8a0be76769ae",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-sequential",
      "parameters": {
          "name": {
              "default": "Lakshmi",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic sequential workflow.",
      "enabled": true,
      "entry_point": "workflows/orquesta-sequential.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-sequential",
      "pack": "examples",
      "ref": "examples.orquesta-sequential",
      "id": "5b87f9620a8b8a0be76769af",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-st2-ctx",
      "parameters": {},
      "tags": [],
      "description": "A sample workflow demonstrating use of st2 runtime context.",
      "enabled": true,
      "entry_point": "workflows/orquesta-st2-ctx.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-st2-ctx",
      "pack": "examples",
      "ref": "examples.orquesta-st2-ctx",
      "id": "5b87f9620a8b8a0be76769b0",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-st2kv",
      "parameters": {
          "key_name": {
              "required": true,
              "type": "string"
          },
          "decrypt": {
              "default": false,
              "required": false,
              "type": "boolean"
          }
      },
      "tags": [],
      "description": "A sample workflow that demonstrates st2kv usage",
      "enabled": true,
      "entry_point": "workflows/orquesta-st2kv.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-st2kv",
      "pack": "examples",
      "ref": "examples.orquesta-st2kv",
      "id": "5b87f9620a8b8a0be76769b1",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-subworkflow",
      "parameters": {},
      "tags": [],
      "description": "A basic workflow that runs another subworkflow.",
      "enabled": true,
      "entry_point": "workflows/orquesta-subworkflow.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-subworkflow",
      "pack": "examples",
      "ref": "examples.orquesta-subworkflow",
      "id": "5b87f9620a8b8a0be76769b2",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-test-action-less-tasks",
      "parameters": {
          "name": {
              "default": "Lakshmi",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A basic sequential workflow.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-test-action-less-tasks.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-test-action-less-tasks",
      "pack": "examples",
      "ref": "examples.orquesta-test-action-less-tasks",
      "id": "5b87f9620a8b8a0be76769b3",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-test-cancel",
      "parameters": {
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cancel feature.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-test-cancel.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-test-cancel",
      "pack": "examples",
      "ref": "examples.orquesta-test-cancel",
      "id": "5b87f9620a8b8a0be76769b6",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-test-cancel-subworkflow",
      "parameters": {
          "tempfile": {
              "required": true,
              "type": "string"
          },
          "message": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading cancel of subworkflow.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-test-cancel-subworkflow.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-test-cancel-subworkflow",
      "pack": "examples",
      "ref": "examples.orquesta-test-cancel-subworkflow",
      "id": "5b87f9620a8b8a0be76769b4",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-test-cancel-subworkflows",
      "parameters": {
          "file2": {
              "required": true,
              "type": "string"
          },
          "file1": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading cancel of multiple subworkflows.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-test-cancel-subworkflows.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-test-cancel-subworkflows",
      "pack": "examples",
      "ref": "examples.orquesta-test-cancel-subworkflows",
      "id": "5b87f9620a8b8a0be76769b5",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-test-pause",
      "parameters": {
          "tempfile": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the pause feature.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-test-pause.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-test-pause",
      "pack": "examples",
      "ref": "examples.orquesta-test-pause",
      "id": "5b87f9620a8b8a0be76769b9",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-test-pause-subworkflow",
      "parameters": {
          "tempfile": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading pause of subworkflow.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-test-pause-subworkflow.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-test-pause-subworkflow",
      "pack": "examples",
      "ref": "examples.orquesta-test-pause-subworkflow",
      "id": "5b87f9620a8b8a0be76769b7",
      "runner_type": "orquesta"
  },
  {
      "name": "orquesta-test-pause-subworkflows",
      "parameters": {
          "file2": {
              "required": true,
              "type": "string"
          },
          "file1": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "A sample workflow used to test the cascading pause of multiple subworkflows.",
      "enabled": true,
      "entry_point": "workflows/tests/orquesta-test-pause-subworkflows.yaml",
      "notify": {},
      "uid": "action:examples:orquesta-test-pause-subworkflows",
      "pack": "examples",
      "ref": "examples.orquesta-test-pause-subworkflows",
      "id": "5b87f9620a8b8a0be76769b8",
      "runner_type": "orquesta"
  },
  {
      "name": "ping",
      "parameters": {
          "count": {
              "type": "integer"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "cmd": {
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the host."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "A ping host action.",
      "enabled": true,
      "entry_point": "bash_ping/bash_ping.sh",
      "notify": {},
      "uid": "action:examples:ping",
      "pack": "examples",
      "ref": "examples.ping",
      "id": "5b87f9620a8b8a0be76769ba",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "print_config",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Action which prints config values.",
      "enabled": true,
      "entry_point": "print_config.py",
      "notify": {},
      "uid": "action:examples:print_config",
      "pack": "examples",
      "ref": "examples.print_config",
      "id": "5b87f9620a8b8a0be76769bb",
      "runner_type": "python-script"
  },
  {
      "name": "publish_data",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "system_info_path": {
              "default": "/system-info",
              "required": true,
              "type": "string",
              "description": "Path where system info is available"
          }
      },
      "tags": [],
      "description": "Example showing use of variables and data publishing in ActinoChain",
      "enabled": true,
      "entry_point": "chains/publish_data.yaml",
      "notify": {},
      "uid": "action:examples:publish_data",
      "pack": "examples",
      "ref": "examples.publish_data",
      "id": "5b87f9620a8b8a0be76769bc",
      "runner_type": "action-chain"
  },
  {
      "name": "python_runner_print_python_environment",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Action which prints Python action environment information.",
      "enabled": true,
      "entry_point": "pythonactions/print_python_environment.py",
      "notify": {},
      "uid": "action:examples:python_runner_print_python_environment",
      "pack": "examples",
      "ref": "examples.python_runner_print_python_environment",
      "id": "5b87f9620a8b8a0be76769bd",
      "runner_type": "run-python"
  },
  {
      "name": "python_runner_print_python_version",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Action which prints version of Python executable which is used.",
      "enabled": true,
      "entry_point": "pythonactions/print_python_version.py",
      "notify": {},
      "uid": "action:examples:python_runner_print_python_version",
      "pack": "examples",
      "ref": "examples.python_runner_print_python_version",
      "id": "5b87f9620a8b8a0be76769be",
      "runner_type": "run-python"
  },
  {
      "name": "python_runner_print_to_stdout_and_stderr",
      "parameters": {
          "count": {
              "default": 100,
              "required": true,
              "type": "integer",
              "description": "Number of repetitions."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "sleep_delay": {
              "default": 0.5,
              "required": true,
              "type": "number",
              "description": "Sleep delay between each repetition."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Action which periodically prints to stdout and stderr. Useful for testing action output streaming.",
      "enabled": true,
      "entry_point": "print_to_stdout_and_stderr.py",
      "notify": {},
      "uid": "action:examples:python_runner_print_to_stdout_and_stderr",
      "pack": "examples",
      "ref": "examples.python_runner_print_to_stdout_and_stderr",
      "id": "5b87f9620a8b8a0be76769bf",
      "runner_type": "run-python"
  },
  {
      "name": "regex_jinja_filter",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow showing how to use jinja regex filters in st2.",
      "enabled": true,
      "entry_point": "chains/regex_jinja_filter.yaml",
      "notify": {},
      "uid": "action:examples:regex_jinja_filter",
      "pack": "examples",
      "ref": "examples.regex_jinja_filter",
      "id": "5b87f9620a8b8a0be76769c0",
      "runner_type": "action-chain"
  },
  {
      "name": "remote-fib",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "start": {
              "default": 1,
              "position": 0,
              "required": true,
              "type": "number",
              "description": "Start number for fibonacci series"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end": {
              "default": 100,
              "position": 1,
              "required": true,
              "type": "number",
              "description": "End number for fibonacci series"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Action that returns fibonacci numbers in a range.",
      "enabled": true,
      "entry_point": "pythonactions/fibonacci.py",
      "notify": {},
      "uid": "action:examples:remote-fib",
      "pack": "examples",
      "ref": "examples.remote-fib",
      "id": "5b87f9620a8b8a0be76769c1",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "remote-random-exit",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "count": {
              "type": "integer"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s)."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Action that returns a randomly generated exit code remotely.",
      "enabled": true,
      "entry_point": "bash_random/random2.sh",
      "notify": {},
      "uid": "action:examples:remote-random-exit",
      "pack": "examples",
      "ref": "examples.remote-random-exit",
      "id": "5b87f9620a8b8a0be76769c2",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "remote_command_runner_print_to_stdout_and_stderr",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "count": {
              "default": 100,
              "position": 1,
              "required": true,
              "type": "integer",
              "description": "Number of repetitions."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "i=0; while [ $i -lt {{ count }} ]; do j=$[$i+1]; if [ $(( $i % 2)) -eq 0 ]; then echo \"stderr line ${j}\" >&2; else echo \"stdout line ${j}\"; fi;\ni=$[$i+1];\nsleep {{ sleep_delay }}; done\n",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s)."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sleep_delay": {
              "default": 0.5,
              "position": 2,
              "required": true,
              "type": "number",
              "description": "Sleep delay between each repetition."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "default": "localhost",
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Action which periodically prints to stdout and stderr. Useful for testing action output streaming.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:examples:remote_command_runner_print_to_stdout_and_stderr",
      "pack": "examples",
      "ref": "examples.remote_command_runner_print_to_stdout_and_stderr",
      "id": "5b87f9620a8b8a0be76769c3",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "remote_script_runner_print_to_stdout_and_stderr",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "count": {
              "default": 100,
              "position": 1,
              "required": true,
              "type": "integer",
              "description": "Number of repetitions."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sleep_delay": {
              "default": 0.5,
              "position": 2,
              "required": true,
              "type": "number",
              "description": "Sleep delay between each repetition."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "hosts": {
              "default": "localhost",
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Action which periodically prints to stdout and stderr. Useful for testing action output streaming.",
      "enabled": true,
      "entry_point": "print_to_stdout_and_stderr.sh",
      "notify": {},
      "uid": "action:examples:remote_script_runner_print_to_stdout_and_stderr",
      "pack": "examples",
      "ref": "examples.remote_script_runner_print_to_stdout_and_stderr",
      "id": "5b87f9620a8b8a0be76769c4",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "time_jinja_filter",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow showing how to use jinja time filters in st2.",
      "enabled": true,
      "entry_point": "chains/time_jinja_filter.yaml",
      "notify": {},
      "uid": "action:examples:time_jinja_filter",
      "pack": "examples",
      "ref": "examples.time_jinja_filter",
      "id": "5b87f9620a8b8a0be76769c5",
      "runner_type": "action-chain"
  },
  {
      "name": "ubuntu_pkg_info",
      "parameters": {
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "pkgname": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Name of the package for which info is needed."
          }
      },
      "tags": [],
      "description": "This gets pkg info on ubuntu",
      "enabled": true,
      "entry_point": "ubuntu_pkg_info/ubuntu_pkg_info.py",
      "notify": {},
      "uid": "action:examples:ubuntu_pkg_info",
      "pack": "examples",
      "ref": "examples.ubuntu_pkg_info",
      "id": "5b87f9620a8b8a0be76769c6",
      "runner_type": "local-shell-script"
  },
  {
      "name": "version_jinja_filter",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow showing how to use jinja version filters in st2.",
      "enabled": true,
      "entry_point": "chains/version_jinja_filter.yaml",
      "notify": {},
      "uid": "action:examples:version_jinja_filter",
      "pack": "examples",
      "ref": "examples.version_jinja_filter",
      "id": "5b87f9620a8b8a0be76769c7",
      "runner_type": "action-chain"
  },
  {
      "name": "weather",
      "parameters": {
          "username": {
              "type": "string",
              "description": "Username required by basic authentication."
          },
          "cookies": {
              "type": "object",
              "description": "Optional cookies to send with the request."
          },
          "zip": {
              "type": "string"
          },
          "headers": {
              "type": "object",
              "description": "HTTP headers for the request."
          },
          "url": {
              "default": "http://api.openweathermap.org/data/2.5/weather?q={{zip}}&units=imperial",
              "required": true,
              "type": "string",
              "description": "URL to the HTTP endpoint.",
              "immutable": true
          },
          "http_proxy": {
              "type": "string",
              "description": "URL of HTTP proxy to use (e.g. http://10.10.1.10:3128)."
          },
          "auth": {
              "type": "string"
          },
          "https_proxy": {
              "type": "string",
              "description": "URL of HTTPS proxy to use (e.g. http://10.10.1.10:3128)."
          },
          "params": {
              "type": "string"
          },
          "timeout": {
              "default": 60,
              "type": "integer"
          },
          "allow_redirects": {
              "default": false,
              "type": "boolean",
              "description": "Set to True if POST/PUT/DELETE redirect following is allowed."
          },
          "password": {
              "secret": true,
              "type": "string",
              "description": "Password required by basic authentication."
          },
          "method": {
              "default": "GET",
              "enum": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
              ],
              "type": "string",
              "immutable": true
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification."
          }
      },
      "tags": [],
      "description": "Look up weather via http://openweathermap.org",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:examples:weather",
      "pack": "examples",
      "ref": "examples.weather",
      "id": "5b87f9620a8b8a0be76769c8",
      "runner_type": "http-request"
  },
  {
      "name": "winrm_get_ipconfig",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username used to log-in."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Password used to log in."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command (e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "ipconfig /all",
              "type": "string",
              "description": "Arbitrary Command Prompt command to be executed on the remote host.",
              "immutable": true
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          },
          "kwarg_op": {
              "default": "-",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"-\" or \"/\"."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "A host where the command will be run"
          },
          "transport": {
              "default": "ntlm",
              "required": false,
              "type": "string",
              "description": "The type of transport that WinRM will use to communicate. See https://github.com/diyan/pywinrm#valid-transport-options",
              "enum": [
                  "basic",
                  "certificate",
                  "credssp",
                  "kerberos",
                  "ntlm",
                  "plaintext",
                  "ssl"
              ]
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "scheme": {
              "default": "https",
              "required": false,
              "type": "string",
              "description": "Scheme to use in the WinRM URL. If using scheme \"http\" port must be 5985"
          },
          "port": {
              "default": 5986,
              "required": false,
              "type": "integer",
              "description": "WinRM port to connect on. If using port 5985 scheme must be \"http\""
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification."
          }
      },
      "tags": [],
      "description": "Action that returns Windows host's IP config information.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:examples:winrm_get_ipconfig",
      "pack": "examples",
      "ref": "examples.winrm_get_ipconfig",
      "id": "5b87f9620a8b8a0be76769cb",
      "runner_type": "winrm-cmd"
  },
  {
      "name": "winrm_get_uptime",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username used to log-in."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Password used to log in."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command (e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          },
          "kwarg_op": {
              "default": "-",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"-\" or \"/\"."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "A host where the command will be run"
          },
          "transport": {
              "default": "ntlm",
              "required": false,
              "type": "string",
              "description": "The type of transport that WinRM will use to communicate. See https://github.com/diyan/pywinrm#valid-transport-options",
              "enum": [
                  "basic",
                  "certificate",
                  "credssp",
                  "kerberos",
                  "ntlm",
                  "plaintext",
                  "ssl"
              ]
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "scheme": {
              "default": "https",
              "required": false,
              "type": "string",
              "description": "Scheme to use in the WinRM URL. If using scheme \"http\" port must be 5985"
          },
          "port": {
              "default": 5986,
              "required": false,
              "type": "integer",
              "description": "WinRM port to connect on. If using port 5985 scheme must be \"http\""
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification."
          }
      },
      "tags": [],
      "description": "Action that returns Windows host's uptime using WinRM.",
      "enabled": true,
      "entry_point": "windows/get_uptime.ps1",
      "notify": {},
      "uid": "action:examples:winrm_get_uptime",
      "pack": "examples",
      "ref": "examples.winrm_get_uptime",
      "id": "5b87f9620a8b8a0be76769ca",
      "runner_type": "winrm-ps-script"
  },
  {
      "name": "winrm_powershell_env",
      "parameters": {
          "username": {
              "required": true,
              "type": "string",
              "description": "Username used to log-in."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Password used to log in."
          },
          "env": {
              "default": {
                  "{{ env_var_name }}": "This is a test"
              },
              "type": "object",
              "description": "Environment variables which will be available to the command (e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "Get-Item Env:{{ env_var_name }} | ConvertTo-Json -Depth 1 -Compress",
              "type": "string",
              "description": "Arbitrary PowerShell command to be executed on the remote host.",
              "immutable": true
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          },
          "kwarg_op": {
              "default": "-",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"-\" or \"/\"."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "A host where the command will be run"
          },
          "transport": {
              "default": "ntlm",
              "required": false,
              "type": "string",
              "description": "The type of transport that WinRM will use to communicate. See https://github.com/diyan/pywinrm#valid-transport-options",
              "enum": [
                  "basic",
                  "certificate",
                  "credssp",
                  "kerberos",
                  "ntlm",
                  "plaintext",
                  "ssl"
              ]
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "env_var_name": {
              "default": "ST2_WINRM_ENV_TEST",
              "type": "string"
          },
          "scheme": {
              "default": "https",
              "required": false,
              "type": "string",
              "description": "Scheme to use in the WinRM URL. If using scheme \"http\" port must be 5985"
          },
          "port": {
              "default": 5986,
              "required": false,
              "type": "integer",
              "description": "WinRM port to connect on. If using port 5985 scheme must be \"http\""
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification."
          }
      },
      "tags": [],
      "description": "Action that sets an environment variable then prints it out. This also demonstrates returning JSON data from PowerShell and being able to utilize it as an object via stdout.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:examples:winrm_powershell_env",
      "pack": "examples",
      "ref": "examples.winrm_powershell_env",
      "id": "5b87f9620a8b8a0be76769cc",
      "runner_type": "winrm-ps-cmd"
  },
  {
      "name": "yaml_string_to_object",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "yaml_str": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "Convert YAML str to object.",
      "enabled": true,
      "entry_point": "pythonactions/yaml_string_to_object.py",
      "notify": {},
      "uid": "action:examples:yaml_string_to_object",
      "pack": "examples",
      "ref": "examples.yaml_string_to_object",
      "id": "5b87f9620a8b8a0be76769cd",
      "runner_type": "python-script"
  },
  {
      "name": "datastore_test_action",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Simple python action to test datastore access.",
      "enabled": true,
      "entry_point": "pythonactions/datastore_test_action.py",
      "notify": {},
      "uid": "action:fixtures:datastore_test_action",
      "pack": "fixtures",
      "ref": "fixtures.datastore_test_action",
      "id": "5b87f9630a8b8a0be76769ce",
      "runner_type": "python-script"
  },
  {
      "name": "streamwriter",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "stream": {
              "required": true,
              "type": "string",
              "description": "Stream to write to (stdout or stderr)."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Simple python action to test output to different streams.",
      "enabled": true,
      "entry_point": "pythonactions/streamwriter.py",
      "notify": {},
      "uid": "action:fixtures:streamwriter",
      "pack": "fixtures",
      "ref": "fixtures.streamwriter",
      "id": "5b87f9630a8b8a0be76769d1",
      "runner_type": "python-script"
  },
  {
      "name": "streamwriter-script-local",
      "parameters": {
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "stream": {
              "required": true,
              "type": "string",
              "description": "Stream to write to (stdout or stderr)."
          },
          "int_arg": {
              "type": "number",
              "description": "Some int arg."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": false
          },
          "obj_arg": {
              "type": "object",
              "description": "Some object arg."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "str_arg": {
              "type": "string",
              "description": "Some string arg."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the script will be executed in"
          }
      },
      "tags": [],
      "description": "Simple script action to test output to different streams.",
      "enabled": true,
      "entry_point": "scripts/streamwriter-script.py",
      "notify": {},
      "uid": "action:fixtures:streamwriter-script-local",
      "pack": "fixtures",
      "ref": "fixtures.streamwriter-script-local",
      "id": "5b87f9630a8b8a0be76769cf",
      "runner_type": "local-shell-script"
  },
  {
      "name": "streamwriter-script-remote",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "stream": {
              "required": true,
              "type": "string",
              "description": "Stream to write to (stdout or stderr)."
          },
          "int_arg": {
              "type": "number",
              "description": "Some int arg."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": false
          },
          "obj_arg": {
              "type": "object",
              "description": "Some object arg."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "str_arg": {
              "type": "string",
              "description": "Some string arg."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Simple script action to test output to different streams.",
      "enabled": true,
      "entry_point": "scripts/streamwriter-script.py",
      "notify": {},
      "uid": "action:fixtures:streamwriter-script-remote",
      "pack": "fixtures",
      "ref": "fixtures.streamwriter-script-remote",
      "id": "5b87f9630a8b8a0be76769d0",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "add_package",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "file": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Full (local) path to a file to be added to cache"
          },
          "distribution": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Comma seperated list of repositories to advertise package to"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Add package to the Freight cache",
      "enabled": true,
      "entry_point": "add_package.py",
      "notify": {},
      "uid": "action:freight:add_package",
      "pack": "freight",
      "ref": "freight.add_package",
      "id": "5b87fa460a8b8a0784464c90",
      "runner_type": "run-remote-script"
  },
  {
      "name": "update_cache",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "freight cache",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Update the Freight cache and regenerate the repository",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:freight:update_cache",
      "pack": "freight",
      "ref": "freight.update_cache",
      "id": "5b87fa460a8b8a0784464c91",
      "runner_type": "run-remote"
  },
  {
      "name": "add_comment",
      "parameters": {
          "body": {
              "required": true,
              "type": "string",
              "description": "Comment body"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Repository name."
          },
          "user": {
              "required": true,
              "type": "string",
              "description": "User / organization name."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "issue": {
              "required": true,
              "type": "string",
              "description": "Issue / pull request number"
          }
      },
      "tags": [],
      "description": "Add a comment to the provided issue / pull request.",
      "enabled": true,
      "entry_point": "add_comment.py",
      "notify": {},
      "uid": "action:github:add_comment",
      "pack": "github",
      "ref": "github.add_comment",
      "id": "5b87f8580a8b8a567f589561",
      "runner_type": "python-script"
  },
  {
      "name": "add_status",
      "parameters": {
          "target_url": {
              "required": false,
              "type": "string",
              "description": "The target URL to associate with this status."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "context": {
              "required": false,
              "type": "string",
              "description": "A string label to differentiate this status from the status of other systems. Default: \"default\""
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Repository name."
          },
          "sha": {
              "required": true,
              "type": "string",
              "description": "Commit SHA"
          },
          "state": {
              "required": true,
              "type": "string",
              "description": "State of the status (pending, success, error, failure)"
          },
          "user": {
              "required": true,
              "type": "string",
              "description": "User / organization name."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "description": {
              "required": false,
              "type": "string",
              "description": "A short description of the status."
          }
      },
      "tags": [],
      "description": "Add a commit status for a provided ref.",
      "enabled": true,
      "entry_point": "add_status.py",
      "notify": {},
      "uid": "action:github:add_status",
      "pack": "github",
      "ref": "github.add_status",
      "id": "5b87f8580a8b8a567f589562",
      "runner_type": "python-script"
  },
  {
      "name": "add_team_membership",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "team_id": {
              "required": true,
              "type": "integer",
              "description": "Team ID."
          },
          "user": {
              "required": true,
              "type": "string",
              "description": "User to invite"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "organization": {
              "required": true,
              "type": "string",
              "description": "Organization the team belongs to"
          }
      },
      "tags": [],
      "description": "Add (and invite if not a member) a user to a team",
      "enabled": true,
      "entry_point": "add_team_membership.py",
      "notify": {},
      "uid": "action:github:add_team_membership",
      "pack": "github",
      "ref": "github.add_team_membership",
      "id": "5b87f8580a8b8a567f589563",
      "runner_type": "python-script"
  },
  {
      "name": "check_deployment_env",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "deploy_env": {
              "required": true,
              "type": "string",
              "description": "The deployement enviroment to check against the config value."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Check if deployment event applies to this server.",
      "enabled": true,
      "entry_point": "check_deployment_env.py",
      "notify": {},
      "uid": "action:github:check_deployment_env",
      "pack": "github",
      "ref": "github.check_deployment_env",
      "id": "5b87f8580a8b8a567f589564",
      "runner_type": "python-script"
  },
  {
      "name": "create_deployment",
      "parameters": {
          "github_type": {
              "default": null,
              "type": "string",
              "description": "The type of github installation to target, if unset will use the configured default."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repository": {
              "required": true,
              "type": "string",
              "description": "The full (Organization|User)/repository path"
          },
          "environment": {
              "default": "production",
              "type": "string",
              "description": "Deploy to this environment."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "api_user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The API user"
          },
          "ref": {
              "default": "master",
              "type": "string",
              "description": "The branch, tag, or SHA to deploy."
          },
          "payload": {
              "default": "",
              "type": "string",
              "description": "Optional JSON payload with extra information about the deployment."
          },
          "description": {
              "default": "",
              "type": "string",
              "description": "Optional short description."
          }
      },
      "tags": [],
      "description": "Create a new deployment for a GitHub repository",
      "enabled": true,
      "entry_point": "create_deployment.py",
      "notify": {},
      "uid": "action:github:create_deployment",
      "pack": "github",
      "ref": "github.create_deployment",
      "id": "5b87f8580a8b8a567f589565",
      "runner_type": "python-script"
  },
  {
      "name": "create_deployment_status",
      "parameters": {
          "github_type": {
              "default": null,
              "type": "string",
              "description": "The type of github installation to target, if unset will use the configured default."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repository": {
              "required": true,
              "type": "string",
              "description": "The full (Organization|User)/repository path"
          },
          "state": {
              "enum": [
                  "pending",
                  "success",
                  "error",
                  "failure"
              ],
              "type": "string",
              "description": "The state of the status.",
              "required": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "deployment_id": {
              "required": true,
              "type": "integer",
              "description": "The ID of the deployment."
          },
          "api_user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The API user"
          },
          "description": {
              "default": "",
              "type": "string",
              "description": "A short description of the status. Maximum length of 140 characters."
          }
      },
      "tags": [],
      "description": "Create a new deployment Status for a GitHub repository",
      "enabled": true,
      "entry_point": "create_deployment_status.py",
      "notify": {},
      "uid": "action:github:create_deployment_status",
      "pack": "github",
      "ref": "github.create_deployment_status",
      "id": "5b87f8580a8b8a567f589566",
      "runner_type": "python-script"
  },
  {
      "name": "create_issue",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "title": {
              "required": true,
              "type": "string",
              "description": "Title"
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Repository name."
          },
          "assignee": {
              "required": false,
              "type": "string",
              "description": "Assignee"
          },
          "user": {
              "required": true,
              "type": "string",
              "description": "User / organization name."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "description": {
              "required": false,
              "type": "string",
              "description": "Description"
          }
      },
      "tags": [],
      "description": "Create a Github issue.",
      "enabled": true,
      "entry_point": "create_issue.py",
      "notify": {},
      "uid": "action:github:create_issue",
      "pack": "github",
      "ref": "github.create_issue",
      "id": "5b87f8580a8b8a567f589567",
      "runner_type": "python-script"
  },
  {
      "name": "create_release",
      "parameters": {
          "body": {
              "required": true,
              "type": "string",
              "description": "Text describing the contents of the tag."
          },
          "github_type": {
              "default": null,
              "type": "string",
              "description": "The type of github installation to target, if unset will use the configured default."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "repository": {
              "required": true,
              "type": "string",
              "description": "The full (Organization|User)/repository path"
          },
          "target_commitish": {
              "default": "master",
              "type": "string",
              "description": "The value that determines where the Git tag is created from (Can be any branch or commit SHA)."
          },
          "version_increase": {
              "default": "patch",
              "enum": [
                  "major",
                  "minor",
                  "patch"
              ],
              "type": "string",
              "description": "Which part of the version number to increased from the latest tag."
          },
          "draft": {
              "default": false,
              "type": "boolean",
              "description": "Create a draft (unpublished) release",
              "immutable": true
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "prerelease": {
              "default": false,
              "type": "boolean",
              "description": "Identify the release as a prerelease.",
              "immutable": true
          },
          "api_user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The API user"
          },
          "name": {
              "required": true,
              "type": "string",
              "description": "The name of the tag."
          }
      },
      "tags": [],
      "description": "Create a new release for a GitHub repository",
      "enabled": true,
      "entry_point": "create_release.py",
      "notify": {},
      "uid": "action:github:create_release",
      "pack": "github",
      "ref": "github.create_release",
      "id": "5b87f8580a8b8a567f589568",
      "runner_type": "python-script"
  },
  {
      "name": "deployment_event",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "creator": {
              "required": true,
              "type": "string",
              "description": "Who created the deployment (will be used to update the deployment status."
          },
          "deploy_ref": {
              "default": "master",
              "type": "string",
              "description": "The branch to deploy (Note: tags are not supported!)"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "repo_fullname": {
              "required": true,
              "type": "string",
              "description": "The full repo path (e.g. [Org|User]/repo_name"
          },
          "deploy_desc": {
              "required": true,
              "type": "string",
              "description": "The description of the deployment."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "ssh_url": {
              "required": true,
              "type": "string",
              "description": "The location of the repo for using with SSH."
          },
          "deploy_payload": {
              "default": "{}",
              "type": "string",
              "description": "Additional payload information from GitHub"
          },
          "deploy_id": {
              "required": true,
              "type": "integer",
              "description": "The deployment ID."
          },
          "deploy_sha": {
              "required": true,
              "type": "string",
              "description": "The SHA of the commit to deploy."
          },
          "deploy_env": {
              "default": "production",
              "type": "string",
              "description": "The environment to target."
          },
          "repo_name": {
              "required": true,
              "type": "string",
              "description": "The repo name."
          }
      },
      "tags": [],
      "description": "Process an github deployment event and install a pack if the environment matches.",
      "enabled": true,
      "entry_point": "workflows/deployment_event.yaml",
      "notify": {},
      "uid": "action:github:deployment_event",
      "pack": "github",
      "ref": "github.deployment_event",
      "id": "5b87f8580a8b8a567f589569",
      "runner_type": "mistral-v2"
  },
  {
      "name": "get_clone_stats",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Repository to query for clone stats (org/repo)"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Retrieve clone statistics for a given repository",
      "enabled": true,
      "entry_point": "get_clone_stats.py",
      "notify": {},
      "uid": "action:github:get_clone_stats",
      "pack": "github",
      "ref": "github.get_clone_stats",
      "id": "5b87f8580a8b8a567f58956a",
      "runner_type": "python-script"
  },
  {
      "name": "get_deployment_statuses",
      "parameters": {
          "github_type": {
              "default": null,
              "type": "string",
              "description": "The type of github installation to target, if unset will use the configured default."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repository": {
              "required": true,
              "type": "string",
              "description": "The full (Organization|User)/repository path"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "deployment_id": {
              "required": true,
              "type": "integer",
              "description": "The ID of the deloyment to get the states for."
          },
          "api_user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The API user"
          }
      },
      "tags": [],
      "description": "Get the statuses of a deployment for a GitHub repository",
      "enabled": true,
      "entry_point": "get_deployment_statuses.py",
      "notify": {},
      "uid": "action:github:get_deployment_statuses",
      "pack": "github",
      "ref": "github.get_deployment_statuses",
      "id": "5b87f8580a8b8a567f58956b",
      "runner_type": "python-script"
  },
  {
      "name": "get_issue",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Repository name."
          },
          "issue_id": {
              "required": true,
              "type": "string",
              "description": "Issue id"
          },
          "user": {
              "required": true,
              "type": "string",
              "description": "User / organization name."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Retrieve information about a particular Github issue.",
      "enabled": true,
      "entry_point": "get_issue.py",
      "notify": {},
      "uid": "action:github:get_issue",
      "pack": "github",
      "ref": "github.get_issue",
      "id": "5b87f8580a8b8a567f58956c",
      "runner_type": "python-script"
  },
  {
      "name": "get_traffic_stats",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Repository to query for traffic stats (org/repo)"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Retrieve traffic statistics for a given repository",
      "enabled": true,
      "entry_point": "get_traffic_stats.py",
      "notify": {},
      "uid": "action:github:get_traffic_stats",
      "pack": "github",
      "ref": "github.get_traffic_stats",
      "id": "5b87f8580a8b8a567f58956d",
      "runner_type": "python-script"
  },
  {
      "name": "get_user",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "token_user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The"
          },
          "user": {
              "required": true,
              "type": "string",
              "description": "The username"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Get a user from the Github user database",
      "enabled": true,
      "entry_point": "get_user.py",
      "notify": {},
      "uid": "action:github:get_user",
      "pack": "github",
      "ref": "github.get_user",
      "id": "5b87f8580a8b8a567f58956e",
      "runner_type": "python-script"
  },
  {
      "name": "latest_release",
      "parameters": {
          "github_type": {
              "default": null,
              "type": "string",
              "description": "The type of github installation to target, if unset will use the configured default."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repository": {
              "required": true,
              "type": "string",
              "description": "The full (Organization|User)/repository path"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "api_user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The API user"
          }
      },
      "tags": [],
      "description": "List the latest release for a GitHub repository",
      "enabled": true,
      "entry_point": "latest_release.py",
      "notify": {},
      "uid": "action:github:latest_release",
      "pack": "github",
      "ref": "github.latest_release",
      "id": "5b87f8580a8b8a567f58956f",
      "runner_type": "python-script"
  },
  {
      "name": "list_deployments",
      "parameters": {
          "github_type": {
              "default": null,
              "type": "string",
              "description": "The type of github installation to target, if unset will use the configured default."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repository": {
              "required": true,
              "type": "string",
              "description": "The full (Organization|User)/repository path"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "api_user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The API user"
          }
      },
      "tags": [],
      "description": "List deployments for a GitHub repository",
      "enabled": true,
      "entry_point": "list_deployments.py",
      "notify": {},
      "uid": "action:github:list_deployments",
      "pack": "github",
      "ref": "github.list_deployments",
      "id": "5b87f8580a8b8a567f589570",
      "runner_type": "python-script"
  },
  {
      "name": "list_issues",
      "parameters": {
          "sort": {
              "required": false,
              "type": "string",
              "description": "Field to sort on."
          },
          "filter": {
              "required": false,
              "type": "string",
              "description": "Filter string."
          },
          "direction": {
              "required": false,
              "type": "string",
              "description": "Sort direction (e.g. asc / desc)."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "since": {
              "required": false,
              "type": "number",
              "description": "Only returns issues newer than this timestamp."
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Repository name."
          },
          "state": {
              "required": false,
              "type": "string",
              "description": "State to filter on."
          },
          "limit": {
              "default": 20,
              "required": false,
              "type": "number",
              "description": "Maximum number of issues to return."
          },
          "user": {
              "required": true,
              "type": "string",
              "description": "User / organization name."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Retrieve a list of issues (including pull requests) for a particular repository.",
      "enabled": true,
      "entry_point": "list_issues.py",
      "notify": {},
      "uid": "action:github:list_issues",
      "pack": "github",
      "ref": "github.list_issues",
      "id": "5b87f8580a8b8a567f589571",
      "runner_type": "python-script"
  },
  {
      "name": "list_releases",
      "parameters": {
          "github_type": {
              "default": null,
              "type": "string",
              "description": "The type of github installation to target, if unset will use the configured default."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "repository": {
              "required": true,
              "type": "string",
              "description": "The full (Organization|User)/repository path"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "api_user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The API user"
          }
      },
      "tags": [],
      "description": "List releases for a GitHub repository",
      "enabled": true,
      "entry_point": "list_releases.py",
      "notify": {},
      "uid": "action:github:list_releases",
      "pack": "github",
      "ref": "github.list_releases",
      "id": "5b87f8580a8b8a567f589572",
      "runner_type": "python-script"
  },
  {
      "name": "list_teams",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "organization": {
              "required": true,
              "type": "string",
              "description": "The organization to list teams for"
          }
      },
      "tags": [],
      "description": "List teams in organization",
      "enabled": true,
      "entry_point": "list_teams.py",
      "notify": {},
      "uid": "action:github:list_teams",
      "pack": "github",
      "ref": "github.list_teams",
      "id": "5b87f8580a8b8a567f589573",
      "runner_type": "python-script"
  },
  {
      "name": "store_oauth_token",
      "parameters": {
          "github_type": {
              "default": null,
              "type": "string",
              "description": "The type of github installation to target, if unset will use the configured default."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "token": {
              "required": true,
              "type": "string",
              "description": "The GitHub OAuth token"
          },
          "user": {
              "default": "{{action_context.api_user|default(None)}}",
              "type": "string",
              "description": "The user that the tokens for"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Store a users GitHub OAuth token.",
      "enabled": true,
      "entry_point": "store_oauth_token.py",
      "notify": {},
      "uid": "action:github:store_oauth_token",
      "pack": "github",
      "ref": "github.store_oauth_token",
      "id": "5b87f8580a8b8a567f589574",
      "runner_type": "python-script"
  },
  {
      "name": "check_loadavg",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "period": {
              "default": "all",
              "position": 0,
              "enum": [
                  "1",
                  "5",
                  "15",
                  "all"
              ],
              "type": "string",
              "description": "Time period for load avg: 1,5,15 minutes, or 'all'"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Check CPU Load Average on a Host",
      "enabled": true,
      "entry_point": "checks/check_loadavg.py",
      "notify": {},
      "uid": "action:linux:check_loadavg",
      "pack": "linux",
      "ref": "linux.check_loadavg",
      "id": "5b87f7d80a8b8a55c6191dd7",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "check_processes",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "args": {
              "position": 2,
              "type": "string",
              "description": "Additional arguments"
          },
          "search": {
              "default": "name",
              "position": 0,
              "enum": [
                  "state",
                  "name",
                  "pid"
              ],
              "type": "string",
              "description": "Which field to search: state, name, or PID"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "criteria": {
              "position": 1,
              "type": "string",
              "description": "search criteria.  Can be a regular expression."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Check Interesting Processes",
      "enabled": true,
      "entry_point": "checks/check_processes.py",
      "notify": {},
      "uid": "action:linux:check_processes",
      "pack": "linux",
      "ref": "linux.check_processes",
      "id": "5b87f7d80a8b8a55c6191dd8",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "cp",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "args": {
              "default": "-v{% if recursive == true %} -r{% endif %}{% if force == true %} -f{% endif %}",
              "description": "Command line arguments passed to cp"
          },
          "destination": {
              "required": true,
              "type": "string",
              "description": "Destination of files/directories"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "source": {
              "required": true,
              "type": "string",
              "description": "List of files/directories to to be copied"
          },
          "cmd": {
              "default": "cp {{args}} {{source}} {{destination}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "force": {
              "default": false,
              "type": "boolean",
              "description": "Boolean flag for force"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "recursive": {
              "default": false,
              "type": "boolean",
              "description": "Boolean flag for recursive copy"
          }
      },
      "tags": [],
      "description": "Copy file(s)",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:cp",
      "pack": "linux",
      "ref": "linux.cp",
      "id": "5b87f7d80a8b8a55c6191dd9",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "diag_loadavg",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Hostname of the server to perform load_alert diagnostics on"
          }
      },
      "tags": [],
      "description": "Diagnostic workflow for high load alert",
      "enabled": true,
      "entry_point": "workflows/diag_loadavg.yaml",
      "notify": {},
      "uid": "action:linux:diag_loadavg",
      "pack": "linux",
      "ref": "linux.diag_loadavg",
      "id": "5b87f7d80a8b8a55c6191dda",
      "runner_type": "action-chain"
  },
  {
      "name": "dig",
      "parameters": {
          "count": {
              "default": 0,
              "type": "integer"
          },
          "rand": {
              "default": false,
              "type": "boolean"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "hostname": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "nameserver": {
              "type": "string"
          },
          "queryopts": {
              "default": "short",
              "type": "string"
          }
      },
      "tags": [],
      "description": "Dig action",
      "enabled": true,
      "entry_point": "dig.py",
      "notify": {},
      "uid": "action:linux:dig",
      "pack": "linux",
      "ref": "linux.dig",
      "id": "5b87f7d80a8b8a55c6191ddb",
      "runner_type": "python-script"
  },
  {
      "name": "file_touch",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "echo $(date +%s) > {{file}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "file": {
              "required": true,
              "type": "string",
              "description": "Path of the file to be touched"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Touches a file",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:file_touch",
      "pack": "linux",
      "ref": "linux.file_touch",
      "id": "5b87f7d80a8b8a55c6191ddc",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "lsof",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "args": {
              "default": " ",
              "description": "Command line arguments"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "cmd": {
              "default": "lsof {{args}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run lsof",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:lsof",
      "pack": "linux",
      "ref": "linux.lsof",
      "id": "5b87f7d80a8b8a55c6191ddd",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "lsof_pids",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "for pid in {{pids}}; do lsof -p $pid; done",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "pids": {
              "required": true,
              "description": "List of pids"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run lsof for a group of PIDs",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:lsof_pids",
      "pack": "linux",
      "ref": "linux.lsof_pids",
      "id": "5b87f7d80a8b8a55c6191dde",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "mv",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "args": {
              "default": "-v{% if force == true %} -f{% endif %}",
              "description": "Command line arguments passed to mv"
          },
          "destination": {
              "required": true,
              "type": "string",
              "description": "Destination of files/directories"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "source": {
              "required": true,
              "type": "string",
              "description": "List of files/directories to to be moved"
          },
          "cmd": {
              "default": "mv {{args}} {{source}} {{destination}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "force": {
              "default": false,
              "type": "boolean",
              "description": "Boolean flag for force"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Move file(s)",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:mv",
      "pack": "linux",
      "ref": "linux.mv",
      "id": "5b87f7d80a8b8a55c6191ddf",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "netstat",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "args": {
              "default": " ",
              "description": "Command line arguments"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "cmd": {
              "default": "netstat {{args}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run netstat",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:netstat",
      "pack": "linux",
      "ref": "linux.netstat",
      "id": "5b87f7d80a8b8a55c6191de0",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "netstat_grep",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "for pid in {{pids}}; do netstat -pant | grep $pid; done; exit 0",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "pids": {
              "required": true,
              "description": "List of pids"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Grep netstat results",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:netstat_grep",
      "pack": "linux",
      "ref": "linux.netstat_grep",
      "id": "5b87f7d80a8b8a55c6191de1",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "pkill",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "pkill -e {{process}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "process": {
              "required": true,
              "type": "string",
              "description": "Process name to kill"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Kill processes using pkill",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:pkill",
      "pack": "linux",
      "ref": "linux.pkill",
      "id": "5b87f7d80a8b8a55c6191de2",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "rm",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "rm {{args}} {{target}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "recursive": {
              "default": false,
              "type": "boolean",
              "description": "Boolean flag for recursive rm"
          },
          "args": {
              "default": "{% if verbose == true %}-v{% endif %}{% if recursive == true %} -r{% endif %}{% if force == true %} -f{% endif %}",
              "description": "Command line arguments passed to rm"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "verbose": {
              "default": true,
              "type": "boolean",
              "description": "True to explain what is being done"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "force": {
              "default": false,
              "type": "boolean",
              "description": "Boolean flag for force"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "target": {
              "required": true,
              "type": "string",
              "description": "List of files/directories to to be removed"
          }
      },
      "tags": [],
      "description": "Remove file(s)",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:rm",
      "pack": "linux",
      "ref": "linux.rm",
      "id": "5b87f7d80a8b8a55c6191de3",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "rsync",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "args": {
              "default": "-avz -e \"ssh -o ConnectTimeout={{connect_timeout}}\"",
              "description": "Command line arguments passed to rysnc"
          },
          "dest_server": {
              "required": true,
              "type": "string",
              "description": "Destination server for rsync'd files"
          },
          "destination": {
              "required": true,
              "type": "string",
              "description": "Destination of files/directories on target server"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "source": {
              "required": true,
              "type": "string",
              "description": "List of files/directories to to be copied"
          },
          "cmd": {
              "default": "rsync {{args}} {{source}} {{dest_server}}:{{destination}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "connect_timeout": {
              "default": 30,
              "type": "integer",
              "description": "SSH connect timeout in seconds"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Copy file(s) from one place to another w/ rsync",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:rsync",
      "pack": "linux",
      "ref": "linux.rsync",
      "id": "5b87f7d80a8b8a55c6191de4",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "scp",
      "parameters": {
          "force": {
              "default": false,
              "type": "boolean",
              "description": "Boolean flag for force"
          },
          "verbose": {
              "default": true,
              "type": "boolean"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "recursive": {
              "default": false,
              "type": "boolean",
              "description": "Boolean flag for recursive copy"
          },
          "destination": {
              "required": true,
              "type": "string",
              "description": "Destination of files/directories. This can be either a local path (example: \"/path/to/file\") or remote path (example: \"server.fqdn:/path/to/file\"). Paths can also be relative (examples: \"folder/a.txt\" or \"server.fqdn:folder/a.txt\") or absolute (Examples: \"/etc/hosts\" or \"server.fqdn:/etc/hosts\")."
          },
          "source": {
              "required": true,
              "type": "string",
              "description": "List of files/directories to be copied. This can be either a local path (example: \"/path/to/file\") or remote path (example: \"server.fqdn:/path/to/file\"). Paths can also be relative (examples: \"folder/a.txt\" or \"server.fqdn:folder/a.txt\") or absolute (Examples: \"/etc/hosts\" or \"server.fqdn:/etc/hosts\"). Lists of multiple files/directories should be separated by a spaces (example: \"file1.txt file2.txt otherserver.domain.com:file3.txt\")"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "username": {
              "default": "stanley",
              "required": false,
              "type": "string",
              "description": "User to scp as"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "dest_server": {
              "required": false,
              "type": "string",
              "description": "Destination of files/directories. Deprecated in favor of \"destination\" parameter. Only here for backward compatibility reasons."
          },
          "args": {
              "default": "-o stricthostkeychecking=no{% if verbose %} -v{% endif %}{% if recursive == true %} -r{% endif %}{% if force == true %} -f{% endif %}",
              "description": "Command line arguments passed to scp"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "cmd": {
              "default": "scp {{args}} -i {{keyfile}} {{source}} {% if dest_server %}{{dest_server}}:{{destination}}{% else %}{{destination}}{% endif %}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string",
              "description": "SSH key to connect with"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Secure copy file(s)",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:scp",
      "pack": "linux",
      "ref": "linux.scp",
      "id": "5b87f7d80a8b8a55c6191de5",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "service",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "service": {
              "position": 1,
              "type": "string",
              "description": "Name of service"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "act": {
              "position": 0,
              "type": "string",
              "description": "Action to perform on service"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Stops, Starts, or Restarts a service",
      "enabled": true,
      "entry_point": "service.py",
      "notify": {},
      "uid": "action:linux:service",
      "pack": "linux",
      "ref": "linux.service",
      "id": "5b87f7d80a8b8a55c6191de6",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "traceroute",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "hops": {
              "default": 30,
              "position": 2,
              "type": "integer",
              "description": "Limit of maximum number of hops"
          },
          "queries_to_hop": {
              "default": 3,
              "position": 3,
              "type": "integer",
              "description": "No. of queries to each hop"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "host": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "host name to traceroute"
          },
          "hosts": {
              "default": "localhost",
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Traceroute a Host",
      "enabled": true,
      "entry_point": "traceroute.sh",
      "notify": {},
      "uid": "action:linux:traceroute",
      "pack": "linux",
      "ref": "linux.traceroute",
      "id": "5b87f7d90a8b8a55c6191de7",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "vmstat",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "args": {
              "default": " ",
              "type": "string",
              "description": "Command line arguments"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "cmd": {
              "default": "vmstat {{args}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run vmstat",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:linux:vmstat",
      "pack": "linux",
      "ref": "linux.vmstat",
      "id": "5b87f7d90a8b8a55c6191de8",
      "runner_type": "remote-shell-cmd"
  },
  {
      "name": "wait_for_ssh",
      "parameters": {
          "username": {
              "default": "stanley",
              "required": true,
              "description": "Username used to authenticate."
          },
          "retries": {
              "default": 10,
              "type": "integer",
              "description": "Maximum number of retries."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 400,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sleep_delay": {
              "default": 20,
              "type": "integer",
              "description": "How long to sleep / wait (in seconds) after each failed connection attempt."
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Remote hostname."
          },
          "ssh_timeout": {
              "default": 5,
              "type": "integer",
              "description": "SSH connection connect timeout (in seconds)."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "password": {
              "required": false,
              "description": "Password used to authenticate."
          },
          "keyfile": {
              "required": false,
              "description": "SSH key file used to authenticate."
          },
          "port": {
              "default": 22,
              "required": true,
              "type": "integer",
              "description": "Remote SSH port."
          }
      },
      "tags": [],
      "description": "Action which waits for a SSH server to become accessible. By default, if no credentials are provided, this action will try to authenticate using the system user username and key file.",
      "enabled": true,
      "entry_point": "wait_for_ssh.py",
      "notify": {},
      "uid": "action:linux:wait_for_ssh",
      "pack": "linux",
      "ref": "linux.wait_for_ssh",
      "id": "5b87f7d90a8b8a55c6191de9",
      "runner_type": "python-script"
  },
  {
      "name": "install",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "repo_client": {
              "default": "/home/stanley/mistralclient",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Location of cloned python-mistralclient repo on disk."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo_action": {
              "default": "/home/stanley/st2mistral",
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Location of cloned st2mistral repo on disk."
          },
          "repo_main": {
              "default": "/home/stanley/mistral",
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location of cloned mistral repo on disk."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Install mistral and related components.",
      "enabled": true,
      "entry_point": "install.sh",
      "notify": {},
      "uid": "action:mistral_dev:install",
      "pack": "mistral_dev",
      "ref": "mistral_dev.install",
      "id": "5b87f8890a8b8a567f5896b7",
      "runner_type": "run-remote-script"
  },
  {
      "name": "setup",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo_branch": {
              "default": "master",
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "db_name": {
              "default": "mistral",
              "type": "string"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "repo_action": {
              "default": "https://github.com/StackStorm/st2mistral.git",
              "required": true,
              "type": "string"
          },
          "db_type": {
              "default": "postgresql",
              "enum": [
                  "postgresql",
                  "mysql"
              ],
              "type": "string"
          },
          "repo_client": {
              "default": "https://github.com/{{repo_base}}/python-mistralclient.git",
              "required": true,
              "type": "string"
          },
          "repo_main": {
              "default": "https://github.com/{{repo_base}}/mistral.git",
              "required": true,
              "type": "string"
          },
          "repo_dir": {
              "default": "/home/stanley",
              "type": "string"
          },
          "debug": {
              "default": false,
              "type": "boolean"
          },
          "host": {
              "default": "localhost",
              "required": true,
              "type": "string"
          },
          "db_root_pass": {
              "default": "StackStorm",
              "type": "string"
          },
          "repo_base": {
              "default": "stackstorm",
              "required": true,
              "type": "string",
              "enum": [
                  "stackstorm",
                  "openstack"
              ]
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "db_user_pass": {
              "default": "StackStorm",
              "type": "string"
          },
          "api_port": {
              "default": 8989,
              "type": "integer"
          },
          "db_user_name": {
              "default": "mistral",
              "type": "string"
          },
          "distro": {
              "default": "ubuntu",
              "required": true,
              "type": "string",
              "description": "The flavor of Linux distribution.",
              "enum": [
                  "ubuntu",
                  "fedora"
              ]
          }
      },
      "tags": [],
      "description": "Install and configure a running instance of Mistral from git repo.",
      "enabled": true,
      "entry_point": "workflows/setup.mistral.yaml",
      "notify": {},
      "uid": "action:mistral_dev:setup",
      "pack": "mistral_dev",
      "ref": "mistral_dev.setup",
      "id": "5b87f8890a8b8a567f5896b8",
      "runner_type": "mistral-v2"
  },
  {
      "name": "setup_api_server",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "repo_main": {
              "default": "/home/stanley/mistral",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Location of cloned mistral repo on disk."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "distro": {
              "required": true,
              "description": "The flavor of Linux distribution.",
              "default": "ubuntu",
              "enum": [
                  "ubuntu",
                  "fedora"
              ],
              "position": 0,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Setup mistral API server.",
      "enabled": true,
      "entry_point": "setup_api_server.sh",
      "notify": {},
      "uid": "action:mistral_dev:setup_api_server",
      "pack": "mistral_dev",
      "ref": "mistral_dev.setup_api_server",
      "id": "5b87f8890a8b8a567f5896b9",
      "runner_type": "run-remote-script"
  },
  {
      "name": "setup_config",
      "parameters": {
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "api_port": {
              "default": 8989,
              "position": 5,
              "required": true,
              "type": "integer"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "db_user_name": {
              "default": "mistral",
              "position": 3,
              "required": true,
              "type": "string"
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "db_name": {
              "default": "mistral",
              "position": 2,
              "required": true,
              "type": "string"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "mistral_path": {
              "default": "/home/stanley/mistral",
              "position": 0,
              "required": true,
              "type": "string"
          },
          "db_type": {
              "default": "postgresql",
              "position": 1,
              "required": true,
              "type": "string",
              "enum": [
                  "postgresql",
                  "mysql"
              ]
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "db_user_pass": {
              "default": "StackStorm",
              "position": 4,
              "required": true,
              "type": "string"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Write the configuration files for Mistral.",
      "enabled": true,
      "entry_point": "setup_config.sh",
      "notify": {},
      "uid": "action:mistral_dev:setup_config",
      "pack": "mistral_dev",
      "ref": "mistral_dev.setup_config",
      "id": "5b87f8890a8b8a567f5896ba",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "setup_db",
      "parameters": {
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "mistral_config": {
              "default": "/etc/mistral/mistral.conf",
              "position": 1,
              "required": true,
              "type": "string"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "db_user_name": {
              "default": "mistral",
              "position": 5,
              "required": true,
              "type": "string"
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "distro": {
              "required": true,
              "description": "The flavor of Linux distribution.",
              "default": "ubuntu",
              "enum": [
                  "ubuntu",
                  "fedora"
              ],
              "position": 2,
              "type": "string"
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "db_name": {
              "default": "mistral",
              "position": 4,
              "required": true,
              "type": "string"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "mistral_path": {
              "default": "/home/stanley/mistral",
              "position": 0,
              "required": true,
              "type": "string"
          },
          "db_type": {
              "default": "postgresql",
              "position": 3,
              "required": true,
              "type": "string",
              "enum": [
                  "postgresql",
                  "mysql"
              ]
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "db_root_pass": {
              "default": "StackStorm",
              "position": 7,
              "required": true,
              "type": "string"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "db_user_pass": {
              "default": "StackStorm",
              "position": 6,
              "required": true,
              "type": "string"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Setup the database for Mistral.",
      "enabled": true,
      "entry_point": "setup_db.sh",
      "notify": {},
      "uid": "action:mistral_dev:setup_db",
      "pack": "mistral_dev",
      "ref": "mistral_dev.setup_db",
      "id": "5b87f8890a8b8a567f5896bb",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "setup_service",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "repo_main": {
              "default": "/home/stanley/mistral",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Location of cloned mistral repo on disk."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "distro": {
              "required": true,
              "description": "The flavor of Linux distribution.",
              "default": "ubuntu",
              "enum": [
                  "ubuntu",
                  "fedora"
              ],
              "position": 0,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Setup mistral to run as a service.",
      "enabled": true,
      "entry_point": "setup_service.sh",
      "notify": {},
      "uid": "action:mistral_dev:setup_service",
      "pack": "mistral_dev",
      "ref": "mistral_dev.setup_service",
      "id": "5b87f8890a8b8a567f5896bc",
      "runner_type": "run-remote-script"
  },
  {
      "name": "stress",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "batch_size": {
              "default": 5,
              "type": "integer",
              "description": "Batch size."
          },
          "prefix": {
              "default": "st2-mock-",
              "type": "string",
              "description": "The prefix used for the VM name."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "total": {
              "default": 25,
              "type": "integer",
              "description": "The total number of VMs to create."
          }
      },
      "tags": [],
      "description": "Action to stress test  mistral.",
      "enabled": true,
      "entry_point": "stress.py",
      "notify": {},
      "uid": "action:mistral_dev:stress",
      "pack": "mistral_dev",
      "ref": "mistral_dev.stress",
      "id": "5b87f8890a8b8a567f5896bd",
      "runner_type": "run-python"
  },
  {
      "name": "switch",
      "parameters": {
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "st2_repo_root": {
              "default": "/home/vagrant/projects/stackstorm",
              "position": 0,
              "type": "string",
              "description": "Local root path to the StackStorm repositories."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "os_repo_root": {
              "default": "/home/vagrant/projects/openstack",
              "position": 1,
              "type": "string",
              "description": "Local root path to the OpenStack/StackForge repositories."
          },
          "repo": {
              "position": 2,
              "enum": [
                  "st2",
                  "os"
              ],
              "description": "Swap to either the StackStorm or OpenStack/StackForge repo.",
              "required": true
          },
          "venv_owner": {
              "default": "vagrant",
              "position": 5,
              "type": "string",
              "description": "Owner of the venv directory."
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Checkout the given branch for the repo."
          },
          "timeout": {
              "default": 300,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "refresh_venv": {
              "default": false,
              "position": 4,
              "type": "boolean",
              "description": "Rebuild the python venv if specified."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cwd": {
              "default": ".",
              "type": "string",
              "description": "Working directory where the script will be executed in",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Switch between the stackstorm/mistral and stackforge/mistral repo for development.",
      "enabled": true,
      "entry_point": "switch.sh",
      "notify": {},
      "uid": "action:mistral_dev:switch",
      "pack": "mistral_dev",
      "ref": "mistral_dev.switch",
      "id": "5b87f8890a8b8a567f5896be",
      "runner_type": "run-local-script"
  },
  {
      "name": "teardown",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "db_type": {
              "default": "postgresql",
              "enum": [
                  "postgresql",
                  "mysql"
              ],
              "type": "string"
          },
          "repo_client": {
              "required": true,
              "type": "string"
          },
          "repo_main": {
              "required": true,
              "type": "string"
          },
          "repo_action": {
              "required": true,
              "type": "string"
          },
          "db_name": {
              "default": "mistral",
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "host": {
              "default": "localhost",
              "required": true,
              "type": "string"
          },
          "db_user_name": {
              "default": "mistral",
              "type": "string"
          },
          "db_root_pass": {
              "default": "StackStorm",
              "type": "string"
          },
          "distro": {
              "default": "ubuntu",
              "required": true,
              "type": "string",
              "description": "The flavor of Linux distribution.",
              "enum": [
                  "ubuntu",
                  "fedora"
              ]
          }
      },
      "tags": [],
      "description": "Teardown a running instance of Mistral.",
      "enabled": true,
      "entry_point": "workflows/teardown.mistral.yaml",
      "notify": {},
      "uid": "action:mistral_dev:teardown",
      "pack": "mistral_dev",
      "ref": "mistral_dev.teardown",
      "id": "5b87f8890a8b8a567f5896bf",
      "runner_type": "mistral-v2"
  },
  {
      "name": "teardown_db",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "db_root_pass": {
              "default": "StackStorm",
              "position": 3,
              "required": true,
              "type": "string"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "db_type": {
              "default": "postgresql",
              "position": 0,
              "required": true,
              "type": "string",
              "enum": [
                  "postgresql",
                  "mysql"
              ]
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "db_name": {
              "default": "mistral",
              "position": 1,
              "required": true,
              "type": "string"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "db_user_name": {
              "default": "mistral",
              "position": 2,
              "required": true,
              "type": "string"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Teardown the database for Mistral.",
      "enabled": true,
      "entry_point": "teardown_db.sh",
      "notify": {},
      "uid": "action:mistral_dev:teardown_db",
      "pack": "mistral_dev",
      "ref": "mistral_dev.teardown_db",
      "id": "5b87f8890a8b8a567f5896c0",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "uninstall",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "distro": {
              "required": true,
              "description": "The flavor of Linux distribution.",
              "default": "ubuntu",
              "enum": [
                  "ubuntu",
                  "fedora"
              ],
              "position": 0,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Uninstall mistral and related components.",
      "enabled": true,
      "entry_point": "uninstall.sh",
      "notify": {},
      "uid": "action:mistral_dev:uninstall",
      "pack": "mistral_dev",
      "ref": "mistral_dev.uninstall",
      "id": "5b87f8890a8b8a567f5896c1",
      "runner_type": "run-remote-script"
  },
  {
      "name": "which",
      "parameters": {
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cwd": {
              "default": ".",
              "type": "string",
              "description": "Working directory where the script will be executed in",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Return which mistral repo is currently set for development.",
      "enabled": true,
      "entry_point": "which.sh",
      "notify": {},
      "uid": "action:mistral_dev:which",
      "pack": "mistral_dev",
      "ref": "mistral_dev.which",
      "id": "5b87f8890a8b8a567f5896c2",
      "runner_type": "run-local-script"
  },
  {
      "name": "xformdef",
      "parameters": {
          "definition": {
              "required": true,
              "type": "string",
              "description": "Workbook/workflow file or definition."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Wrap st2 action in the Mistral workbook or workflow definition with the st2.action proxy. This allows workflow author to write in native Mistral DSL.",
      "enabled": true,
      "entry_point": "xformdef.py",
      "notify": {},
      "uid": "action:mistral_dev:xformdef",
      "pack": "mistral_dev",
      "ref": "mistral_dev.xformdef",
      "id": "5b87f8890a8b8a567f5896c3",
      "runner_type": "run-python"
  },
  {
      "name": "create_master_token",
      "parameters": {
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "repository": {
              "required": true,
              "type": "string"
          },
          "concise": {
              "default": false,
              "type": "boolean"
          },
          "cmd": {
              "default": "package_cloud master_token create {{user}}/{{repository}} {{token_name}} {% if concise -%} | grep 'Master token' | awk '{ print $6}' {% endif %}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the host.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          },
          "token_name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "create master token for a repository",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:packagecloud:create_master_token",
      "pack": "packagecloud",
      "ref": "packagecloud.create_master_token",
      "id": "5b87f8150a8b8a567f589124",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "destroy_master_token",
      "parameters": {
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "repository": {
              "required": true,
              "type": "string"
          },
          "cmd": {
              "default": "echo y | package_cloud master_token destroy {{user}}/{{repository}} {{token_name}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the host.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          },
          "token_name": {
              "required": true,
              "type": "string",
              "description": "Not the token value but the name used. See https://packagecloud.io/docs#revocation."
          }
      },
      "tags": [],
      "description": "destroy master token for a repository",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:packagecloud:destroy_master_token",
      "pack": "packagecloud",
      "ref": "packagecloud.destroy_master_token",
      "id": "5b87f8150a8b8a567f589125",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "destroy_read_token",
      "parameters": {
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "repository": {
              "required": true,
              "type": "string"
          },
          "cmd": {
              "default": "package_cloud read_token destroy {{user}}/{{repository}} {{master_token_name}}/{{read_token_name}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the host.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "master_token_name": {
              "required": true,
              "type": "string",
              "description": "Not the token value but the name used. See https://packagecloud.io/docs#revocation."
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          },
          "read_token_name": {
              "required": true,
              "type": "string",
              "description": "Not the token value but the name used. See https://packagecloud.io/docs#revocation."
          }
      },
      "tags": [],
      "description": "destroy read token for a repository",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:packagecloud:destroy_read_token",
      "pack": "packagecloud",
      "ref": "packagecloud.destroy_read_token",
      "id": "5b87f8150a8b8a567f589126",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "get_master_token",
      "parameters": {
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "repository": {
              "position": 2,
              "required": true,
              "type": "string"
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "user": {
              "position": 1,
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 300,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "token_name": {
              "position": 3,
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Get master token for user!",
      "enabled": true,
      "entry_point": "get_master_token.sh",
      "notify": {},
      "uid": "action:packagecloud:get_master_token",
      "pack": "packagecloud",
      "ref": "packagecloud.get_master_token",
      "id": "5b87f8150a8b8a567f589127",
      "runner_type": "local-shell-script"
  },
  {
      "name": "list_master_token",
      "parameters": {
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "repository": {
              "required": true,
              "type": "string"
          },
          "cmd": {
              "default": "package_cloud master_token list {{user}}/{{repository}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the host.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "List master tokens for a repository",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:packagecloud:list_master_token",
      "pack": "packagecloud",
      "ref": "packagecloud.list_master_token",
      "id": "5b87f8150a8b8a567f589128",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "list_packages",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "package": {
              "type": "string",
              "description": "Select by specific packages"
          },
          "sort_packages": {
              "default": true,
              "type": "boolean"
          },
          "distro_version": {
              "type": "string",
              "description": "Select by specific distro"
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Name of the packagecloud repo"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "sort_type": {
              "default": "descending",
              "enum": [
                  "descending",
                  "ascending"
              ],
              "type": "string"
          },
          "version": {
              "type": "string",
              "description": "Select by package version"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "api_token": {
              "default": "{{st2kv.system.pkg_cloud_token}}",
              "type": "string",
              "description": "Token to access the packagecloud API"
          },
          "release": {
              "type": "string",
              "description": "Select by release number"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "per_page": {
              "default": 200,
              "type": "number"
          }
      },
      "tags": [],
      "description": "List packages for a repo",
      "enabled": true,
      "entry_point": "list_packages.py",
      "notify": {},
      "uid": "action:packagecloud:list_packages",
      "pack": "packagecloud",
      "ref": "packagecloud.list_packages",
      "id": "5b87f8150a8b8a567f589129",
      "runner_type": "python-script"
  },
  {
      "name": "show_package",
      "parameters": {
          "username": {
              "type": "string",
              "description": "Username required by basic authentication."
          },
          "package_revision": {
              "required": true,
              "type": "string"
          },
          "cookies": {
              "type": "object",
              "description": "Optional cookies to send with the request."
          },
          "http_proxy": {
              "type": "string",
              "description": "URL of HTTP proxy to use (e.g. http://10.10.1.10:3128)."
          },
          "package": {
              "required": true,
              "type": "string"
          },
          "url": {
              "default": "https://{{api_token}}:@packagecloud.io/api/v1/repos/{{repo}}/package/{{package_type}}/{{distro}}/{{distro_version}}/{{package}}/{{arch}}/{{package_version}}{% if distro == \"el\" %}/{% else %}-{% endif %}{{package_revision}}.json",
              "required": true,
              "type": "string",
              "description": "URL to the HTTP endpoint.",
              "immutable": true
          },
          "package_version": {
              "required": true,
              "type": "string"
          },
          "package_type": {
              "required": true,
              "type": "string",
              "enum": [
                  "deb",
                  "rpm"
              ]
          },
          "distro_version": {
              "required": true,
              "type": "string"
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Name of the packagecloud repo"
          },
          "https_proxy": {
              "type": "string",
              "description": "URL of HTTPS proxy to use (e.g. http://10.10.1.10:3128)."
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "debian",
                  "el",
                  "ubuntu"
              ]
          },
          "api_token": {
              "default": "{{st2kv.system.pkg_cloud_token}}",
              "type": "string",
              "description": "Token to access the packagecloud API"
          },
          "allow_redirects": {
              "default": false,
              "type": "boolean",
              "description": "Set to True if POST/PUT/DELETE redirect following is allowed."
          },
          "password": {
              "secret": true,
              "type": "string",
              "description": "Password required by basic authentication."
          },
          "arch": {
              "required": true,
              "type": "string",
              "enum": [
                  "x86_64",
                  "amd64"
              ]
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification."
          },
          "headers": {
              "type": "object",
              "description": "HTTP headers for the request."
          }
      },
      "tags": [],
      "description": "Show package detail",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:packagecloud:show_package",
      "pack": "packagecloud",
      "ref": "packagecloud.show_package",
      "id": "5b87f8150a8b8a567f58912a",
      "runner_type": "http-request"
  },
  {
      "name": "delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "packs": {
              "items": {
                  "type": "string"
              },
              "required": true,
              "type": "array"
          },
          "abs_repo_base": {
              "default": "/opt/stackstorm/packs/",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Deletes the pack from local content repository.",
      "enabled": true,
      "entry_point": "pack_mgmt/delete.py",
      "notify": {},
      "uid": "action:packs:delete",
      "pack": "packs",
      "ref": "packs.delete",
      "id": "5b87f7d80a8b8a55c6191dc3",
      "runner_type": "python-script"
  },
  {
      "name": "download",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "packs": {
              "items": {
                  "type": "string"
              },
              "required": true,
              "type": "array"
          },
          "abs_repo_base": {
              "default": "/opt/stackstorm/packs/",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "force": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Set to True to force install the pack and skip StackStorm version compatibility check"
          },
          "verifyssl": {
              "default": true,
              "type": "boolean"
          }
      },
      "tags": [],
      "description": "Downloads packs and places it in the local content repository.",
      "enabled": true,
      "entry_point": "pack_mgmt/download.py",
      "notify": {},
      "uid": "action:packs:download",
      "pack": "packs",
      "ref": "packs.download",
      "id": "5b87f7d80a8b8a55c6191dc4",
      "runner_type": "python-script"
  },
  {
      "name": "get",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "pack": {
              "required": true,
              "type": "string",
              "description": "Name of pack to lookup"
          }
      },
      "tags": [],
      "description": "Get information about installed pack.",
      "enabled": true,
      "entry_point": "pack_mgmt/get_installed.py",
      "notify": {},
      "uid": "action:packs:get",
      "pack": "packs",
      "ref": "packs.get",
      "id": "5b87f7d80a8b8a55c6191dc5",
      "runner_type": "python-script"
  },
  {
      "name": "get_config",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Returns config variables",
      "enabled": true,
      "entry_point": "get_config.py",
      "notify": {},
      "uid": "action:packs:get_config",
      "pack": "packs",
      "ref": "packs.get_config",
      "id": "5b87f7d80a8b8a55c6191dc6",
      "runner_type": "python-script"
  },
  {
      "name": "install",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "force": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Set to True to force install the pack and skip StackStorm version compatibility check and also delete and ignore lock file if one exists."
          },
          "packs": {
              "items": {
                  "type": "string"
              },
              "required": true,
              "type": "array",
              "description": "Name of the pack in Exchange or a git repo URL."
          },
          "register": {
              "default": "all",
              "type": "string",
              "description": "Possible options are all, sensors, actions, rules, aliases, runners, triggers, rule_types, policiy_types, policies, configs."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "env": {
              "required": false,
              "type": "object",
              "description": "Optional environment variables."
          },
          "python3": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Use Python 3 binary when creating a virtualenv for this pack."
          }
      },
      "tags": [],
      "description": "Installs or upgrades a pack into local content repository, either by git URL or a short name matching an index entry. Will download pack, load the actions, sensors and rules from the pack. Note that install requires reboot of some st2 services.",
      "enabled": true,
      "entry_point": "workflows/install.yaml",
      "notify": {},
      "uid": "action:packs:install",
      "pack": "packs",
      "ref": "packs.install",
      "id": "5b87f7d80a8b8a55c6191dc7",
      "runner_type": "action-chain"
  },
  {
      "name": "load",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "packs": {
              "items": {
                  "type": "string"
              },
              "type": "array",
              "description": "A list of packs to register / load resources from."
          },
          "register": {
              "default": "all",
              "type": "string",
              "description": "Possible options are all, sensors, actions, rules, aliases, runners, triggers, rule_types, policiy_types, policies, configs."
          },
          "timeout": {
              "default": 300,
              "type": "integer",
              "description": "Make sure that all pack content is loaded within specified timeout"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Action that reloads all st2 content.",
      "enabled": true,
      "entry_point": "pack_mgmt/register.py",
      "notify": {},
      "uid": "action:packs:load",
      "pack": "packs",
      "ref": "packs.load",
      "id": "5b87f7d80a8b8a55c6191dc8",
      "runner_type": "python-script"
  },
  {
      "name": "restart_component",
      "parameters": {
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "cmd": {
              "default": "st2ctl restart-component {{servicename}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the host.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "servicename": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the command will be executed in"
          }
      },
      "tags": [],
      "description": "Action that restarts st2 service.",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:packs:restart_component",
      "pack": "packs",
      "ref": "packs.restart_component",
      "id": "5b87f7d80a8b8a55c6191dc9",
      "runner_type": "local-shell-cmd"
  },
  {
      "name": "search",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "query": {
              "required": true,
              "type": "string",
              "description": "A word or a phrase to search for."
          }
      },
      "tags": [],
      "description": "Search the index for a pack with any attribute matching the query.",
      "enabled": true,
      "entry_point": "pack_mgmt/search.py",
      "notify": {},
      "uid": "action:packs:search",
      "pack": "packs",
      "ref": "packs.search",
      "id": "5b87f7d80a8b8a55c6191dca",
      "runner_type": "python-script"
  },
  {
      "name": "setup_virtualenv",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "default": null,
              "required": false,
              "type": "object",
              "description": "Optional environment variables"
          },
          "packs": {
              "items": {
                  "type": "string"
              },
              "type": "array",
              "description": "List of packs to create virtualenv for."
          },
          "no_download": {
              "default": true,
              "required": false,
              "type": "boolean",
              "description": "Use version of pip which is already on the system instead of downloading the latest version from PyPi when creating a virtual environment."
          },
          "update": {
              "default": false,
              "type": "boolean",
              "description": "Check this option if the virtual environment already exists and if you only want to perform an update and installation of new dependencies. If you don't check this option, the virtual environment will be destroyed then re-created. If you check this and the virtual environment doesn't exist, it will create it."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "python3": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Use Python 3 binary when creating a virtualenv for this pack."
          }
      },
      "tags": [],
      "description": "Set up virtual environment for the provided packs",
      "enabled": true,
      "entry_point": "pack_mgmt/setup_virtualenv.py",
      "notify": {},
      "uid": "action:packs:setup_virtualenv",
      "pack": "packs",
      "ref": "packs.setup_virtualenv",
      "id": "5b87f7d80a8b8a55c6191dcb",
      "runner_type": "python-script"
  },
  {
      "name": "show",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "pack": {
              "required": true,
              "type": "string",
              "description": "Name of pack to lookup"
          }
      },
      "tags": [],
      "description": "Get detailed information about pack from the remote StackStorm exchange index.",
      "enabled": true,
      "entry_point": "pack_mgmt/show_remote.py",
      "notify": {},
      "uid": "action:packs:show",
      "pack": "packs",
      "ref": "packs.show",
      "id": "5b87f7d80a8b8a55c6191dcc",
      "runner_type": "python-script"
  },
  {
      "name": "uninstall",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "packs": {
              "items": {
                  "type": "string"
              },
              "required": true,
              "type": "array"
          }
      },
      "tags": [],
      "description": "Uninstalls packs from local content repository. Removes pack and content from st2. Note that uninstall require reboot of some st2 services.",
      "enabled": true,
      "entry_point": "workflows/uninstall.yaml",
      "notify": {},
      "uid": "action:packs:uninstall",
      "pack": "packs",
      "ref": "packs.uninstall",
      "id": "5b87f7d80a8b8a55c6191dcd",
      "runner_type": "action-chain"
  },
  {
      "name": "unload",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "packs": {
              "items": {
                  "type": "string"
              },
              "required": true,
              "type": "array"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Unregisters all content from a pack.",
      "enabled": true,
      "entry_point": "pack_mgmt/unload.py",
      "notify": {},
      "uid": "action:packs:unload",
      "pack": "packs",
      "ref": "packs.unload",
      "id": "5b87f7d80a8b8a55c6191dce",
      "runner_type": "python-script"
  },
  {
      "name": "update_virtualenv",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "packs": {
              "items": {
                  "type": "string"
              },
              "type": "array"
          },
          "update": {
              "default": true,
              "type": "boolean",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Update / reinstall Python dependencies listed in requirements.txt inside the pack virtual environment",
      "enabled": true,
      "entry_point": "pack_mgmt/setup_virtualenv.py",
      "notify": {},
      "uid": "action:packs:update_virtualenv",
      "pack": "packs",
      "ref": "packs.update_virtualenv",
      "id": "5b87f7d80a8b8a55c6191dcf",
      "runner_type": "python-script"
  },
  {
      "name": "virtualenv_prerun",
      "parameters": {
          "packs_status": {
              "type": "object"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Transformation step to conver packs_status to list of packs.",
      "enabled": true,
      "entry_point": "pack_mgmt/virtualenv_setup_prerun.py",
      "notify": {},
      "uid": "action:packs:virtualenv_prerun",
      "pack": "packs",
      "ref": "packs.virtualenv_prerun",
      "id": "5b87f7d80a8b8a55c6191dd0",
      "runner_type": "python-script"
  },
  {
      "name": "aggregate_list",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "List Sensu Aggregate Stats",
      "enabled": true,
      "entry_point": "aggregate_list.py",
      "notify": {},
      "uid": "action:sensu:aggregate_list",
      "pack": "sensu",
      "ref": "sensu.aggregate_list",
      "id": "5b87f83f0a8b8a567f5894af",
      "runner_type": "python-script"
  },
  {
      "name": "check_aggregates",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "age": {
              "type": "string",
              "description": "Maximum age of results to return"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "check": {
              "required": true,
              "type": "string",
              "description": "The client name"
          }
      },
      "tags": [],
      "description": "Get Sensu check aggregates",
      "enabled": true,
      "entry_point": "aggregate_check.py",
      "notify": {},
      "uid": "action:sensu:check_aggregates",
      "pack": "sensu",
      "ref": "sensu.check_aggregates",
      "id": "5b87f83f0a8b8a567f5894ad",
      "runner_type": "python-script"
  },
  {
      "name": "check_aggregates_delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "check": {
              "required": true,
              "type": "string",
              "description": "The client name"
          }
      },
      "tags": [],
      "description": "Delete Sensu check aggregates",
      "enabled": true,
      "entry_point": "aggregate_check_delete.py",
      "notify": {},
      "uid": "action:sensu:check_aggregates_delete",
      "pack": "sensu",
      "ref": "sensu.check_aggregates_delete",
      "id": "5b87f83f0a8b8a567f5894ae",
      "runner_type": "python-script"
  },
  {
      "name": "check_info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "check": {
              "required": true,
              "type": "string",
              "description": "The check name"
          }
      },
      "tags": [],
      "description": "Get Sensu check info",
      "enabled": true,
      "entry_point": "check_info.py",
      "notify": {},
      "uid": "action:sensu:check_info",
      "pack": "sensu",
      "ref": "sensu.check_info",
      "id": "5b87f83f0a8b8a567f5894b0",
      "runner_type": "python-script"
  },
  {
      "name": "check_list",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "List Sensu checks",
      "enabled": true,
      "entry_point": "check_list.py",
      "notify": {},
      "uid": "action:sensu:check_list",
      "pack": "sensu",
      "ref": "sensu.check_list",
      "id": "5b87f83f0a8b8a567f5894b1",
      "runner_type": "python-script"
  },
  {
      "name": "check_request",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "subscribers": {
              "required": true,
              "type": "string",
              "description": "The subscribers to run the check on"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "check": {
              "required": true,
              "type": "string",
              "description": "The check name"
          }
      },
      "tags": [],
      "description": "Schedule a Sensu check request",
      "enabled": true,
      "entry_point": "check_request.py",
      "notify": {},
      "uid": "action:sensu:check_request",
      "pack": "sensu",
      "ref": "sensu.check_request",
      "id": "5b87f83f0a8b8a567f5894b2",
      "runner_type": "python-script"
  },
  {
      "name": "client_delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "The client name"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Delete a Sensu client",
      "enabled": true,
      "entry_point": "client_delete.py",
      "notify": {},
      "uid": "action:sensu:client_delete",
      "pack": "sensu",
      "ref": "sensu.client_delete",
      "id": "5b87f83f0a8b8a567f5894b3",
      "runner_type": "python-script"
  },
  {
      "name": "client_history",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "The client name"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Get Sensu client history",
      "enabled": true,
      "entry_point": "client_history.py",
      "notify": {},
      "uid": "action:sensu:client_history",
      "pack": "sensu",
      "ref": "sensu.client_history",
      "id": "5b87f83f0a8b8a567f5894b4",
      "runner_type": "python-script"
  },
  {
      "name": "client_info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "The client name"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Get Sensu client info",
      "enabled": true,
      "entry_point": "client_info.py",
      "notify": {},
      "uid": "action:sensu:client_info",
      "pack": "sensu",
      "ref": "sensu.client_info",
      "id": "5b87f83f0a8b8a567f5894b5",
      "runner_type": "python-script"
  },
  {
      "name": "client_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "limit": {
              "default": null,
              "type": "integer",
              "description": "The number of clients to return."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "offset": {
              "default": null,
              "type": "integer",
              "description": "The number of clients to offset before returning items."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "List Sensu clients",
      "enabled": true,
      "entry_point": "client_list.py",
      "notify": {},
      "uid": "action:sensu:client_list",
      "pack": "sensu",
      "ref": "sensu.client_list",
      "id": "5b87f83f0a8b8a567f5894b6",
      "runner_type": "python-script"
  },
  {
      "name": "event_client_list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "The client name"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "List Sensu events for a given client",
      "enabled": true,
      "entry_point": "event_client_list.py",
      "notify": {},
      "uid": "action:sensu:event_client_list",
      "pack": "sensu",
      "ref": "sensu.event_client_list",
      "id": "5b87f83f0a8b8a567f5894b7",
      "runner_type": "python-script"
  },
  {
      "name": "event_delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "The client name"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "check": {
              "required": true,
              "type": "string",
              "description": "The check name"
          }
      },
      "tags": [],
      "description": "Delete a Sensu event",
      "enabled": true,
      "entry_point": "event_delete.py",
      "notify": {},
      "uid": "action:sensu:event_delete",
      "pack": "sensu",
      "ref": "sensu.event_delete",
      "id": "5b87f83f0a8b8a567f5894b8",
      "runner_type": "python-script"
  },
  {
      "name": "event_info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "The client name"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "check": {
              "required": true,
              "type": "string",
              "description": "The check to get information on"
          }
      },
      "tags": [],
      "description": "Get Sensu event info",
      "enabled": true,
      "entry_point": "event_info.py",
      "notify": {},
      "uid": "action:sensu:event_info",
      "pack": "sensu",
      "ref": "sensu.event_info",
      "id": "5b87f83f0a8b8a567f5894b9",
      "runner_type": "python-script"
  },
  {
      "name": "event_list",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "List Sensu events",
      "enabled": true,
      "entry_point": "event_list.py",
      "notify": {},
      "uid": "action:sensu:event_list",
      "pack": "sensu",
      "ref": "sensu.event_list",
      "id": "5b87f83f0a8b8a567f5894ba",
      "runner_type": "python-script"
  },
  {
      "name": "event_resolve",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "The client name"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "check": {
              "required": true,
              "type": "string",
              "description": "The check name"
          }
      },
      "tags": [],
      "description": "Resolve a Sensu event",
      "enabled": true,
      "entry_point": "event_delete.py",
      "notify": {},
      "uid": "action:sensu:event_resolve",
      "pack": "sensu",
      "ref": "sensu.event_resolve",
      "id": "5b87f83f0a8b8a567f5894bb",
      "runner_type": "python-script"
  },
  {
      "name": "health",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "consumers": {
              "default": 2,
              "type": "integer",
              "description": "The minimum number of transport consumers to be considered healthy."
          },
          "messages": {
              "default": 100,
              "type": "integer",
              "description": "The maximum number of transport queued messages to be considered healthy."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Sensu System Health",
      "enabled": true,
      "entry_point": "health.py",
      "notify": {},
      "uid": "action:sensu:health",
      "pack": "sensu",
      "ref": "sensu.health",
      "id": "5b87f83f0a8b8a567f5894bc",
      "runner_type": "python-script"
  },
  {
      "name": "info",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Sensu System Info",
      "enabled": true,
      "entry_point": "info.py",
      "notify": {},
      "uid": "action:sensu:info",
      "pack": "sensu",
      "ref": "sensu.info",
      "id": "5b87f83f0a8b8a567f5894bd",
      "runner_type": "python-script"
  },
  {
      "name": "silence",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "Client to silence."
          },
          "expiration": {
              "type": "integer",
              "description": "Time to expire (in seconds).  If blank, stash will not expire."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "message": {
              "default": "Stash created by StackStorm",
              "type": "string",
              "description": "Message to post with the silence stash."
          },
          "check": {
              "type": "string",
              "description": "The optional check to silence on the specified client."
          }
      },
      "tags": [],
      "description": "Silence a Sensu client or check",
      "enabled": true,
      "entry_point": "silence.py",
      "notify": {},
      "uid": "action:sensu:silence",
      "pack": "sensu",
      "ref": "sensu.silence",
      "id": "5b87f83f0a8b8a567f5894be",
      "runner_type": "python-script"
  },
  {
      "name": "unsilence",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "client": {
              "required": true,
              "type": "string",
              "description": "The client to unsilence."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "check": {
              "type": "string",
              "description": "Optional check to unsilence."
          }
      },
      "tags": [],
      "description": "Unsilence a Sensu client or check",
      "enabled": true,
      "entry_point": "unsilence.py",
      "notify": {},
      "uid": "action:sensu:unsilence",
      "pack": "sensu",
      "ref": "sensu.unsilence",
      "id": "5b87f83f0a8b8a567f5894bf",
      "runner_type": "python-script"
  },
  {
      "name": "api.test",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "api.test",
              "type": "string",
              "immutable": true
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "error": {
              "required": false,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "foo": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Checks API calling code.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:api.test",
      "pack": "slack",
      "ref": "slack.api.test",
      "id": "5b87f84a0a8b8a567f5894ca",
      "runner_type": "python-script"
  },
  {
      "name": "apps.permissions.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "apps.permissions.info",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Returns list of permissions this app has on a team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:apps.permissions.info",
      "pack": "slack",
      "ref": "slack.apps.permissions.info",
      "id": "5b87f84a0a8b8a567f5894cb",
      "runner_type": "python-script"
  },
  {
      "name": "apps.permissions.request",
      "parameters": {
          "scopes": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "apps.permissions.request",
              "type": "string",
              "immutable": true
          },
          "trigger_id": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Allows an app to request additional scopes",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:apps.permissions.request",
      "pack": "slack",
      "ref": "slack.apps.permissions.request",
      "id": "5b87f84a0a8b8a567f5894cc",
      "runner_type": "python-script"
  },
  {
      "name": "apps.permissions.resources.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "apps.permissions.resources.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Returns list of resource grants this app has on a team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:apps.permissions.resources.list",
      "pack": "slack",
      "ref": "slack.apps.permissions.resources.list",
      "id": "5b87f84a0a8b8a567f5894cd",
      "runner_type": "python-script"
  },
  {
      "name": "apps.permissions.scopes.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "apps.permissions.scopes.list",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Returns list of scopes this app has on a team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:apps.permissions.scopes.list",
      "pack": "slack",
      "ref": "slack.apps.permissions.scopes.list",
      "id": "5b87f84a0a8b8a567f5894ce",
      "runner_type": "python-script"
  },
  {
      "name": "apps.permissions.users.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "apps.permissions.users.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Returns list of user grants and corresponding scopes this app has on a team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:apps.permissions.users.list",
      "pack": "slack",
      "ref": "slack.apps.permissions.users.list",
      "id": "5b87f84a0a8b8a567f5894cf",
      "runner_type": "python-script"
  },
  {
      "name": "apps.permissions.users.request",
      "parameters": {
          "scopes": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "apps.permissions.users.request",
              "type": "string",
              "immutable": true
          },
          "trigger_id": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Enables an app to trigger a permissions modal to grant an app access to a user access scope.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:apps.permissions.users.request",
      "pack": "slack",
      "ref": "slack.apps.permissions.users.request",
      "id": "5b87f84a0a8b8a567f5894d0",
      "runner_type": "python-script"
  },
  {
      "name": "auth.revoke",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "auth.revoke",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "test": {
              "required": false,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Revokes a token.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:auth.revoke",
      "pack": "slack",
      "ref": "slack.auth.revoke",
      "id": "5b87f84a0a8b8a567f5894d1",
      "runner_type": "python-script"
  },
  {
      "name": "auth.test",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "auth.test",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Checks authentication & identity.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:auth.test",
      "pack": "slack",
      "ref": "slack.auth.test",
      "id": "5b87f84a0a8b8a567f5894d2",
      "runner_type": "python-script"
  },
  {
      "name": "bots.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "bots.info",
              "type": "string",
              "immutable": true
          },
          "bot": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Gets information about a bot user.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:bots.info",
      "pack": "slack",
      "ref": "slack.bots.info",
      "id": "5b87f84a0a8b8a567f5894d3",
      "runner_type": "python-script"
  },
  {
      "name": "channels.archive",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "channels.archive",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Archives a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.archive",
      "pack": "slack",
      "ref": "slack.channels.archive",
      "id": "5b87f84a0a8b8a567f5894d4",
      "runner_type": "python-script"
  },
  {
      "name": "channels.create",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "channels.create",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "validate": {
              "required": false,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Creates a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.create",
      "pack": "slack",
      "ref": "slack.channels.create",
      "id": "5b87f84a0a8b8a567f5894d5",
      "runner_type": "python-script"
  },
  {
      "name": "channels.history",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "unreads": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "inclusive": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "channels.history",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "oldest": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "latest": {
              "default": "now",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Fetches history of messages and events from a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.history",
      "pack": "slack",
      "ref": "slack.channels.history",
      "id": "5b87f84a0a8b8a567f5894d6",
      "runner_type": "python-script"
  },
  {
      "name": "channels.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "channels.info",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "include_locale": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Gets information about a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.info",
      "pack": "slack",
      "ref": "slack.channels.info",
      "id": "5b87f84a0a8b8a567f5894d7",
      "runner_type": "python-script"
  },
  {
      "name": "channels.invite",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "channels.invite",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Invites a user to a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.invite",
      "pack": "slack",
      "ref": "slack.channels.invite",
      "id": "5b87f84a0a8b8a567f5894d8",
      "runner_type": "python-script"
  },
  {
      "name": "channels.join",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "channels.join",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "validate": {
              "required": false,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Joins a channel, creating it if needed.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.join",
      "pack": "slack",
      "ref": "slack.channels.join",
      "id": "5b87f84a0a8b8a567f5894d9",
      "runner_type": "python-script"
  },
  {
      "name": "channels.kick",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "channels.kick",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Removes a user from a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.kick",
      "pack": "slack",
      "ref": "slack.channels.kick",
      "id": "5b87f84a0a8b8a567f5894da",
      "runner_type": "python-script"
  },
  {
      "name": "channels.leave",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "channels.leave",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Leaves a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.leave",
      "pack": "slack",
      "ref": "slack.channels.leave",
      "id": "5b87f84a0a8b8a567f5894db",
      "runner_type": "python-script"
  },
  {
      "name": "channels.list",
      "parameters": {
          "exclude_members": {
              "default": "false",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "channels.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "exclude_archived": {
              "default": "false",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Lists all channels in a Slack team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.list",
      "pack": "slack",
      "ref": "slack.channels.list",
      "id": "5b87f84a0a8b8a567f5894dc",
      "runner_type": "python-script"
  },
  {
      "name": "channels.mark",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "channels.mark",
              "type": "string",
              "immutable": true
          },
          "ts": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the read cursor in a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.mark",
      "pack": "slack",
      "ref": "slack.channels.mark",
      "id": "5b87f84a0a8b8a567f5894dd",
      "runner_type": "python-script"
  },
  {
      "name": "channels.rename",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "channels.rename",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "validate": {
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Renames a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.rename",
      "pack": "slack",
      "ref": "slack.channels.rename",
      "id": "5b87f84a0a8b8a567f5894de",
      "runner_type": "python-script"
  },
  {
      "name": "channels.replies",
      "parameters": {
          "thread_ts": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "channels.replies",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieve a thread of messages posted to a channel",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.replies",
      "pack": "slack",
      "ref": "slack.channels.replies",
      "id": "5b87f84a0a8b8a567f5894df",
      "runner_type": "python-script"
  },
  {
      "name": "channels.setPurpose",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "channels.setPurpose",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "purpose": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the purpose for a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.setPurpose",
      "pack": "slack",
      "ref": "slack.channels.setPurpose",
      "id": "5b87f84a0a8b8a567f5894e0",
      "runner_type": "python-script"
  },
  {
      "name": "channels.setTopic",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "channels.setTopic",
              "type": "string",
              "immutable": true
          },
          "topic": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the topic for a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.setTopic",
      "pack": "slack",
      "ref": "slack.channels.setTopic",
      "id": "5b87f84a0a8b8a567f5894e1",
      "runner_type": "python-script"
  },
  {
      "name": "channels.unarchive",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "channels.unarchive",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Unarchives a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:channels.unarchive",
      "pack": "slack",
      "ref": "slack.channels.unarchive",
      "id": "5b87f84a0a8b8a567f5894e2",
      "runner_type": "python-script"
  },
  {
      "name": "chat.delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "as_user": {
              "required": false,
              "type": "string"
          },
          "ts": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "chat.delete",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Deletes a message.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:chat.delete",
      "pack": "slack",
      "ref": "slack.chat.delete",
      "id": "5b87f84a0a8b8a567f5894e3",
      "runner_type": "python-script"
  },
  {
      "name": "chat.getPermalink",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "chat.getPermalink",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "message_ts": {
              "required": true,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieve a permalink URL for a specific extant message",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:chat.getPermalink",
      "pack": "slack",
      "ref": "slack.chat.getPermalink",
      "id": "5b87f84a0a8b8a567f5894e4",
      "runner_type": "python-script"
  },
  {
      "name": "chat.meMessage",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "chat.meMessage",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "text": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Share a me message into a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:chat.meMessage",
      "pack": "slack",
      "ref": "slack.chat.meMessage",
      "id": "5b87f84a0a8b8a567f5894e5",
      "runner_type": "python-script"
  },
  {
      "name": "chat.postEphemeral",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "chat.postEphemeral",
              "type": "string",
              "immutable": true
          },
          "link_names": {
              "required": false,
              "type": "string"
          },
          "parse": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "text": {
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "as_user": {
              "required": false,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "attachments": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sends an ephemeral message to a user in a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:chat.postEphemeral",
      "pack": "slack",
      "ref": "slack.chat.postEphemeral",
      "id": "5b87f84a0a8b8a567f5894e6",
      "runner_type": "python-script"
  },
  {
      "name": "chat.postMessage",
      "parameters": {
          "attachments": {
              "required": false,
              "type": "string"
          },
          "unfurl_links": {
              "required": false,
              "type": "string"
          },
          "text": {
              "required": true,
              "type": "string"
          },
          "unfurl_media": {
              "required": false,
              "type": "string"
          },
          "parse": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "icon_url": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "as_user": {
              "required": false,
              "type": "string"
          },
          "mrkdwn": {
              "default": "true",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "username": {
              "required": false,
              "type": "string"
          },
          "icon_emoji": {
              "required": false,
              "type": "string"
          },
          "link_names": {
              "required": false,
              "type": "string"
          },
          "reply_broadcast": {
              "required": false,
              "type": "string"
          },
          "thread_ts": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "chat.postMessage",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          }
      },
      "tags": [],
      "description": "Sends a message to a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:chat.postMessage",
      "pack": "slack",
      "ref": "slack.chat.postMessage",
      "id": "5b87f84a0a8b8a567f5894e7",
      "runner_type": "python-script"
  },
  {
      "name": "chat.unfurl",
      "parameters": {
          "user_auth_message": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "chat.unfurl",
              "type": "string",
              "immutable": true
          },
          "unfurls": {
              "required": true,
              "type": "string"
          },
          "ts": {
              "required": true,
              "type": "string"
          },
          "user_auth_url": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "user_auth_required": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Provide custom unfurl behavior for user-posted URLs",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:chat.unfurl",
      "pack": "slack",
      "ref": "slack.chat.unfurl",
      "id": "5b87f84a0a8b8a567f5894e8",
      "runner_type": "python-script"
  },
  {
      "name": "chat.update",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "chat.update",
              "type": "string",
              "immutable": true
          },
          "link_names": {
              "required": false,
              "type": "string"
          },
          "ts": {
              "required": true,
              "type": "string"
          },
          "parse": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "text": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "as_user": {
              "required": false,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "attachments": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Updates a message.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:chat.update",
      "pack": "slack",
      "ref": "slack.chat.update",
      "id": "5b87f84a0a8b8a567f5894e9",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.archive",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "conversations.archive",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Archives a conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.archive",
      "pack": "slack",
      "ref": "slack.conversations.archive",
      "id": "5b87f84a0a8b8a567f5894ea",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "conversations.close",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Closes a direct message or multi-person direct message.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.close",
      "pack": "slack",
      "ref": "slack.conversations.close",
      "id": "5b87f84a0a8b8a567f5894eb",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.create",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "conversations.create",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "user_ids": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "is_private": {
              "required": false,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Initiates a public or private channel-based conversation",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.create",
      "pack": "slack",
      "ref": "slack.conversations.create",
      "id": "5b87f84a0a8b8a567f5894ec",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.history",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "inclusive": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "conversations.history",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "oldest": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "latest": {
              "default": "now",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Fetches a conversation's history of messages and events.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.history",
      "pack": "slack",
      "ref": "slack.conversations.history",
      "id": "5b87f84b0a8b8a567f5894ed",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "conversations.info",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "include_locale": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieve information about a conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.info",
      "pack": "slack",
      "ref": "slack.conversations.info",
      "id": "5b87f84b0a8b8a567f5894ee",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.invite",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "conversations.invite",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "users": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Invites users to a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.invite",
      "pack": "slack",
      "ref": "slack.conversations.invite",
      "id": "5b87f84b0a8b8a567f5894ef",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.join",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "conversations.join",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Joins an existing conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.join",
      "pack": "slack",
      "ref": "slack.conversations.join",
      "id": "5b87f84b0a8b8a567f5894f0",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.kick",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "conversations.kick",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Removes a user from a conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.kick",
      "pack": "slack",
      "ref": "slack.conversations.kick",
      "id": "5b87f84b0a8b8a567f5894f1",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.leave",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "conversations.leave",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Leaves a conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.leave",
      "pack": "slack",
      "ref": "slack.conversations.leave",
      "id": "5b87f84b0a8b8a567f5894f2",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "conversations.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "exclude_archived": {
              "default": "false",
              "required": false,
              "type": "string"
          },
          "types": {
              "default": "public_channel",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Lists all channels in a Slack team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.list",
      "pack": "slack",
      "ref": "slack.conversations.list",
      "id": "5b87f84b0a8b8a567f5894f3",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.members",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "conversations.members",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieve members of a conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.members",
      "pack": "slack",
      "ref": "slack.conversations.members",
      "id": "5b87f84b0a8b8a567f5894f4",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.open",
      "parameters": {
          "return_im": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "conversations.open",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": false,
              "type": "string"
          },
          "users": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Opens or resumes a direct message or multi-person direct message.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.open",
      "pack": "slack",
      "ref": "slack.conversations.open",
      "id": "5b87f84b0a8b8a567f5894f5",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.rename",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "conversations.rename",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Renames a conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.rename",
      "pack": "slack",
      "ref": "slack.conversations.rename",
      "id": "5b87f84b0a8b8a567f5894f6",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.replies",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "inclusive": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "conversations.replies",
              "type": "string",
              "immutable": true
          },
          "ts": {
              "required": true,
              "type": "string"
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "10",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "oldest": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "latest": {
              "default": "now",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieve a thread of messages posted to a conversation",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.replies",
      "pack": "slack",
      "ref": "slack.conversations.replies",
      "id": "5b87f84b0a8b8a567f5894f7",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.setPurpose",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "conversations.setPurpose",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "purpose": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the purpose for a conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.setPurpose",
      "pack": "slack",
      "ref": "slack.conversations.setPurpose",
      "id": "5b87f84b0a8b8a567f5894f8",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.setTopic",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "conversations.setTopic",
              "type": "string",
              "immutable": true
          },
          "topic": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the topic for a conversation.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.setTopic",
      "pack": "slack",
      "ref": "slack.conversations.setTopic",
      "id": "5b87f84b0a8b8a567f5894f9",
      "runner_type": "python-script"
  },
  {
      "name": "conversations.unarchive",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "conversations.unarchive",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Reverses conversation archival.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:conversations.unarchive",
      "pack": "slack",
      "ref": "slack.conversations.unarchive",
      "id": "5b87f84b0a8b8a567f5894fa",
      "runner_type": "python-script"
  },
  {
      "name": "dialog.open",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "dialog.open",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "trigger_id": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "dialog": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Open a dialog with a user",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:dialog.open",
      "pack": "slack",
      "ref": "slack.dialog.open",
      "id": "5b87f84b0a8b8a567f5894fb",
      "runner_type": "python-script"
  },
  {
      "name": "dnd.endDnd",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "dnd.endDnd",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Ends the current user's Do Not Disturb session immediately.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:dnd.endDnd",
      "pack": "slack",
      "ref": "slack.dnd.endDnd",
      "id": "5b87f84b0a8b8a567f5894fc",
      "runner_type": "python-script"
  },
  {
      "name": "dnd.endSnooze",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "dnd.endSnooze",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Ends the current user's snooze mode immediately.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:dnd.endSnooze",
      "pack": "slack",
      "ref": "slack.dnd.endSnooze",
      "id": "5b87f84b0a8b8a567f5894fd",
      "runner_type": "python-script"
  },
  {
      "name": "dnd.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "dnd.info",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Retrieves a user's current Do Not Disturb status.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:dnd.info",
      "pack": "slack",
      "ref": "slack.dnd.info",
      "id": "5b87f84b0a8b8a567f5894fe",
      "runner_type": "python-script"
  },
  {
      "name": "dnd.setSnooze",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "dnd.setSnooze",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "num_minutes": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Turns on Do Not Disturb mode for the current user, or changes its duration.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:dnd.setSnooze",
      "pack": "slack",
      "ref": "slack.dnd.setSnooze",
      "id": "5b87f84b0a8b8a567f5894ff",
      "runner_type": "python-script"
  },
  {
      "name": "dnd.teamInfo",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "dnd.teamInfo",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "users": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieves the Do Not Disturb status for users on a team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:dnd.teamInfo",
      "pack": "slack",
      "ref": "slack.dnd.teamInfo",
      "id": "5b87f84b0a8b8a567f589500",
      "runner_type": "python-script"
  },
  {
      "name": "emoji.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "emoji.list",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Lists custom emoji for a team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:emoji.list",
      "pack": "slack",
      "ref": "slack.emoji.list",
      "id": "5b87f84b0a8b8a567f589501",
      "runner_type": "python-script"
  },
  {
      "name": "files.comments.add",
      "parameters": {
          "comment": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "files.comments.add",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Add a comment to an existing file.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.comments.add",
      "pack": "slack",
      "ref": "slack.files.comments.add",
      "id": "5b87f84b0a8b8a567f589502",
      "runner_type": "python-script"
  },
  {
      "name": "files.comments.delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "files.comments.delete",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "id": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Deletes an existing comment on a file.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.comments.delete",
      "pack": "slack",
      "ref": "slack.files.comments.delete",
      "id": "5b87f84b0a8b8a567f589503",
      "runner_type": "python-script"
  },
  {
      "name": "files.comments.edit",
      "parameters": {
          "comment": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "files.comments.edit",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "id": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Edit an existing file comment.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.comments.edit",
      "pack": "slack",
      "ref": "slack.files.comments.edit",
      "id": "5b87f84b0a8b8a567f589504",
      "runner_type": "python-script"
  },
  {
      "name": "files.delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "files.delete",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Deletes a file.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.delete",
      "pack": "slack",
      "ref": "slack.files.delete",
      "id": "5b87f84b0a8b8a567f589505",
      "runner_type": "python-script"
  },
  {
      "name": "files.info",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "files.info",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Gets information about a team file.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.info",
      "pack": "slack",
      "ref": "slack.files.info",
      "id": "5b87f84b0a8b8a567f589506",
      "runner_type": "python-script"
  },
  {
      "name": "files.list",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "files.list",
              "type": "string",
              "immutable": true
          },
          "ts_to": {
              "default": "now",
              "required": false,
              "type": "string"
          },
          "ts_from": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "types": {
              "default": "all",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": false,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Lists & filters team files.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.list",
      "pack": "slack",
      "ref": "slack.files.list",
      "id": "5b87f84b0a8b8a567f589507",
      "runner_type": "python-script"
  },
  {
      "name": "files.revokePublicURL",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "files.revokePublicURL",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Revokes public/external sharing access for a file",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.revokePublicURL",
      "pack": "slack",
      "ref": "slack.files.revokePublicURL",
      "id": "5b87f84b0a8b8a567f589508",
      "runner_type": "python-script"
  },
  {
      "name": "files.sharedPublicURL",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "files.sharedPublicURL",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Enables a file for public/external sharing.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.sharedPublicURL",
      "pack": "slack",
      "ref": "slack.files.sharedPublicURL",
      "id": "5b87f84b0a8b8a567f589509",
      "runner_type": "python-script"
  },
  {
      "name": "files.upload",
      "parameters": {
          "thread_ts": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "title": {
              "required": false,
              "type": "string"
          },
          "initial_comment": {
              "required": false,
              "type": "string"
          },
          "filetype": {
              "required": false,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "filename": {
              "required": false,
              "type": "string"
          },
          "channels": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "file": {
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "files.upload",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "content": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Uploads or creates a file.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:files.upload",
      "pack": "slack",
      "ref": "slack.files.upload",
      "id": "5b87f84b0a8b8a567f58950a",
      "runner_type": "python-script"
  },
  {
      "name": "groups.archive",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "groups.archive",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Archives a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.archive",
      "pack": "slack",
      "ref": "slack.groups.archive",
      "id": "5b87f84b0a8b8a567f58950b",
      "runner_type": "python-script"
  },
  {
      "name": "groups.create",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "groups.create",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "validate": {
              "required": false,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Creates a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.create",
      "pack": "slack",
      "ref": "slack.groups.create",
      "id": "5b87f84b0a8b8a567f58950c",
      "runner_type": "python-script"
  },
  {
      "name": "groups.createChild",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "groups.createChild",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Clones and archives a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.createChild",
      "pack": "slack",
      "ref": "slack.groups.createChild",
      "id": "5b87f84b0a8b8a567f58950d",
      "runner_type": "python-script"
  },
  {
      "name": "groups.history",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "unreads": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "inclusive": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "groups.history",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "oldest": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "latest": {
              "default": "now",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Fetches history of messages and events from a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.history",
      "pack": "slack",
      "ref": "slack.groups.history",
      "id": "5b87f84b0a8b8a567f58950e",
      "runner_type": "python-script"
  },
  {
      "name": "groups.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "groups.info",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "include_locale": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Gets information about a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.info",
      "pack": "slack",
      "ref": "slack.groups.info",
      "id": "5b87f84b0a8b8a567f58950f",
      "runner_type": "python-script"
  },
  {
      "name": "groups.invite",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "groups.invite",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Invites a user to a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.invite",
      "pack": "slack",
      "ref": "slack.groups.invite",
      "id": "5b87f84b0a8b8a567f589510",
      "runner_type": "python-script"
  },
  {
      "name": "groups.kick",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "groups.kick",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Removes a user from a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.kick",
      "pack": "slack",
      "ref": "slack.groups.kick",
      "id": "5b87f84b0a8b8a567f589511",
      "runner_type": "python-script"
  },
  {
      "name": "groups.leave",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "groups.leave",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Leaves a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.leave",
      "pack": "slack",
      "ref": "slack.groups.leave",
      "id": "5b87f84b0a8b8a567f589512",
      "runner_type": "python-script"
  },
  {
      "name": "groups.list",
      "parameters": {
          "exclude_members": {
              "default": "false",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "groups.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "exclude_archived": {
              "default": "0",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Lists private channels that the calling user has access to.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.list",
      "pack": "slack",
      "ref": "slack.groups.list",
      "id": "5b87f84b0a8b8a567f589513",
      "runner_type": "python-script"
  },
  {
      "name": "groups.mark",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "groups.mark",
              "type": "string",
              "immutable": true
          },
          "ts": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the read cursor in a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.mark",
      "pack": "slack",
      "ref": "slack.groups.mark",
      "id": "5b87f84b0a8b8a567f589514",
      "runner_type": "python-script"
  },
  {
      "name": "groups.open",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "groups.open",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Opens a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.open",
      "pack": "slack",
      "ref": "slack.groups.open",
      "id": "5b87f84b0a8b8a567f589515",
      "runner_type": "python-script"
  },
  {
      "name": "groups.rename",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "groups.rename",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "validate": {
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Renames a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.rename",
      "pack": "slack",
      "ref": "slack.groups.rename",
      "id": "5b87f84b0a8b8a567f589516",
      "runner_type": "python-script"
  },
  {
      "name": "groups.replies",
      "parameters": {
          "thread_ts": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "groups.replies",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieve a thread of messages posted to a private channel",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.replies",
      "pack": "slack",
      "ref": "slack.groups.replies",
      "id": "5b87f84b0a8b8a567f589517",
      "runner_type": "python-script"
  },
  {
      "name": "groups.setPurpose",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "groups.setPurpose",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "purpose": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the purpose for a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.setPurpose",
      "pack": "slack",
      "ref": "slack.groups.setPurpose",
      "id": "5b87f84b0a8b8a567f589518",
      "runner_type": "python-script"
  },
  {
      "name": "groups.setTopic",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "groups.setTopic",
              "type": "string",
              "immutable": true
          },
          "topic": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the topic for a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.setTopic",
      "pack": "slack",
      "ref": "slack.groups.setTopic",
      "id": "5b87f84b0a8b8a567f589519",
      "runner_type": "python-script"
  },
  {
      "name": "groups.unarchive",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "groups.unarchive",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Unarchives a private channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:groups.unarchive",
      "pack": "slack",
      "ref": "slack.groups.unarchive",
      "id": "5b87f84b0a8b8a567f58951a",
      "runner_type": "python-script"
  },
  {
      "name": "im.close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "im.close",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Close a direct message channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:im.close",
      "pack": "slack",
      "ref": "slack.im.close",
      "id": "5b87f84b0a8b8a567f58951b",
      "runner_type": "python-script"
  },
  {
      "name": "im.history",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "unreads": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "inclusive": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "im.history",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "oldest": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "latest": {
              "default": "now",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Fetches history of messages and events from direct message channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:im.history",
      "pack": "slack",
      "ref": "slack.im.history",
      "id": "5b87f84b0a8b8a567f58951c",
      "runner_type": "python-script"
  },
  {
      "name": "im.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "im.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Lists direct message channels for the calling user.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:im.list",
      "pack": "slack",
      "ref": "slack.im.list",
      "id": "5b87f84b0a8b8a567f58951d",
      "runner_type": "python-script"
  },
  {
      "name": "im.mark",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "im.mark",
              "type": "string",
              "immutable": true
          },
          "ts": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the read cursor in a direct message channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:im.mark",
      "pack": "slack",
      "ref": "slack.im.mark",
      "id": "5b87f84b0a8b8a567f58951e",
      "runner_type": "python-script"
  },
  {
      "name": "im.open",
      "parameters": {
          "return_im": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "im.open",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "include_locale": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Opens a direct message channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:im.open",
      "pack": "slack",
      "ref": "slack.im.open",
      "id": "5b87f84b0a8b8a567f58951f",
      "runner_type": "python-script"
  },
  {
      "name": "im.replies",
      "parameters": {
          "thread_ts": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "im.replies",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieve a thread of messages posted to a direct message conversation",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:im.replies",
      "pack": "slack",
      "ref": "slack.im.replies",
      "id": "5b87f84b0a8b8a567f589520",
      "runner_type": "python-script"
  },
  {
      "name": "migration.exchange",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "migration.exchange",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "to_old": {
              "default": "",
              "required": false,
              "type": "string"
          },
          "users": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "For Enterprise Grid workspaces, map local user IDs to global user IDs",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:migration.exchange",
      "pack": "slack",
      "ref": "slack.migration.exchange",
      "id": "5b87f84c0a8b8a567f589521",
      "runner_type": "python-script"
  },
  {
      "name": "mpim.close",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "mpim.close",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Closes a multiparty direct message channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:mpim.close",
      "pack": "slack",
      "ref": "slack.mpim.close",
      "id": "5b87f84c0a8b8a567f589522",
      "runner_type": "python-script"
  },
  {
      "name": "mpim.history",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "unreads": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "inclusive": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "mpim.history",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "oldest": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "channel": {
              "required": true,
              "type": "string"
          },
          "latest": {
              "default": "now",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Fetches history of messages and events from a multiparty direct message.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:mpim.history",
      "pack": "slack",
      "ref": "slack.mpim.history",
      "id": "5b87f84c0a8b8a567f589523",
      "runner_type": "python-script"
  },
  {
      "name": "mpim.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "mpim.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Lists multiparty direct message channels for the calling user.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:mpim.list",
      "pack": "slack",
      "ref": "slack.mpim.list",
      "id": "5b87f84c0a8b8a567f589524",
      "runner_type": "python-script"
  },
  {
      "name": "mpim.mark",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "mpim.mark",
              "type": "string",
              "immutable": true
          },
          "ts": {
              "required": true,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Sets the read cursor in a multiparty direct message channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:mpim.mark",
      "pack": "slack",
      "ref": "slack.mpim.mark",
      "id": "5b87f84c0a8b8a567f589525",
      "runner_type": "python-script"
  },
  {
      "name": "mpim.open",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "mpim.open",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "users": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "This method opens a multiparty direct message.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:mpim.open",
      "pack": "slack",
      "ref": "slack.mpim.open",
      "id": "5b87f84c0a8b8a567f589526",
      "runner_type": "python-script"
  },
  {
      "name": "mpim.replies",
      "parameters": {
          "thread_ts": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "mpim.replies",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieve a thread of messages posted to a direct message conversation from a multiparty direct message.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:mpim.replies",
      "pack": "slack",
      "ref": "slack.mpim.replies",
      "id": "5b87f84c0a8b8a567f589527",
      "runner_type": "python-script"
  },
  {
      "name": "oauth.access",
      "parameters": {
          "code": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "oauth.access",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "redirect_uri": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "client_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "client_secret": {
              "required": true,
              "type": "string"
          },
          "single_channel": {
              "default": "false",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Exchanges a temporary OAuth verifier code for an access token.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:oauth.access",
      "pack": "slack",
      "ref": "slack.oauth.access",
      "id": "5b87f84c0a8b8a567f589528",
      "runner_type": "python-script"
  },
  {
      "name": "oauth.token",
      "parameters": {
          "code": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "oauth.token",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "redirect_uri": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "client_id": {
              "required": true,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "client_secret": {
              "required": true,
              "type": "string"
          },
          "single_channel": {
              "default": "false",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Exchanges a temporary OAuth verifier code for a workspace token.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:oauth.token",
      "pack": "slack",
      "ref": "slack.oauth.token",
      "id": "5b87f84c0a8b8a567f589529",
      "runner_type": "python-script"
  },
  {
      "name": "pins.add",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": false,
              "type": "string"
          },
          "file_comment": {
              "required": false,
              "type": "string"
          },
          "timestamp": {
              "required": false,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "pins.add",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Pins an item to a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:pins.add",
      "pack": "slack",
      "ref": "slack.pins.add",
      "id": "5b87f84c0a8b8a567f58952a",
      "runner_type": "python-script"
  },
  {
      "name": "pins.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "pins.list",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Lists items pinned to a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:pins.list",
      "pack": "slack",
      "ref": "slack.pins.list",
      "id": "5b87f84c0a8b8a567f58952b",
      "runner_type": "python-script"
  },
  {
      "name": "pins.remove",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": false,
              "type": "string"
          },
          "file_comment": {
              "required": false,
              "type": "string"
          },
          "timestamp": {
              "required": false,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "pins.remove",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Un-pins an item from a channel.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:pins.remove",
      "pack": "slack",
      "ref": "slack.pins.remove",
      "id": "5b87f84c0a8b8a567f58952c",
      "runner_type": "python-script"
  },
  {
      "name": "post_message",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Bot username."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "icon_emoji": {
              "required": false,
              "type": "string",
              "description": "Bot icon"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "disable_formatting": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Disable formatting, don't parse the message and treat it as raw text"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "webhook_url": {
              "required": false,
              "type": "string",
              "description": "Optional Webhook url"
          },
          "message": {
              "required": true,
              "type": "string",
              "description": "Message to send."
          },
          "channel": {
              "required": false,
              "type": "string",
              "description": "Optional channel to post to. Note channel must contain leading #"
          }
      },
      "tags": [],
      "description": "Post a message to the Slack channel.",
      "enabled": true,
      "entry_point": "post_message.py",
      "notify": {},
      "uid": "action:slack:post_message",
      "pack": "slack",
      "ref": "slack.post_message",
      "id": "5b87f84c0a8b8a567f58952d",
      "runner_type": "python-script"
  },
  {
      "name": "reactions.add",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": false,
              "type": "string"
          },
          "file_comment": {
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "reactions.add",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timestamp": {
              "required": false,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": false,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Adds a reaction to an item.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reactions.add",
      "pack": "slack",
      "ref": "slack.reactions.add",
      "id": "5b87f84c0a8b8a567f58952e",
      "runner_type": "python-script"
  },
  {
      "name": "reactions.get",
      "parameters": {
          "full": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": false,
              "type": "string"
          },
          "file_comment": {
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "reactions.get",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timestamp": {
              "required": false,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Gets reactions for an item.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reactions.get",
      "pack": "slack",
      "ref": "slack.reactions.get",
      "id": "5b87f84c0a8b8a567f58952f",
      "runner_type": "python-script"
  },
  {
      "name": "reactions.list",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "full": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "reactions.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Lists reactions made by a user.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reactions.list",
      "pack": "slack",
      "ref": "slack.reactions.list",
      "id": "5b87f84c0a8b8a567f589530",
      "runner_type": "python-script"
  },
  {
      "name": "reactions.remove",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": false,
              "type": "string"
          },
          "file_comment": {
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "reactions.remove",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timestamp": {
              "required": false,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": false,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Removes a reaction from an item.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reactions.remove",
      "pack": "slack",
      "ref": "slack.reactions.remove",
      "id": "5b87f84c0a8b8a567f589531",
      "runner_type": "python-script"
  },
  {
      "name": "reminders.add",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "text": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "reminders.add",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "time": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Creates a reminder.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reminders.add",
      "pack": "slack",
      "ref": "slack.reminders.add",
      "id": "5b87f84c0a8b8a567f589532",
      "runner_type": "python-script"
  },
  {
      "name": "reminders.complete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "reminders.complete",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "reminder": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Marks a reminder as complete.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reminders.complete",
      "pack": "slack",
      "ref": "slack.reminders.complete",
      "id": "5b87f84c0a8b8a567f589533",
      "runner_type": "python-script"
  },
  {
      "name": "reminders.delete",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "reminders.delete",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "reminder": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Deletes a reminder.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reminders.delete",
      "pack": "slack",
      "ref": "slack.reminders.delete",
      "id": "5b87f84c0a8b8a567f589534",
      "runner_type": "python-script"
  },
  {
      "name": "reminders.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "reminders.info",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "reminder": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Gets information about a reminder.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reminders.info",
      "pack": "slack",
      "ref": "slack.reminders.info",
      "id": "5b87f84c0a8b8a567f589535",
      "runner_type": "python-script"
  },
  {
      "name": "reminders.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "reminders.list",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Lists all reminders created by or for a given user.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:reminders.list",
      "pack": "slack",
      "ref": "slack.reminders.list",
      "id": "5b87f84c0a8b8a567f589536",
      "runner_type": "python-script"
  },
  {
      "name": "rtm.connect",
      "parameters": {
          "presence_sub": {
              "default": "true",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "rtm.connect",
              "type": "string",
              "immutable": true
          },
          "batch_presence_aware": {
              "default": "false",
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Starts a Real Time Messaging session.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:rtm.connect",
      "pack": "slack",
      "ref": "slack.rtm.connect",
      "id": "5b87f84c0a8b8a567f589537",
      "runner_type": "python-script"
  },
  {
      "name": "rtm.start",
      "parameters": {
          "no_latest": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "presence_sub": {
              "default": "true",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "rtm.start",
              "type": "string",
              "immutable": true
          },
          "batch_presence_aware": {
              "default": "false",
              "required": false,
              "type": "string"
          },
          "mpim_aware": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "simple_latest": {
              "required": false,
              "type": "string"
          },
          "no_unreads": {
              "required": false,
              "type": "string"
          },
          "include_locale": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Starts a Real Time Messaging session.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:rtm.start",
      "pack": "slack",
      "ref": "slack.rtm.start",
      "id": "5b87f84c0a8b8a567f589538",
      "runner_type": "python-script"
  },
  {
      "name": "search.all",
      "parameters": {
          "count": {
              "default": "20",
              "required": false,
              "type": "string"
          },
          "sort": {
              "default": "score",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "search.all",
              "type": "string",
              "immutable": true
          },
          "sort_dir": {
              "default": "desc",
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "query": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "highlight": {
              "required": false,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Searches for messages and files matching a query.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:search.all",
      "pack": "slack",
      "ref": "slack.search.all",
      "id": "5b87f84c0a8b8a567f589539",
      "runner_type": "python-script"
  },
  {
      "name": "search.files",
      "parameters": {
          "count": {
              "default": "20",
              "required": false,
              "type": "string"
          },
          "sort": {
              "default": "score",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "search.files",
              "type": "string",
              "immutable": true
          },
          "sort_dir": {
              "default": "desc",
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "query": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "highlight": {
              "required": false,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Searches for files matching a query.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:search.files",
      "pack": "slack",
      "ref": "slack.search.files",
      "id": "5b87f84c0a8b8a567f58953a",
      "runner_type": "python-script"
  },
  {
      "name": "search.messages",
      "parameters": {
          "count": {
              "default": "20",
              "required": false,
              "type": "string"
          },
          "sort": {
              "default": "score",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "search.messages",
              "type": "string",
              "immutable": true
          },
          "sort_dir": {
              "default": "desc",
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "query": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "highlight": {
              "required": false,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Searches for messages matching a query.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:search.messages",
      "pack": "slack",
      "ref": "slack.search.messages",
      "id": "5b87f84c0a8b8a567f58953b",
      "runner_type": "python-script"
  },
  {
      "name": "stars.add",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": false,
              "type": "string"
          },
          "file_comment": {
              "required": false,
              "type": "string"
          },
          "timestamp": {
              "required": false,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "stars.add",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Adds a star to an item.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:stars.add",
      "pack": "slack",
      "ref": "slack.stars.add",
      "id": "5b87f84c0a8b8a567f58953c",
      "runner_type": "python-script"
  },
  {
      "name": "stars.list",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "stars.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Lists stars for a user.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:stars.list",
      "pack": "slack",
      "ref": "slack.stars.list",
      "id": "5b87f84c0a8b8a567f58953d",
      "runner_type": "python-script"
  },
  {
      "name": "stars.remove",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "file": {
              "required": false,
              "type": "string"
          },
          "file_comment": {
              "required": false,
              "type": "string"
          },
          "timestamp": {
              "required": false,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "stars.remove",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "channel": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Removes a star from an item.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:stars.remove",
      "pack": "slack",
      "ref": "slack.stars.remove",
      "id": "5b87f84c0a8b8a567f58953e",
      "runner_type": "python-script"
  },
  {
      "name": "team.accessLogs",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "team.accessLogs",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          },
          "before": {
              "default": "now",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Gets the access logs for the current team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:team.accessLogs",
      "pack": "slack",
      "ref": "slack.team.accessLogs",
      "id": "5b87f84c0a8b8a567f58953f",
      "runner_type": "python-script"
  },
  {
      "name": "team.billableInfo",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "team.billableInfo",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Gets billable users information for the current team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:team.billableInfo",
      "pack": "slack",
      "ref": "slack.team.billableInfo",
      "id": "5b87f84c0a8b8a567f589540",
      "runner_type": "python-script"
  },
  {
      "name": "team.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "team.info",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Gets information about the current team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:team.info",
      "pack": "slack",
      "ref": "slack.team.info",
      "id": "5b87f84c0a8b8a567f589541",
      "runner_type": "python-script"
  },
  {
      "name": "team.integrationLogs",
      "parameters": {
          "count": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "team.integrationLogs",
              "type": "string",
              "immutable": true
          },
          "app_id": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "service_id": {
              "required": false,
              "type": "string"
          },
          "change_type": {
              "required": false,
              "type": "string"
          },
          "page": {
              "default": "1",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Gets the integration logs for the current team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:team.integrationLogs",
      "pack": "slack",
      "ref": "slack.team.integrationLogs",
      "id": "5b87f84c0a8b8a567f589542",
      "runner_type": "python-script"
  },
  {
      "name": "team.profile.get",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "team.profile.get",
              "type": "string",
              "immutable": true
          },
          "visibility": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Retrieve a team's profile.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:team.profile.get",
      "pack": "slack",
      "ref": "slack.team.profile.get",
      "id": "5b87f84c0a8b8a567f589543",
      "runner_type": "python-script"
  },
  {
      "name": "usergroups.create",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "description": {
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "usergroups.create",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "channels": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "include_count": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "handle": {
              "required": false,
              "type": "string"
          },
          "name": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Create a User Group",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:usergroups.create",
      "pack": "slack",
      "ref": "slack.usergroups.create",
      "id": "5b87f84c0a8b8a567f589544",
      "runner_type": "python-script"
  },
  {
      "name": "usergroups.disable",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "usergroups.disable",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "include_count": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "usergroup": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Disable an existing User Group",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:usergroups.disable",
      "pack": "slack",
      "ref": "slack.usergroups.disable",
      "id": "5b87f84c0a8b8a567f589545",
      "runner_type": "python-script"
  },
  {
      "name": "usergroups.enable",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "usergroups.enable",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "include_count": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "usergroup": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Enable a User Group",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:usergroups.enable",
      "pack": "slack",
      "ref": "slack.usergroups.enable",
      "id": "5b87f84c0a8b8a567f589546",
      "runner_type": "python-script"
  },
  {
      "name": "usergroups.list",
      "parameters": {
          "include_users": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "usergroups.list",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "include_count": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "include_disabled": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "List all User Groups for a team",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:usergroups.list",
      "pack": "slack",
      "ref": "slack.usergroups.list",
      "id": "5b87f84c0a8b8a567f589547",
      "runner_type": "python-script"
  },
  {
      "name": "usergroups.update",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "name": {
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "usergroups.update",
              "type": "string",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "channels": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "include_count": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "usergroup": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "handle": {
              "required": false,
              "type": "string"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "description": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Update an existing User Group",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:usergroups.update",
      "pack": "slack",
      "ref": "slack.usergroups.update",
      "id": "5b87f84c0a8b8a567f589548",
      "runner_type": "python-script"
  },
  {
      "name": "usergroups.users.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "usergroups.users.list",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "usergroup": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "include_disabled": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "List all users in a User Group",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:usergroups.users.list",
      "pack": "slack",
      "ref": "slack.usergroups.users.list",
      "id": "5b87f84c0a8b8a567f589549",
      "runner_type": "python-script"
  },
  {
      "name": "usergroups.users.update",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "usergroups.users.update",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "include_count": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "usergroup": {
              "required": true,
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "users": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Update the list of users for a User Group",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:usergroups.users.update",
      "pack": "slack",
      "ref": "slack.usergroups.users.update",
      "id": "5b87f84c0a8b8a567f58954a",
      "runner_type": "python-script"
  },
  {
      "name": "users.admin.invite",
      "parameters": {
          "first_name": {
              "type": "string",
              "description": "Users first name"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "set_active": {
              "type": "boolean",
              "description": "Should the user be active."
          },
          "token": {
              "type": "string",
              "description": "Slack API token."
          },
          "channels": {
              "type": "string",
              "description": "Channels to auto join."
          },
          "attempts": {
              "type": "integer",
              "description": ""
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "email": {
              "required": true,
              "type": "string",
              "description": "Email address to send invitation to."
          }
      },
      "tags": [],
      "description": "Send an invitation to join a Slack Org",
      "enabled": true,
      "entry_point": "send_invite.py",
      "notify": {},
      "uid": "action:slack:users.admin.invite",
      "pack": "slack",
      "ref": "slack.users.admin.invite",
      "id": "5b87f84c0a8b8a567f58954b",
      "runner_type": "python-script"
  },
  {
      "name": "users.conversations",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "users.conversations",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "100",
              "required": false,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "exclude_archived": {
              "default": "false",
              "required": false,
              "type": "string"
          },
          "types": {
              "default": "public_channel",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "List conversations the calling user may access.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.conversations",
      "pack": "slack",
      "ref": "slack.users.conversations",
      "id": "5b87f84c0a8b8a567f58954c",
      "runner_type": "python-script"
  },
  {
      "name": "users.deletePhoto",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "users.deletePhoto",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Delete the user profile photo",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.deletePhoto",
      "pack": "slack",
      "ref": "slack.users.deletePhoto",
      "id": "5b87f84c0a8b8a567f58954d",
      "runner_type": "python-script"
  },
  {
      "name": "users.getPresence",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "users.getPresence",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Gets user presence information.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.getPresence",
      "pack": "slack",
      "ref": "slack.users.getPresence",
      "id": "5b87f84c0a8b8a567f58954e",
      "runner_type": "python-script"
  },
  {
      "name": "users.identity",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "users.identity",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Get a user's identity.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.identity",
      "pack": "slack",
      "ref": "slack.users.identity",
      "id": "5b87f84c0a8b8a567f58954f",
      "runner_type": "python-script"
  },
  {
      "name": "users.info",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "users.info",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "include_locale": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Gets information about a user.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.info",
      "pack": "slack",
      "ref": "slack.users.info",
      "id": "5b87f84c0a8b8a567f589550",
      "runner_type": "python-script"
  },
  {
      "name": "users.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "presence": {
              "default": "false",
              "required": false,
              "type": "string"
          },
          "end_point": {
              "default": "users.list",
              "type": "string",
              "immutable": true
          },
          "cursor": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "limit": {
              "default": "0",
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "include_locale": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Lists all users in a Slack team.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.list",
      "pack": "slack",
      "ref": "slack.users.list",
      "id": "5b87f84c0a8b8a567f589551",
      "runner_type": "python-script"
  },
  {
      "name": "users.lookupByEmail",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "users.lookupByEmail",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "email": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Find a user with an email address.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.lookupByEmail",
      "pack": "slack",
      "ref": "slack.users.lookupByEmail",
      "id": "5b87f84c0a8b8a567f589552",
      "runner_type": "python-script"
  },
  {
      "name": "users.profile.get",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "users.profile.get",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "include_labels": {
              "default": "false",
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Retrieves a user's profile information.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.profile.get",
      "pack": "slack",
      "ref": "slack.users.profile.get",
      "id": "5b87f84c0a8b8a567f589553",
      "runner_type": "python-script"
  },
  {
      "name": "users.profile.set",
      "parameters": {
          "profile": {
              "required": false,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "users.profile.set",
              "type": "string",
              "immutable": true
          },
          "value": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "user": {
              "required": false,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "name": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Set the profile information for a user.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.profile.set",
      "pack": "slack",
      "ref": "slack.users.profile.set",
      "id": "5b87f84c0a8b8a567f589554",
      "runner_type": "python-script"
  },
  {
      "name": "users.setActive",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "users.setActive",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Marked a user as active. Deprecated and non-functional.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.setActive",
      "pack": "slack",
      "ref": "slack.users.setActive",
      "id": "5b87f84c0a8b8a567f589555",
      "runner_type": "python-script"
  },
  {
      "name": "users.setPhoto",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "end_point": {
              "default": "users.setPhoto",
              "type": "string",
              "immutable": true
          },
          "image": {
              "required": true,
              "type": "string"
          },
          "crop_w": {
              "required": false,
              "type": "string"
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "crop_y": {
              "required": false,
              "type": "string"
          },
          "crop_x": {
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Set the user profile photo",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.setPhoto",
      "pack": "slack",
      "ref": "slack.users.setPhoto",
      "id": "5b87f84d0a8b8a567f589556",
      "runner_type": "python-script"
  },
  {
      "name": "users.setPresence",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "presence": {
              "required": true,
              "type": "string"
          },
          "end_point": {
              "default": "users.setPresence",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "POST",
              "required": true,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Manually sets user presence.",
      "enabled": true,
      "entry_point": "run.py",
      "notify": {},
      "uid": "action:slack:users.setPresence",
      "pack": "slack",
      "ref": "slack.users.setPresence",
      "id": "5b87f84d0a8b8a567f589557",
      "runner_type": "python-script"
  },
  {
      "name": "users_filter_by",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "end_point": {
              "default": "users.list",
              "type": "string",
              "immutable": true
          },
          "token": {
              "required": false,
              "type": "string"
          },
          "http_method": {
              "default": "GET",
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "attributes": {
              "default": {},
              "required": false,
              "type": "object",
              "description": "Dictionary of user attributes to match against. It supports shell-style wildcards for the string values. Example: '{\"name\": \"joe\", \"real_name\": \"Joe*\", \"is_bot\": false}'."
          }
      },
      "tags": [],
      "description": "Lists users in a Slack team matching certain creterias.",
      "enabled": true,
      "entry_point": "users_filter_by.py",
      "notify": {},
      "uid": "action:slack:users_filter_by",
      "pack": "slack",
      "ref": "slack.users_filter_by",
      "id": "5b87f84d0a8b8a567f589558",
      "runner_type": "python-script"
  },
  {
      "name": "actions.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "limit": {
              "default": 10,
              "required": false,
              "type": "integer",
              "description": "Maximum number of actions to return"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "exclude": {
              "default": [
                  "parameters",
                  "notify"
              ],
              "type": "array",
              "description": "List of attributes to exclude"
          },
          "pack": {
              "required": false,
              "type": "string",
              "description": "Optional pack to filter on"
          }
      },
      "tags": [],
      "description": "Retrieve a list of available StackStorm actions.",
      "enabled": true,
      "entry_point": "actions_list.py",
      "notify": {},
      "uid": "action:st2:actions.list",
      "pack": "st2",
      "ref": "st2.actions.list",
      "id": "5b87f8000a8b8a567f5890fb",
      "runner_type": "python-script"
  },
  {
      "name": "call_home",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          }
      },
      "tags": [],
      "description": "Sends anonymous data install data to a StackStorm write-only S3 dropbox",
      "enabled": true,
      "entry_point": "workflows/call_home.yaml",
      "notify": {},
      "uid": "action:st2:call_home",
      "pack": "st2",
      "ref": "st2.call_home",
      "id": "5b87f8000a8b8a567f5890fc",
      "runner_type": "action-chain"
  },
  {
      "name": "check_permissions_anon_data",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "collect_anonymous_data": {
              "default": "false",
              "required": false,
              "type": "string",
              "description": "Whether to call_home or not. All forms of true are acceptable."
          }
      },
      "tags": [],
      "description": "Check if sending anonymous data is allowed.",
      "enabled": true,
      "entry_point": "check_permissions_anon_data.py",
      "notify": {},
      "uid": "action:st2:check_permissions_anon_data",
      "pack": "st2",
      "ref": "st2.check_permissions_anon_data",
      "id": "5b87f8000a8b8a567f5890fd",
      "runner_type": "python-script"
  },
  {
      "name": "executions.get",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "exclude": {
              "default": [
                  "trigger",
                  "trigger_type",
                  "trigger_instance",
                  "liveaction",
                  "context"
              ],
              "type": "array",
              "description": "List of attributes to exclude"
          },
          "id": {
              "required": true,
              "type": "string",
              "description": "ID of execution to retrieve the details for"
          }
      },
      "tags": [],
      "description": "Retrieve details of a single execution.",
      "enabled": true,
      "entry_point": "executions_get.py",
      "notify": {},
      "uid": "action:st2:executions.get",
      "pack": "st2",
      "ref": "st2.executions.get",
      "id": "5b87f8000a8b8a567f5890fe",
      "runner_type": "python-script"
  },
  {
      "name": "executions.list",
      "parameters": {
          "status": {
              "required": false,
              "type": "string",
              "description": "Optional status to filter the executions on"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "limit": {
              "default": 10,
              "required": false,
              "type": "integer",
              "description": "Maximum number of executions to return"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "required": false,
              "type": "string",
              "description": "Optional action to filter the executions on"
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Retrieve a list of executions.",
      "enabled": true,
      "entry_point": "executions_list.py",
      "notify": {},
      "uid": "action:st2:executions.list",
      "pack": "st2",
      "ref": "st2.executions.list",
      "id": "5b87f8000a8b8a567f5890ff",
      "runner_type": "python-script"
  },
  {
      "name": "executions.re_run",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "parameters": {
              "required": false,
              "type": "object",
              "description": "Parameter overrides"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "id": {
              "required": true,
              "type": "string",
              "description": "ID of execution to re-run"
          }
      },
      "tags": [],
      "description": "Re-run an action execution.",
      "enabled": true,
      "entry_point": "executions_re_run.py",
      "notify": {},
      "uid": "action:st2:executions.re_run",
      "pack": "st2",
      "ref": "st2.executions.re_run",
      "id": "5b87f8000a8b8a567f589100",
      "runner_type": "python-script"
  },
  {
      "name": "inquiry.respond",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "response": {
              "required": false,
              "type": "object",
              "description": "Response payload"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "id": {
              "required": true,
              "type": "string",
              "description": "ID of inquiry to which to respond"
          }
      },
      "tags": [],
      "description": "Respond to an inquiry",
      "enabled": true,
      "entry_point": "inquiry_respond.py",
      "notify": {},
      "uid": "action:st2:inquiry.respond",
      "pack": "st2",
      "ref": "st2.inquiry.respond",
      "id": "5b87f8000a8b8a567f589101",
      "runner_type": "python-script"
  },
  {
      "name": "kv.delete",
      "parameters": {
          "key": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Delete value from datastore",
      "enabled": true,
      "entry_point": "kv_delete.py",
      "notify": {},
      "uid": "action:st2:kv.delete",
      "pack": "st2",
      "ref": "st2.kv.delete",
      "id": "5b87f8000a8b8a567f589102",
      "runner_type": "python-script"
  },
  {
      "name": "kv.get",
      "parameters": {
          "key": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "decompress": {
              "required": false,
              "type": "boolean",
              "description": "True if the value is compressed using bzip2 and should be decompressed before returning it"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Get value from datastore",
      "enabled": true,
      "entry_point": "kv_get.py",
      "notify": {},
      "uid": "action:st2:kv.get",
      "pack": "st2",
      "ref": "st2.kv.get",
      "id": "5b87f8000a8b8a567f589103",
      "runner_type": "python-script"
  },
  {
      "name": "kv.get_object",
      "parameters": {
          "key": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Deserialize and retrieve JSON serialized object from a datastore",
      "enabled": true,
      "entry_point": "kv_get_object.py",
      "notify": {},
      "uid": "action:st2:kv.get_object",
      "pack": "st2",
      "ref": "st2.kv.get_object",
      "id": "5b87f8000a8b8a567f589104",
      "runner_type": "python-script"
  },
  {
      "name": "kv.grep",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "query": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Grep for keys in datastore",
      "enabled": true,
      "entry_point": "kv_grep.py",
      "notify": {},
      "uid": "action:st2:kv.grep",
      "pack": "st2",
      "ref": "st2.kv.grep",
      "id": "5b87f8000a8b8a567f589105",
      "runner_type": "python-script"
  },
  {
      "name": "kv.set",
      "parameters": {
          "key": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "compress": {
              "required": false,
              "type": "boolean",
              "description": "True to compress the value before storing it in a datastore"
          },
          "value": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ttl": {
              "required": false,
              "type": "integer",
              "description": "Optional TTL for the provided value"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Set value in datastore",
      "enabled": true,
      "entry_point": "kv_set.py",
      "notify": {},
      "uid": "action:st2:kv.set",
      "pack": "st2",
      "ref": "st2.kv.set",
      "id": "5b87f8000a8b8a567f589106",
      "runner_type": "python-script"
  },
  {
      "name": "kv.set_object",
      "parameters": {
          "key": {
              "required": true,
              "type": "string"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "value": {
              "required": true,
              "type": "object"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "ttl": {
              "required": false,
              "type": "integer",
              "description": "Optional TTL for the provided value"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Serialize and store object in a datastore",
      "enabled": true,
      "entry_point": "kv_set_object.py",
      "notify": {},
      "uid": "action:st2:kv.set_object",
      "pack": "st2",
      "ref": "st2.kv.set_object",
      "id": "5b87f8000a8b8a567f589107",
      "runner_type": "python-script"
  },
  {
      "name": "rules.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "limit": {
              "default": 10,
              "required": false,
              "type": "integer",
              "description": "Maximum number of rules to return"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "exclude": {
              "default": [],
              "type": "array",
              "description": "List of attributes to exclude"
          },
          "pack": {
              "required": false,
              "type": "string",
              "description": "Optional pack to filter on"
          }
      },
      "tags": [],
      "description": "Retrieve a list of available StackStorm rules",
      "enabled": true,
      "entry_point": "rules_list.py",
      "notify": {},
      "uid": "action:st2:rules.list",
      "pack": "st2",
      "ref": "st2.rules.list",
      "id": "5b87f8000a8b8a567f589108",
      "runner_type": "python-script"
  },
  {
      "name": "sensors.list",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "limit": {
              "default": 10,
              "required": false,
              "type": "integer",
              "description": "Maximum number of rules to return"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "exclude": {
              "default": [],
              "type": "array",
              "description": "List of attributes to exclude"
          },
          "pack": {
              "required": false,
              "type": "string",
              "description": "Optional pack to filter on"
          }
      },
      "tags": [],
      "description": "Retrieve a list of available StackStorm sensors.",
      "enabled": true,
      "entry_point": "sensors_list.py",
      "notify": {},
      "uid": "action:st2:sensors.list",
      "pack": "st2",
      "ref": "st2.sensors.list",
      "id": "5b87f8000a8b8a567f589109",
      "runner_type": "python-script"
  },
  {
      "name": "upload_to_s3",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "file_name": {
              "required": true,
              "type": "string",
              "description": "Full pathname of file to upload on filesystem"
          },
          "bucket": {
              "default": "st2express-install",
              "type": "string",
              "description": "S3 bucket to upload file"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "remote_file": {
              "required": false,
              "type": "string",
              "description": "Name of file on remote end. If not provided it defaults to the local file name"
          }
      },
      "tags": [],
      "description": "Sends collected data to write-only StackStorm S3 bucket",
      "enabled": true,
      "entry_point": "upload_to_s3.py",
      "notify": {},
      "uid": "action:st2:upload_to_s3",
      "pack": "st2",
      "ref": "st2.upload_to_s3",
      "id": "5b87f8000a8b8a567f58910a",
      "runner_type": "python-script"
  },
  {
      "name": "action_run",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "token": {
              "type": "string",
              "description": ""
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "action": {
              "required": true,
              "type": "string",
              "description": "action ref"
          },
          "params": {
              "required": true,
              "type": "string",
              "description": "Action parameters"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          },
          "name": {
              "required": true,
              "type": "string",
              "description": "Alias for this action execution"
          }
      },
      "tags": [],
      "description": "Run remote st2 action",
      "enabled": true,
      "entry_point": "action_run.py",
      "notify": {},
      "uid": "action:st2cd:action_run",
      "pack": "st2cd",
      "ref": "st2cd.action_run",
      "id": "5b87f8720a8b8a567f5895c3",
      "runner_type": "run-remote-script"
  },
  {
      "name": "add_apt_repo",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Url of the apt-get repo"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "echo '{{archive_type}} {{repo}} {{distribution}} {{component}}' > /etc/apt/sources.list.d/{{name}}.list",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "distribution": {
              "default": "trusty",
              "type": "string",
              "description": "Debian distro"
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "component": {
              "default": "main",
              "type": "string",
              "description": ""
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "archive_type": {
              "default": "deb",
              "type": "string",
              "description": "Debian archive type"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "name": {
              "required": true,
              "type": "string",
              "description": "name to be used for list file"
          }
      },
      "tags": [],
      "description": "Add apt-get repository",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:add_apt_repo",
      "pack": "st2cd",
      "ref": "st2cd.add_apt_repo",
      "id": "5b87f8720a8b8a567f5895c4",
      "runner_type": "run-remote"
  },
  {
      "name": "add_ci_user",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "user": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Username for login."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "pass": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Password for login."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "salt": {
              "default": "mkpasswd",
              "position": 3,
              "required": false,
              "type": "string",
              "description": "Password salt"
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          },
          "distro": {
              "default": "UBUNTU",
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Distro info. E.g. UBUNTU, RHEL"
          }
      },
      "tags": [],
      "description": "Add a user to box",
      "enabled": true,
      "entry_point": "add_ci_user.sh",
      "notify": {},
      "uid": "action:st2cd:add_ci_user",
      "pack": "st2cd",
      "ref": "st2cd.add_ci_user",
      "id": "5b87f8720a8b8a567f5895c5",
      "runner_type": "run-remote-script"
  },
  {
      "name": "add_role",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "{% if role != \"\" %}echo -e '---\\nrole: {{role}}' > /etc/facter/facts.d/role.yaml{% else %}echo -e 'No role defined'{% endif %}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "role": {
              "default": "",
              "type": "string"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Clean a git repo",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:add_role",
      "pack": "st2cd",
      "ref": "st2cd.add_role",
      "id": "5b87f8720a8b8a567f5895c6",
      "runner_type": "run-remote"
  },
  {
      "name": "apt_get",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "packages": {
              "required": true,
              "type": "string"
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "cmd": {
              "default": "apt-get {{act}} {{packages}} &> /dev/null",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "act": {
              "default": "install",
              "type": "string"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run apt-get on a remote host",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:apt_get",
      "pack": "st2cd",
      "ref": "st2cd.apt_get",
      "id": "5b87f8720a8b8a567f5895c7",
      "runner_type": "run-remote"
  },
  {
      "name": "aws_decrypt_password_data",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "password_data": {
              "required": true,
              "type": "string",
              "description": "Encrypted password data"
          },
          "keyfile": {
              "required": true,
              "type": "string",
              "description": "Path to private key file (.pem) used to create the password data for the Windows Instance"
          }
      },
      "tags": [],
      "description": "Decrypts password data retrieved from aws.ec2_get_password_data",
      "enabled": true,
      "entry_point": "aws_decrypt_password_data.py",
      "notify": {},
      "uid": "action:st2cd:aws_decrypt_password_data",
      "pack": "st2cd",
      "ref": "st2cd.aws_decrypt_password_data",
      "id": "5b87f8720a8b8a567f5895c8",
      "runner_type": "python-script"
  },
  {
      "name": "bwc_chg_dev_for_bwc_ipfabric_packs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-ipfabric-packs",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc ip fabric packs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the bwc ip fabric packs repo",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_ipfabric_packs.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_chg_dev_for_bwc_ipfabric_packs",
      "pack": "st2cd",
      "ref": "st2cd.bwc_chg_dev_for_bwc_ipfabric_packs",
      "id": "5b87f8720a8b8a567f5895ca",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_chg_dev_for_bwc_topology",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-topology",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc topology"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the bwc topology repo",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_topology.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_chg_dev_for_bwc_topology",
      "pack": "st2cd",
      "ref": "st2cd.bwc_chg_dev_for_bwc_topology",
      "id": "5b87f8720a8b8a567f5895cb",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_chg_dev_for_pkg_suite",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for package suite"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for any bwc packaging suite",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_chg_dev_for_pkg_suite",
      "pack": "st2cd",
      "ref": "st2cd.bwc_chg_dev_for_pkg_suite",
      "id": "5b87f8730a8b8a567f5895cc",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_chg_ver_for_bwc_cli",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-cli",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc cli"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the bwc cli repo",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_cli.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_chg_ver_for_bwc_cli",
      "pack": "st2cd",
      "ref": "st2cd.bwc_chg_ver_for_bwc_cli",
      "id": "5b87f8720a8b8a567f5895c9",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_docs",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "author": {
              "type": "string",
              "description": "git author"
          },
          "docs_url": {
              "default": "bwc-docs.brocade.com",
              "type": "string"
          },
          "repo": {
              "default": "https://github.com/StackStorm/st2docs.git",
              "type": "string",
              "description": "Url of the docs repo to clone"
          },
          "branch": {
              "default": "master",
              "type": "string",
              "description": "The branch to build the docs from"
          },
          "repo_target": {
              "default": "bwc_{{branch}}",
              "type": "string",
              "description": "Target directory on server for repo to be cloned in to."
          },
          "environment": {
              "type": "string",
              "description": "'production' to deploy to docs.stackstorm.com, or 'staging'"
          },
          "revision": {
              "type": "string",
              "description": "git revision SHA"
          }
      },
      "tags": [],
      "description": "Build BWC docs and deploy to s3 bucket",
      "enabled": true,
      "entry_point": "workflows/bwc_docs.yaml",
      "notify": {},
      "uid": "action:st2cd:bwc_docs",
      "pack": "st2cd",
      "ref": "st2cd.bwc_docs",
      "id": "5b87f8730a8b8a567f5895cd",
      "runner_type": "action-chain"
  },
  {
      "name": "bwc_finalize_release",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "fork": {
              "default": "StackStorm",
              "type": "string",
              "description": "Fork to use"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "type": "string",
              "description": "Host where to run the release process."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version used for the release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cwd": {
              "default": "/home/stanley",
              "type": "string",
              "description": "Working directory where remote shell scripts use"
          }
      },
      "tags": [],
      "description": "Finalize bwc release",
      "enabled": true,
      "entry_point": "workflows/bwc_finalize_release.yaml",
      "notify": {},
      "uid": "action:st2cd:bwc_finalize_release",
      "pack": "st2cd",
      "ref": "st2cd.bwc_finalize_release",
      "id": "5b87f8730a8b8a567f5895ce",
      "runner_type": "mistral-v2"
  },
  {
      "name": "bwc_prep_dev",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "fork": {
              "default": "StackStorm",
              "type": "string",
              "description": "Fork to use"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "type": "string",
              "description": "Host where to run the release process."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cwd": {
              "default": "/home/stanley",
              "type": "string",
              "description": "Working directory where remote shell scripts use"
          }
      },
      "tags": [],
      "description": "Prepare bwc for next iteration of development",
      "enabled": true,
      "entry_point": "workflows/bwc_prep_dev.yaml",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_dev",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_dev",
      "id": "5b87f8730a8b8a567f5895cf",
      "runner_type": "mistral-v2"
  },
  {
      "name": "bwc_prep_dev_for_bwc_cli",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-cli",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc cli"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc cli repo for next iteration of development",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_cli.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_dev_for_bwc_cli",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_dev_for_bwc_cli",
      "id": "5b87f8730a8b8a567f5895d0",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_dev_for_bwc_ipfabric_packs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-ipfabric-packs",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc ip fabric packs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc ip fabric packs repo for next iteration of development",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_ipfabric_packs.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_dev_for_bwc_ipfabric_packs",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_dev_for_bwc_ipfabric_packs",
      "id": "5b87f8730a8b8a567f5895d1",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_dev_for_bwc_ipfabric_suite",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-ipfabric-suite-packages",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc ip fabric suite"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc ip fabric suite repo for next iteration of development",
      "enabled": true,
      "entry_point": "bwc_prep_dev_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_dev_for_bwc_ipfabric_suite",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_dev_for_bwc_ipfabric_suite",
      "id": "5b87f8730a8b8a567f5895d2",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_dev_for_bwc_topology",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-topology",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc topology"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc topology repo for next iteration of development",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_topology.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_dev_for_bwc_topology",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_dev_for_bwc_topology",
      "id": "5b87f8730a8b8a567f5895d3",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_dev_for_bwc_ui",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for st2",
              "enum": [
                  "bwc-ui"
              ]
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the BWC GUI repo for next iteration of development",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_ui.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_dev_for_bwc_ui",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_dev_for_bwc_ui",
      "id": "5b87f8730a8b8a567f5895d4",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_dev_for_enterprise_pkg",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-enterprise-package",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc (st2 enterprise) packaging"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc (st2 enterprise) packaging repo for next iteration of development",
      "enabled": true,
      "entry_point": "bwc_prep_dev_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_dev_for_enterprise_pkg",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_dev_for_enterprise_pkg",
      "id": "5b87f8730a8b8a567f5895d5",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_dev_for_pkg_suite",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for the package suite"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare any bwc packaging suite repo for next iteration of development",
      "enabled": true,
      "entry_point": "bwc_prep_dev_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_dev_for_pkg_suite",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_dev_for_pkg_suite",
      "id": "5b87f8730a8b8a567f5895d6",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_patch",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "fork": {
              "default": "StackStorm",
              "type": "string",
              "description": "Fork to use"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "type": "string",
              "description": "Host where to run the release process."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the patch release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cwd": {
              "default": "/home/stanley",
              "type": "string",
              "description": "Working directory where remote shell scripts use"
          }
      },
      "tags": [],
      "description": "Prepare bwc for patch release",
      "enabled": true,
      "entry_point": "workflows/bwc_prep_patch.yaml",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_patch",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_patch",
      "id": "5b87f8730a8b8a567f5895d7",
      "runner_type": "mistral-v2"
  },
  {
      "name": "bwc_prep_patch_for_bwc_cli",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-cli",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc cli"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "v{{version.split('.')[0]}}.{{version.split('.')[1]}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc cli repo for patch release",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_cli.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_patch_for_bwc_cli",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_patch_for_bwc_cli",
      "id": "5b87f8730a8b8a567f5895d8",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_patch_for_bwc_ipfabric_packs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-ipfabric-packs",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc ip fabric packs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "v{{version.split('.')[0]}}.{{version.split('.')[1]}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc ip fabric packs repo for patch release",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_ipfabric_packs.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_patch_for_bwc_ipfabric_packs",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_patch_for_bwc_ipfabric_packs",
      "id": "5b87f8730a8b8a567f5895d9",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_patch_for_bwc_ipfabric_suite",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-ipfabric-suite-packages",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc ip fabric suite"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc ip fabric suite repo for patch release",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_patch_for_bwc_ipfabric_suite",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_patch_for_bwc_ipfabric_suite",
      "id": "5b87f8730a8b8a567f5895da",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_patch_for_bwc_topology",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-topology",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc topology"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "v{{version.split('.')[0]}}.{{version.split('.')[1]}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc topology repo for patch release",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_bwc_topology.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_patch_for_bwc_topology",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_patch_for_bwc_topology",
      "id": "5b87f8730a8b8a567f5895db",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_patch_for_enterprise_pkg",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-enterprise-package",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc enterprise packaging repo"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc (st2 enterprise) packaging repo for patch release",
      "enabled": true,
      "entry_point": "bwc_chg_ver_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_patch_for_enterprise_pkg",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_patch_for_enterprise_pkg",
      "id": "5b87f8730a8b8a567f5895dc",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "fork": {
              "default": "StackStorm",
              "type": "string",
              "description": "Fork to use"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "type": "string",
              "description": "Host where to run the release process."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cwd": {
              "default": "/home/stanley",
              "type": "string",
              "description": "Working directory where remote shell scripts use"
          }
      },
      "tags": [],
      "description": "Prepare bwc (st2 enterprise) for release",
      "enabled": true,
      "entry_point": "workflows/bwc_prep_release.yaml",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release",
      "id": "5b87f8730a8b8a567f5895dd",
      "runner_type": "mistral-v2"
  },
  {
      "name": "bwc_prep_release_for_bwc_cli",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-cli",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc cli"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc cli repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_bwc_cli.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_bwc_cli",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_bwc_cli",
      "id": "5b87f8730a8b8a567f5895de",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release_for_bwc_installer",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-installer",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc-installer"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc-installer repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_bwc_installer.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_bwc_installer",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_bwc_installer",
      "id": "5b87f8730a8b8a567f5895df",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release_for_bwc_ipfabric_packs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-ipfabric-packs",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc ip fabric packs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc ip fabric packs repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_bwc_ipfabric_packs.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_bwc_ipfabric_packs",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_bwc_ipfabric_packs",
      "id": "5b87f8730a8b8a567f5895e0",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release_for_bwc_ipfabric_suite",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-ipfabric-suite-packages",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc ip fabric suite"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc ip fabric suite repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_bwc_ipfabric_suite",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_bwc_ipfabric_suite",
      "id": "5b87f8730a8b8a567f5895e1",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release_for_bwc_topology",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-topology",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc topology"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc topology repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_bwc_topology.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_bwc_topology",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_bwc_topology",
      "id": "5b87f8730a8b8a567f5895e2",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release_for_enterprise_pkg",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "bwc-enterprise-package",
              "position": 0,
              "type": "string",
              "description": "Project name for bwc enterprise packaging repo"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc (st2 enterprise) packaging repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_enterprise_pkg",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_enterprise_pkg",
      "id": "5b87f8730a8b8a567f5895e3",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release_for_gui",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for bwc",
              "enum": [
                  "bwc-ui"
              ]
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the GUI repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_gui.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_gui",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_gui",
      "id": "5b87f8730a8b8a567f5895e4",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release_for_ipfabric_docs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "ipfabric-docs",
              "position": 0,
              "type": "string",
              "description": "Project name for st2docs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the bwc ip fabric docs repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_ipfabric_docs.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_ipfabric_docs",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_ipfabric_docs",
      "id": "5b87f8730a8b8a567f5895e5",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_prep_release_for_pkg_suite",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for the package suite"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare any bwc packaging suite repo for release",
      "enabled": true,
      "entry_point": "bwc_prep_release_for_pkg_suite.sh",
      "notify": {},
      "uid": "action:st2cd:bwc_prep_release_for_pkg_suite",
      "pack": "st2cd",
      "ref": "st2cd.bwc_prep_release_for_pkg_suite",
      "id": "5b87f8730a8b8a567f5895e6",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "bwc_release_packages",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "version": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "distros": {
              "default": [
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ],
              "type": "array",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Promote all stable bwc packages from staging to production for all supported distros",
      "enabled": true,
      "entry_point": "workflows/bwc_release_packages.yaml",
      "notify": {},
      "uid": "action:st2cd:bwc_release_packages",
      "pack": "st2cd",
      "ref": "st2cd.bwc_release_packages",
      "id": "5b87f8730a8b8a567f5895e7",
      "runner_type": "mistral-v2"
  },
  {
      "name": "bwc_stage_release_packages",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "default": "st2cd.bwc_stage_release_packages.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "projects": {
              "items": {
                  "enum": [
                      "bwc-cli",
                      "bwc-enterprise-package",
                      "bwc-ipfabric-packs",
                      "bwc-ipfabric-suite-packages",
                      "bwc-topology",
                      "bwc-ui",
                      "st2-enterprise-auth-backend-ldap"
                  ],
                  "type": "string"
              },
              "required": true,
              "type": "array",
              "description": "The list of projects to stage release."
          },
          "wait": {
              "default": false,
              "type": "boolean",
              "description": "If true, then wait until package jobs are completed."
          }
      },
      "tags": [],
      "description": "Stage bwc packages for release. Run this only if circleci doesn't build automatically.",
      "enabled": true,
      "entry_point": "workflows/bwc_stage_release_packages.yaml",
      "notify": {},
      "uid": "action:st2cd:bwc_stage_release_packages",
      "pack": "st2cd",
      "ref": "st2cd.bwc_stage_release_packages",
      "id": "5b87f8730a8b8a567f5895e8",
      "runner_type": "mistral-v2"
  },
  {
      "name": "check_pkgs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "packages": {
              "default": "st2common st2reactor st2actions st2api st2stream st2auth st2debug",
              "position": 1,
              "type": "string"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          },
          "builddir": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location on disk for the packages"
          }
      },
      "tags": [],
      "description": "Check the packages",
      "enabled": true,
      "entry_point": "check_pkgs.sh",
      "notify": {},
      "uid": "action:st2cd:check_pkgs",
      "pack": "st2cd",
      "ref": "st2cd.check_pkgs",
      "id": "5b87f8730a8b8a567f5895e9",
      "runner_type": "run-remote-script"
  },
  {
      "name": "cleanup_volumes",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "age": {
              "default": 14400,
              "type": "integer",
              "description": "Number of seconds"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Clean up volumes",
      "enabled": true,
      "entry_point": "workflows/cleanup_volumes.yaml",
      "notify": {},
      "uid": "action:st2cd:cleanup_volumes",
      "pack": "st2cd",
      "ref": "st2cd.cleanup_volumes",
      "id": "5b87f8730a8b8a567f5895ea",
      "runner_type": "mistral-v2"
  },
  {
      "name": "create_deploy_test_rule",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "st2_base_url": {
              "default": "http://localhost:9101/v1/",
              "type": "string",
              "description": "St2 base url."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "type": "string",
              "description": "Github branch to setup the rule on."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Create a rule to run deploy tests on a release branch.",
      "enabled": true,
      "entry_point": "create_deploy_test_rule.py",
      "notify": {},
      "uid": "action:st2cd:create_deploy_test_rule",
      "pack": "st2cd",
      "ref": "st2cd.create_deploy_test_rule",
      "id": "5b87f8730a8b8a567f5895eb",
      "runner_type": "run-remote-script"
  },
  {
      "name": "create_docs_test_rule",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "st2_base_url": {
              "default": "http://localhost:9101/v1/",
              "type": "string",
              "description": "st2 base url."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "type": "string",
              "description": "Github branch to setup the rule on."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Create a rule to run docs build on a release branch.",
      "enabled": true,
      "entry_point": "create_docs_test_rule.py",
      "notify": {},
      "uid": "action:st2cd:create_docs_test_rule",
      "pack": "st2cd",
      "ref": "st2cd.create_docs_test_rule",
      "id": "5b87f8730a8b8a567f5895ec",
      "runner_type": "run-remote-script"
  },
  {
      "name": "create_version_release_rule",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "st2_base_url": {
              "default": "http://localhost:9101/v1/",
              "type": "string",
              "description": "St2 base url."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "type": "string",
              "description": "Github branch to setup the rule on."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Create a rule to listen for github events on branch commits.",
      "enabled": true,
      "entry_point": "create_version_release_rule.py",
      "notify": {},
      "uid": "action:st2cd:create_version_release_rule",
      "pack": "st2cd",
      "ref": "st2cd.create_version_release_rule",
      "id": "5b87f8730a8b8a567f5895ed",
      "runner_type": "run-remote-script"
  },
  {
      "name": "create_vm",
      "parameters": {
          "skip_notify": {
              "default": [
                  "get_subnet_id",
                  "get_ami",
                  "run_instance",
                  "wait_for_instance",
                  "wait_for_ssh",
                  "add_name_tag",
                  "add_cname",
                  "set_hostname",
                  "reboot",
                  "wait_for_ssh_post_reboot",
                  "puppet_bootstrap"
              ],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "key_name": {
              "default": "stackstorm-team-west",
              "type": "string",
              "description": "SSH key to use during intial instance creation"
          },
          "dns_zone": {
              "default": "uswest2.stackstorm.net",
              "type": "string",
              "description": "Route53 DNS Zone to add host to"
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Short hostname"
          },
          "environment": {
              "default": "staging",
              "enum": [
                  "production",
                  "staging",
                  "sandbox"
              ],
              "type": "string",
              "description": "Environment to deploy to"
          },
          "instance_type": {
              "default": "t2.medium",
              "type": "string",
              "description": "Flavor of to use for instance creation"
          },
          "base_user": {
              "default": "{% if distro == 'UBUNTU14' %}ubuntu{% else %}ec2-user{% endif %}",
              "type": "string",
              "description": "Username for initial ssh test",
              "immutable": true
          },
          "notification": {
              "default": "slack",
              "type": "string",
              "description": "used by rule with actiontrigger",
              "immutable": true
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stackstorm_team_west.pem",
              "type": "string",
              "description": "Path to local private key that corresponds to {{key_name}}"
          },
          "notification_channel": {
              "default": "#opstown",
              "type": "string",
              "description": "used by rule with actiontrigger",
              "immutable": true
          },
          "distro": {
              "default": "UBUNTU14",
              "enum": [
                  "RHEL6",
                  "RHEL7",
                  "F20",
                  "F21",
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          }
      },
      "tags": [],
      "description": "Create a VM and adds DNS",
      "enabled": true,
      "entry_point": "workflows/create_vm.yaml",
      "notify": {},
      "uid": "action:st2cd:create_vm",
      "pack": "st2cd",
      "ref": "st2cd.create_vm",
      "id": "5b87f8730a8b8a567f5895ee",
      "runner_type": "action-chain"
  },
  {
      "name": "create_vm_role",
      "parameters": {
          "skip_notify": {
              "default": [
                  "get_subnet_id",
                  "get_ami",
                  "get_distro",
                  "run_instance",
                  "wait_for_instance",
                  "wait_for_ssh",
                  "add_tags",
                  "add_cname",
                  "set_hostname",
                  "reboot",
                  "wait_for_ssh_post_reboot",
                  "puppet_bootstrap"
              ],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "creator": {
              "default": "{{ 'api_user' in action_context and action_context.api_user or action_context.user }}",
              "type": "string",
              "immutable": true
          },
          "key_name": {
              "default": "st2_deploy",
              "type": "string",
              "description": "SSH key to use during intial instance creation"
          },
          "dns_zone": {
              "default": "uswest2.stackstorm.net",
              "type": "string",
              "description": "Route53 DNS Zone to add host to"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "environment": {
              "default": "staging",
              "enum": [
                  "production",
                  "staging",
                  "sandbox",
                  "public"
              ],
              "type": "string",
              "description": "Environment to deploy to"
          },
          "instance_type": {
              "default": "t2.medium",
              "type": "string",
              "description": "Flavor of to use for instance creation"
          },
          "role": {
              "default": "default",
              "type": "string",
              "description": "Role to use during puppet apply"
          },
          "purpose": {
              "type": "string",
              "description": "Planned purpose of the VM"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string",
              "description": "Path to local private key that corresponds to {{key_name}}"
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Short hostname"
          },
          "distro": {
              "default": "UBUNTU14",
              "enum": [
                  "RHEL6",
                  "RHEL7",
                  "F20",
                  "F21",
                  "UBUNTU14",
                  "UBUNTU16",
                  "pkg_UBUNTU14",
                  "pkg_UBUNTU16",
                  "pkg_RHEL6",
                  "pkg_RHEL7",
                  "pkg_CENTOS6",
                  "pkg_CENTOS7",
                  "ubuntu",
                  "centos6",
                  "centos7"
              ]
          }
      },
      "tags": [],
      "description": "Create a VM, add DNS, bootstrap puppet",
      "enabled": true,
      "entry_point": "workflows/create_vm_role.yaml",
      "notify": {},
      "uid": "action:st2cd:create_vm_role",
      "pack": "st2cd",
      "ref": "st2cd.create_vm_role",
      "id": "5b87f8730a8b8a567f5895ef",
      "runner_type": "mistral-v2"
  },
  {
      "name": "create_vm_windows",
      "parameters": {
          "username": {
              "default": "Administrator",
              "type": "string",
              "description": "Windows username to use for authentication"
          },
          "skip_notify": {
              "default": [
                  "get_subnet_id",
                  "get_ami",
                  "get_distro",
                  "run_instance",
                  "wait_for_instance",
                  "wait_for_ssh",
                  "add_tags",
                  "add_cname",
                  "set_hostname",
                  "reboot",
                  "wait_for_ssh_post_reboot",
                  "puppet_bootstrap"
              ],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "key_name": {
              "default": "st2_deploy_windows",
              "type": "string",
              "description": "Windows key to use during intial instance creation. This is important as it's used to encrypt the randmly generated password when the VM is created."
          },
          "dns_zone": {
              "default": "uswest2.stackstorm.net",
              "type": "string",
              "description": "Route53 DNS Zone to add host to"
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Short hostname"
          },
          "environment": {
              "default": "staging",
              "enum": [
                  "production",
                  "staging",
                  "sandbox",
                  "public"
              ],
              "type": "string",
              "description": "Environment to deploy to"
          },
          "instance_type": {
              "default": "t2.micro",
              "type": "string",
              "description": "Flavor of to use for instance creation"
          },
          "role": {
              "default": "default",
              "type": "string",
              "description": "Role to use during puppet apply"
          },
          "purpose": {
              "type": "string",
              "description": "Planned purpose of the VM"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "creator": {
              "default": "{{ 'api_user' in action_context and action_context.api_user or action_context.user }}",
              "type": "string",
              "immutable": true
          },
          "keyfile": {
              "default": "/home/stanley/st2_deploy_windows.pem",
              "type": "string",
              "description": "Path to local private key that corresponds to {{key_name}}"
          },
          "distro": {
              "default": "windows2016",
              "enum": [
                  "windows2016"
              ]
          }
      },
      "tags": [],
      "description": "Create a Windows VM, add DNS",
      "enabled": true,
      "entry_point": "workflows/create_vm_windows.yaml",
      "notify": {},
      "uid": "action:st2cd:create_vm_windows",
      "pack": "st2cd",
      "ref": "st2cd.create_vm_windows",
      "id": "5b87f8730a8b8a567f5895f0",
      "runner_type": "mistral-v2"
  },
  {
      "name": "destroy_vm",
      "parameters": {
          "skip_notify": {
              "default": [
                  "get_instance_dns",
                  "get_instances",
                  "get_volumes",
                  "destroy_instance",
                  "delete_cname",
                  "delete_volumes",
                  "notify_success",
                  "notify_multiple_instances_failure",
                  "notify_destroy_instance_failure",
                  "notify_delete_cname_failure",
                  "notify_delete_volumes_failure"
              ],
              "type": "array",
              "description": "List of tasks to skip notifications for.",
              "immutable": true
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "dns_zone": {
              "default": "uswest2.stackstorm.net",
              "type": "string",
              "description": "Route53 DNS zone where the VM is deployed"
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Short hostname"
          },
          "instance_id": {
              "type": "string",
              "description": "Provider specific instance ID for the VM. If hostname not found, then ID is used to find the VM."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Destroys a VM and removes it from Route53",
      "enabled": true,
      "entry_point": "workflows/destroy_vm.yaml",
      "notify": {},
      "uid": "action:st2cd:destroy_vm",
      "pack": "st2cd",
      "ref": "st2cd.destroy_vm",
      "id": "5b87f8730a8b8a567f5895f1",
      "runner_type": "mistral-v2"
  },
  {
      "name": "e2e_tests",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "st2_username": {
              "default": "testu",
              "type": "string",
              "description": "Username to authenticate to the St2 server"
          },
          "windows_username": {
              "default": "Administrator",
              "type": "string",
              "description": "Windows username. Default is Administrator"
          },
          "st2tests_branch": {
              "default": "master",
              "type": "string",
              "description": ""
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Host to run tests on"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          },
          "environment": {
              "type": "string",
              "description": ""
          },
          "repo": {
              "type": "string",
              "description": ""
          },
          "build": {
              "required": true,
              "type": "string",
              "description": "Build number"
          },
          "branch": {
              "type": "string",
              "description": ""
          },
          "windows_password": {
              "default": "",
              "secret": true,
              "type": "string",
              "description": "Windows password"
          },
          "st2_password": {
              "default": "testp",
              "type": "string",
              "description": "Password to authenticate to the St2 server"
          },
          "windows_host": {
              "default": "",
              "type": "string",
              "description": "Windows host name. If not specified, test will only check prerequisites"
          },
          "revision": {
              "type": "string"
          }
      },
      "tags": [],
      "description": "Runs a series of end to end tests on a StackStorm server",
      "enabled": true,
      "entry_point": "workflows/e2e_tests.yaml",
      "notify": {},
      "uid": "action:st2cd:e2e_tests",
      "pack": "st2cd",
      "ref": "st2cd.e2e_tests",
      "id": "5b87f8730a8b8a567f5895f2",
      "runner_type": "action-chain"
  },
  {
      "name": "ec2_filter_volumes",
      "parameters": {
          "status": {
              "default": "available",
              "type": "string",
              "description": "Status of the volume"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "age": {
              "default": 14400,
              "type": "integer",
              "description": "Number of seconds"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "volumes": {
              "required": true,
              "type": "array",
              "description": "List of volumes"
          }
      },
      "tags": [],
      "description": "Filter outdated volumes",
      "enabled": true,
      "entry_point": "ec2_filter_volumes.py",
      "notify": {},
      "uid": "action:st2cd:ec2_filter_volumes",
      "pack": "st2cd",
      "ref": "st2cd.ec2_filter_volumes",
      "id": "5b87f8730a8b8a567f5895f3",
      "runner_type": "python-script"
  },
  {
      "name": "fetch_puppet_bootstrap",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "curl -XGET -o {{dir}}/{{file}} -u {{token}}:x-oauth-basic https://raw.githubusercontent.com/StackStorm/st2puppet/{{branch}}/script/{{file}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "token": {
              "default": "",
              "type": "string"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "production",
              "type": "string",
              "description": "Branch of the st2puppet repo to retrive script from"
          },
          "file": {
              "default": "bootstrap-puppet",
              "type": "string"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Download puppet bootstrap script",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:fetch_puppet_bootstrap",
      "pack": "st2cd",
      "ref": "st2cd.fetch_puppet_bootstrap",
      "id": "5b87f8730a8b8a567f5895f4",
      "runner_type": "run-remote"
  },
  {
      "name": "flow_pkg",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "environment": {
              "type": "string",
              "description": "Environment where to run the packaging action"
          },
          "repo": {
              "default": "https://{{st2kv.system.st2_github_token}}:x-oauth-basic@github.com/extremenetworks/st2flow.git",
              "required": false,
              "type": "string",
              "description": "Url of the repo to clone."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version of Flow to build"
          },
          "build": {
              "type": "string",
              "description": "build number"
          },
          "branch": {
              "default": "master",
              "required": false,
              "type": "string",
              "description": "The branch to build."
          },
          "dl_server": {
              "required": false,
              "type": "string",
              "description": "Server where the build artifacts are published."
          },
          "repo_target": {
              "default": "/home/stanley/st2_flow_{{branch}}",
              "type": "string",
              "description": "Directory where the repo is cloned."
          }
      },
      "tags": [],
      "description": "Builds Flow artifacts",
      "enabled": true,
      "entry_point": "workflows/flow_build.yaml",
      "notify": {},
      "uid": "action:st2cd:flow_pkg",
      "pack": "st2cd",
      "ref": "st2cd.flow_pkg",
      "id": "5b87f8730a8b8a567f5895f5",
      "runner_type": "action-chain"
  },
  {
      "name": "get_apt_key",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "wget -O /etc/apt/trusted.gpg.d/{{name}}.gpg {{url}} && apt-get update",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "url": {
              "required": true,
              "type": "string",
              "description": "Url of the apt-get repo"
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "name": {
              "required": true,
              "type": "string",
              "description": "name to be used for key file"
          }
      },
      "tags": [],
      "description": "Get key for apt-get repository",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:get_apt_key",
      "pack": "st2cd",
      "ref": "st2cd.get_apt_key",
      "id": "5b87f8730a8b8a567f5895f6",
      "runner_type": "run-remote"
  },
  {
      "name": "get_distro",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Determine the name of the OS distro",
      "enabled": true,
      "entry_point": "get_distro.sh",
      "notify": {},
      "uid": "action:st2cd:get_distro",
      "pack": "st2cd",
      "ref": "st2cd.get_distro",
      "id": "5b87f8730a8b8a567f5895f7",
      "runner_type": "run-remote-script"
  },
  {
      "name": "get_latest_st2_revision",
      "parameters": {
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "flavor": {
              "default": "stable",
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Stable or unstable?"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the script will be executed in"
          }
      },
      "tags": [],
      "description": "Get latest st2 revision.",
      "enabled": true,
      "entry_point": "get_latest_st2_revision.sh",
      "notify": {},
      "uid": "action:st2cd:get_latest_st2_revision",
      "pack": "st2cd",
      "ref": "st2cd.get_latest_st2_revision",
      "id": "5b87f8730a8b8a567f5895f8",
      "runner_type": "local-shell-script"
  },
  {
      "name": "get_latest_st2_version",
      "parameters": {
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "flavor": {
              "default": "stable",
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Stable or unstable?"
          },
          "cwd": {
              "type": "string",
              "description": "Working directory where the script will be executed in"
          }
      },
      "tags": [],
      "description": "Get latest st2 version.",
      "enabled": true,
      "entry_point": "get_latest_st2_version.sh",
      "notify": {},
      "uid": "action:st2cd:get_latest_st2_version",
      "pack": "st2cd",
      "ref": "st2cd.get_latest_st2_version",
      "id": "5b87f8730a8b8a567f5895f9",
      "runner_type": "local-shell-script"
  },
  {
      "name": "get_st2_token",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "st2 auth {{st2_username}} -p {{st2_password}} -j",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "st2_username": {
              "default": "",
              "required": true,
              "type": "string"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "st2_password": {
              "default": "",
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Authenticate to St2",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:get_st2_token",
      "pack": "st2cd",
      "ref": "st2cd.get_st2_token",
      "id": "5b87f8730a8b8a567f5895fa",
      "runner_type": "run-remote"
  },
  {
      "name": "git_branch",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "base_branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch name to use as base."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "repo": {
              "default": "/home/stanley/st2/",
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location of st2 cloned git repo on disk."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "version": {
              "default": "release",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use. Example: 0.7.0."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "v{{version}}",
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Branch name to use. Example: v${version_number}."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Branch st2 repo and push to remote.",
      "enabled": true,
      "entry_point": "git_branch.sh",
      "notify": {},
      "uid": "action:st2cd:git_branch",
      "pack": "st2cd",
      "ref": "st2cd.git_branch",
      "id": "5b87f8740a8b8a567f5895fb",
      "runner_type": "run-remote-script"
  },
  {
      "name": "git_branch_remove",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "default": "/home/stanley/st2/",
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location of st2 cloned git repo on disk."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "default": "release",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Branch name to use. Example: v${version_number}."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Remove branch from repo and push to remote.",
      "enabled": true,
      "entry_point": "git_branch_remove.sh",
      "notify": {},
      "uid": "action:st2cd:git_branch_remove",
      "pack": "st2cd",
      "ref": "st2cd.git_branch_remove",
      "id": "5b87f8740a8b8a567f5895fc",
      "runner_type": "run-remote-script"
  },
  {
      "name": "git_clean",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "position": 0,
              "required": true,
              "type": "string"
          },
          "repo_dir": {
              "default": "{{dir}}",
              "position": 1,
              "type": "string"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Remove clone of git repo",
      "enabled": true,
      "entry_point": "git_clean.sh",
      "notify": {},
      "uid": "action:st2cd:git_clean",
      "pack": "st2cd",
      "ref": "st2cd.git_clean",
      "id": "5b87f8740a8b8a567f5895fd",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "git_clone",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "default": null,
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Git repository to clone"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "default": "master",
              "position": 2,
              "required": true,
              "type": "string",
              "description": "The branch to clone"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          },
          "target": {
              "default": null,
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Where to clone the repo to"
          }
      },
      "tags": [],
      "description": "Clone a git repo",
      "enabled": true,
      "entry_point": "git_clone.sh",
      "notify": {},
      "uid": "action:st2cd:git_clone",
      "pack": "st2cd",
      "ref": "st2cd.git_clone",
      "id": "5b87f8740a8b8a567f5895fe",
      "runner_type": "run-remote-script"
  },
  {
      "name": "git_commit_changes",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location of cloned git repo on disk."
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Branch to commit changes to."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "commit_msg": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Commit message to use."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Commits all open changes in branch.",
      "enabled": true,
      "entry_point": "git_commit_changes.sh",
      "notify": {},
      "uid": "action:st2cd:git_commit_changes",
      "pack": "st2cd",
      "ref": "st2cd.git_commit_changes",
      "id": "5b87f8740a8b8a567f5895ff",
      "runner_type": "run-remote-script"
  },
  {
      "name": "git_create_branch",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "base_branch": {
              "default": "master",
              "position": 2,
              "type": "string",
              "description": "Branch name to use as base."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location of cloned git repo on disk."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "default": "test",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Branch name to use. Example: v${version_number}."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Creates a branch.",
      "enabled": true,
      "entry_point": "git_create_branch.sh",
      "notify": {},
      "uid": "action:st2cd:git_create_branch",
      "pack": "st2cd",
      "ref": "st2cd.git_create_branch",
      "id": "5b87f8740a8b8a567f589600",
      "runner_type": "run-remote-script"
  },
  {
      "name": "git_delete_branch",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Name of the project"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Branch to delete"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Remove branch from repo and push to remote.",
      "enabled": true,
      "entry_point": "git_delete_branch.sh",
      "notify": {},
      "uid": "action:st2cd:git_delete_branch",
      "pack": "st2cd",
      "ref": "st2cd.git_delete_branch",
      "id": "5b87f8740a8b8a567f589601",
      "runner_type": "run-remote-script"
  },
  {
      "name": "git_push_branch",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location of cloned git repo on disk."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "default": "test",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Branch name to use. Example: v${version_number}."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Pushes a branch upwards to a git repo.",
      "enabled": true,
      "entry_point": "git_push_branch.sh",
      "notify": {},
      "uid": "action:st2cd:git_push_branch",
      "pack": "st2cd",
      "ref": "st2cd.git_push_branch",
      "id": "5b87f8740a8b8a567f589602",
      "runner_type": "run-remote-script"
  },
  {
      "name": "git_simple_branch",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "default": "/home/stanley/st2/",
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location of st2 cloned git repo on disk."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "default": "release",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Branch name to use. Example: v${version_number}."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Branch st2 repo and push to remote.",
      "enabled": true,
      "entry_point": "git_simple_branch.sh",
      "notify": {},
      "uid": "action:st2cd:git_simple_branch",
      "pack": "st2cd",
      "ref": "st2cd.git_simple_branch",
      "id": "5b87f8740a8b8a567f589603",
      "runner_type": "run-remote-script"
  },
  {
      "name": "git_simple_clone",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "default": null,
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Git repository to clone"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "target": {
              "default": null,
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Where to clone the repo to"
          }
      },
      "tags": [],
      "description": "Clone a git repo",
      "enabled": true,
      "entry_point": "git_simple_clone.sh",
      "notify": {},
      "uid": "action:st2cd:git_simple_clone",
      "pack": "st2cd",
      "ref": "st2cd.git_simple_clone",
      "id": "5b87f8740a8b8a567f589604",
      "runner_type": "run-remote-script"
  },
  {
      "name": "install_examples",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Install St2 examples",
      "enabled": true,
      "entry_point": "install_examples.sh",
      "notify": {},
      "uid": "action:st2cd:install_examples",
      "pack": "st2cd",
      "ref": "st2cd.install_examples",
      "id": "5b87f8740a8b8a567f589605",
      "runner_type": "run-remote-script"
  },
  {
      "name": "install_tests",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "default": "master",
              "position": 2,
              "type": "string",
              "description": "st2tests branch that should be installed."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          },
          "pack": {
              "position": 1,
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Install St2 tests",
      "enabled": true,
      "entry_point": "install_tests.sh",
      "notify": {},
      "uid": "action:st2cd:install_tests",
      "pack": "st2cd",
      "ref": "st2cd.install_tests",
      "id": "5b87f8740a8b8a567f589606",
      "runner_type": "run-remote-script"
  },
  {
      "name": "json_field_modify",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "value": {
              "required": true,
              "type": "string",
              "description": "Value to replace field with."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "field": {
              "required": true,
              "type": "string",
              "description": "Name of the field to modify the value for."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "file_path": {
              "required": true,
              "type": "string",
              "description": "Location of JSON file on disk."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Modify a field in JSON file to given value.",
      "enabled": true,
      "entry_point": "json_field_modify.py",
      "notify": {},
      "uid": "action:st2cd:json_field_modify",
      "pack": "st2cd",
      "ref": "st2cd.json_field_modify",
      "id": "5b87f8740a8b8a567f589607",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "kvstore",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "key": {
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "value": {
              "type": "string"
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "st2host": {
              "default": "127.0.0.1",
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "action": {
              "required": true,
              "enum": [
                  "create",
                  "get",
                  "delete",
                  "update"
              ]
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Get value from datastore",
      "enabled": true,
      "entry_point": "kvstore.py",
      "notify": {},
      "uid": "action:st2cd:kvstore",
      "pack": "st2cd",
      "ref": "st2cd.kvstore",
      "id": "5b87f8740a8b8a567f589608",
      "runner_type": "run-python"
  },
  {
      "name": "make_debs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "repo": {
              "default": "st2",
              "type": "string"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "cd {{dir}}/{{repo}} && make debs",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Use make targets to build debian packages",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:make_debs",
      "pack": "st2cd",
      "ref": "st2cd.make_debs",
      "id": "5b87f8740a8b8a567f589609",
      "runner_type": "run-remote"
  },
  {
      "name": "make_docs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "repo": {
              "default": "st2_master",
              "required": true,
              "type": "string"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "cd {{dir}}/{{repo}} && make docs",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Build docs",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:make_docs",
      "pack": "st2cd",
      "ref": "st2cd.make_docs",
      "id": "5b87f8740a8b8a567f58960a",
      "runner_type": "run-remote"
  },
  {
      "name": "make_pytests",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "repo": {
              "default": "st2_master",
              "required": true,
              "type": "string"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "cd /tmp/{{repo}} && make pytests",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run pytests",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:make_pytests",
      "pack": "st2cd",
      "ref": "st2cd.make_pytests",
      "id": "5b87f8740a8b8a567f58960b",
      "runner_type": "run-remote"
  },
  {
      "name": "make_rhel_rpms",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "repo": {
              "default": "st2",
              "type": "string"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "cd {{dir}}/{{repo}} && make rhel-rpms",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Use make targets to build RHEL6 rpm packages",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:make_rhel_rpms",
      "pack": "st2cd",
      "ref": "st2cd.make_rhel_rpms",
      "id": "5b87f8740a8b8a567f58960c",
      "runner_type": "run-remote"
  },
  {
      "name": "make_rpms",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "repo": {
              "default": "st2",
              "type": "string"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "cd {{dir}}/{{repo}} && make rpms",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Use make targets to build rpm packages",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:make_rpms",
      "pack": "st2cd",
      "ref": "st2cd.make_rpms",
      "id": "5b87f8740a8b8a567f58960d",
      "runner_type": "run-remote"
  },
  {
      "name": "mistral_branch_candidate",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo_dir": {
              "default": "/home/stanley",
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "requirements": {
              "default": "",
              "type": "string",
              "description": "List of python dependencies from pip freeze."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "repo_action": {
              "default": "git@github.com:StackStorm/st2mistral.git",
              "type": "string"
          },
          "repo_client": {
              "default": "git@github.com:StackStorm/python-mistralclient.git",
              "type": "string"
          },
          "repo_main": {
              "default": "git@github.com:StackStorm/mistral.git",
              "type": "string"
          },
          "repo_branch": {
              "default": "master",
              "type": "string"
          },
          "host": {
              "type": "string",
              "description": "The name of the hosts where the build process will run."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "The release version major.minor.patch."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "debug": {
              "default": false,
              "type": "boolean"
          }
      },
      "tags": [],
      "description": "Create a new release candidate for Mistral.",
      "enabled": true,
      "entry_point": "workflows/mistral_branch_candidate.yaml",
      "notify": {},
      "uid": "action:st2cd:mistral_branch_candidate",
      "pack": "st2cd",
      "ref": "st2cd.mistral_branch_candidate",
      "id": "5b87f8740a8b8a567f58960e",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral_create_branch",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "version": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "The release version major.minor.patch."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "repo_client": {
              "default": "/home/stanley/mistralclient",
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Location of cloned python-mistralclient repo on disk."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo_action": {
              "default": "/home/stanley/st2mistral",
              "position": 3,
              "required": true,
              "type": "string",
              "description": "Location of cloned st2mistral repo on disk."
          },
          "repo_main": {
              "default": "/home/stanley/mistral",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Location of cloned mistral repo on disk."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "requirements": {
              "default": "",
              "position": 4,
              "type": "string",
              "description": "List of python dependencies from pip freeze."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Create a new branch for Mistral.",
      "enabled": true,
      "entry_point": "mistral_create_branch.sh",
      "notify": {},
      "uid": "action:st2cd:mistral_create_branch",
      "pack": "st2cd",
      "ref": "st2cd.mistral_create_branch",
      "id": "5b87f8740a8b8a567f58960f",
      "runner_type": "run-remote-script"
  },
  {
      "name": "mistral_create_tag",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "version": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "The release version major.minor.patch."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "repo_client": {
              "default": "/home/stanley/mistralclient",
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Location of cloned python-mistralclient repo on disk."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo_action": {
              "default": "/home/stanley/st2mistral",
              "position": 3,
              "required": true,
              "type": "string",
              "description": "Location of cloned st2mistral repo on disk."
          },
          "repo_main": {
              "default": "/home/stanley/mistral",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Location of cloned mistral repo on disk."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Create a new tag for Mistral.",
      "enabled": true,
      "entry_point": "mistral_create_tag.sh",
      "notify": {},
      "uid": "action:st2cd:mistral_create_tag",
      "pack": "st2cd",
      "ref": "st2cd.mistral_create_tag",
      "id": "5b87f8740a8b8a567f589610",
      "runner_type": "run-remote-script"
  },
  {
      "name": "mistral_release_candidate",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "mis_repo_dir": {
              "default": "/home/stanley",
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "mis_repo_main": {
              "default": "git@github.com:StackStorm/mistral.git",
              "type": "string"
          },
          "build_host": {
              "type": "string",
              "description": "The name of the hosts where the build process will run."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "test_host": {
              "type": "string",
              "description": "The name of the hosts where the integration test(s) will run."
          },
          "debug": {
              "default": false,
              "type": "boolean"
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "The release version major.minor.patch."
          },
          "st2_repo_branch": {
              "default": "master",
              "type": "string"
          },
          "mis_repo_client": {
              "default": "git@github.com:StackStorm/python-mistralclient.git",
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "mis_repo_branch": {
              "default": "master",
              "type": "string"
          },
          "mis_repo_action": {
              "default": "git@github.com:StackStorm/st2mistral.git",
              "type": "string"
          }
      },
      "tags": [],
      "description": "Run the pipeline to release candidate for Mistral.",
      "enabled": true,
      "entry_point": "workflows/mistral_release_candidate.yaml",
      "notify": {},
      "uid": "action:st2cd:mistral_release_candidate",
      "pack": "st2cd",
      "ref": "st2cd.mistral_release_candidate",
      "id": "5b87f8740a8b8a567f589611",
      "runner_type": "mistral-v2"
  },
  {
      "name": "mistral_tag_release",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo_dir": {
              "default": "/home/stanley",
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "repo_client": {
              "default": "git@github.com:StackStorm/python-mistralclient.git",
              "type": "string"
          },
          "repo_main": {
              "default": "git@github.com:StackStorm/mistral.git",
              "type": "string"
          },
          "repo_branch": {
              "default": "st2-{{version}}",
              "type": "string",
              "immutable": true
          },
          "debug": {
              "default": false,
              "type": "boolean"
          },
          "repo_action": {
              "default": "git@github.com:StackStorm/st2mistral.git",
              "type": "string"
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "The release version major.minor.patch."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "host": {
              "type": "string",
              "description": "The name of the hosts where the build process will run."
          }
      },
      "tags": [],
      "description": "Tag the release for Mistral.",
      "enabled": true,
      "entry_point": "workflows/mistral_tag_release.yaml",
      "notify": {},
      "uid": "action:st2cd:mistral_tag_release",
      "pack": "st2cd",
      "ref": "st2cd.mistral_tag_release",
      "id": "5b87f8740a8b8a567f589612",
      "runner_type": "mistral-v2"
  },
  {
      "name": "publish_coverage_report",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cover_dir": {
              "default": "st2_master/cover/",
              "position": 0,
              "required": true,
              "type": "string"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bucket": {
              "default": "st2coverage.stackstorm.net",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "The base path to the bucket"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 180,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "default": "master",
              "position": 2,
              "required": true,
              "type": "string"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Upload coverage report to S3.",
      "enabled": true,
      "entry_point": "s3_upload_coverage.sh",
      "notify": {},
      "uid": "action:st2cd:publish_coverage_report",
      "pack": "st2cd",
      "ref": "st2cd.publish_coverage_report",
      "id": "5b87f8740a8b8a567f589613",
      "runner_type": "run-remote-script"
  },
  {
      "name": "puppet_bootstrap",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "role": {
              "default": "",
              "type": "string",
              "description": "role to use during puppet apply"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "Host to run build on"
          }
      },
      "tags": [],
      "description": "Bootstrap a new host for St2 masterless Puppet",
      "enabled": true,
      "entry_point": "workflows/puppet_bootstrap.yaml",
      "notify": {},
      "uid": "action:st2cd:puppet_bootstrap",
      "pack": "st2cd",
      "ref": "st2cd.puppet_bootstrap",
      "id": "5b87f8740a8b8a567f589614",
      "runner_type": "action-chain"
  },
  {
      "name": "puprun",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "environment": {
              "default": "production",
              "type": "string",
              "description": "Puppet Environment (aka: git branch) to run. Will revert to 'production' when deleted"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "puprun",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "default": {
                  "environment": "{{environment}}"
              },
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "role": {
              "type": "string",
              "description": "Apply a specific role to a machine (will remain on this role until changed)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Executes puprun command",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:puprun",
      "pack": "st2cd",
      "ref": "st2cd.puprun",
      "id": "5b87f8740a8b8a567f589615",
      "runner_type": "run-remote"
  },
  {
      "name": "pypi_upload",
      "parameters": {
          "fork": {
              "default": "StackStorm",
              "position": 3,
              "type": "string",
              "description": "Fork to use"
          },
          "pypi_password": {
              "default": "{{st2kv.system.st2_pypi_password}}",
              "position": 6,
              "secret": true,
              "type": "string",
              "description": "Password for the pypi account"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "version": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "repo": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Name of git repo"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "project": {
              "default": "{{repo}}",
              "position": 1,
              "type": "string",
              "description": "Name of the project"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "pypi_username": {
              "default": "{{st2kv.system.st2_pypi_username}}",
              "position": 5,
              "secret": true,
              "type": "string",
              "description": "Username to login to pypi"
          }
      },
      "tags": [],
      "description": "Upload project to pypi",
      "enabled": true,
      "entry_point": "pypi_upload.sh",
      "notify": {},
      "uid": "action:st2cd:pypi_upload",
      "pack": "st2cd",
      "ref": "st2cd.pypi_upload",
      "id": "5b87f8740a8b8a567f589616",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "pytests",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo": {
              "default": "https://github.com/StackStorm/st2.git",
              "required": true,
              "type": "string",
              "description": "Url of the repo to clone"
          },
          "author": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "branch": {
              "default": "master",
              "required": true,
              "type": "string",
              "description": "The branch to test"
          },
          "revision": {
              "required": true,
              "type": "string",
              "description": ""
          },
          "repo_target": {
              "default": "st2_{{branch}}",
              "type": "string",
              "description": "Possible options are all, actions, rules."
          }
      },
      "tags": [],
      "description": "Clones a repo to a remote host, and runs python tests",
      "enabled": true,
      "entry_point": "workflows/st2_pytests.yaml",
      "notify": {},
      "uid": "action:st2cd:pytests",
      "pack": "st2cd",
      "ref": "st2cd.pytests",
      "id": "5b87f8750a8b8a567f58964c",
      "runner_type": "action-chain"
  },
  {
      "name": "pytests_split",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "build_server": {
              "required": true,
              "type": "string",
              "description": "Build slave host"
          },
          "repo_target": {
              "default": "/tmp/st2_{{branch}}",
              "type": "string",
              "description": "Possible options are all, actions, rules."
          }
      },
      "tags": [],
      "description": "Runs st2 python tests on a remote build server.",
      "enabled": true,
      "entry_point": "workflows/pytests_split.yaml",
      "notify": {},
      "uid": "action:st2cd:pytests_split",
      "pack": "st2cd",
      "ref": "st2cd.pytests_split",
      "id": "5b87f8740a8b8a567f589617",
      "runner_type": "action-chain"
  },
  {
      "name": "run_puppet_apply",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "bash /opt/puppet/script/puppet-apply",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 1800,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run puppet apply",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:run_puppet_apply",
      "pack": "st2cd",
      "ref": "st2cd.run_puppet_apply",
      "id": "5b87f8740a8b8a567f589618",
      "runner_type": "run-remote"
  },
  {
      "name": "run_puppet_bootstrap",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "bash {{dir}}/{{file}}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "file": {
              "default": "bootstrap-puppet",
              "type": "string"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run puppet bootstrap script",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:run_puppet_bootstrap",
      "pack": "st2cd",
      "ref": "st2cd.run_puppet_bootstrap",
      "id": "5b87f8740a8b8a567f589619",
      "runner_type": "run-remote"
  },
  {
      "name": "run_st2_deploy",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "version": {
              "default": "0.6.0",
              "type": "string"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Run st2 deployment script",
      "enabled": true,
      "entry_point": "st2_deploy.sh",
      "notify": {},
      "uid": "action:st2cd:run_st2_deploy",
      "pack": "st2cd",
      "ref": "st2cd.run_st2_deploy",
      "id": "5b87f8740a8b8a567f58961a",
      "runner_type": "run-remote-script"
  },
  {
      "name": "s3_docs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bucket": {
              "default": "docs-staging.stackstorm.net",
              "position": 1,
              "required": true,
              "type": "string",
              "description": "The base path to the bucket"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "default": "st2_master",
              "position": 0,
              "required": true,
              "type": "string"
          },
          "version": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "St2 version"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "location": {
              "default": "",
              "position": 3,
              "type": "string",
              "description": "Extra subfolder to copy to - use leading /"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "s3 docs",
      "enabled": true,
      "entry_point": "s3_docs.sh",
      "notify": {},
      "uid": "action:st2cd:s3_docs",
      "pack": "st2cd",
      "ref": "st2cd.s3_docs",
      "id": "5b87f8740a8b8a567f58961b",
      "runner_type": "run-remote-script"
  },
  {
      "name": "set_hostname",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "hostname": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "The hostname to set"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          },
          "distro": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "The Linux distro",
              "enum": [
                  "Ubuntu",
                  "Fedora",
                  "CentOS",
                  "RedHat"
              ]
          }
      },
      "tags": [],
      "description": "Set the hostname on a VM",
      "enabled": true,
      "entry_point": "set_hostname.sh",
      "notify": {},
      "uid": "action:st2cd:set_hostname",
      "pack": "st2cd",
      "ref": "st2cd.set_hostname",
      "id": "5b87f8740a8b8a567f58961c",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "set_hostname_cloud",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "redhat": {
              "default": "sed -i -e \"s/\\(HOSTNAME=\\).*/\\1{{hostname}}/\" /etc/sysconfig/network && hostname {{hostname}} && echo \"127.0.0.1 {{hostname}}\" >> /etc/hosts",
              "type": "string",
              "immutable": true
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "The hostname to set"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "cmd": {
              "default": "{% if distro in [\"RHEL6\",\"RHEL7\",\"pkg_CENTOS6\",\"pkg_CENTOS7\",\"pkg_RHEL6\",\"pkg_RHEL7\"] -%}{{redhat}}{% elif distro in [\"UBUNTU14\",\"pkg_UBUNTU14\",\"pkg_UBUNTU16\",\"UBUNTU16\"] -%}{{ubuntu}}{% elif distro in [\"F20\",\"F21\"] -%}{{fedora}}{% endif -%}",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "distro": {
              "required": true,
              "enum": [
                  "RHEL6",
                  "RHEL7",
                  "F20",
                  "F21",
                  "UBUNTU14",
                  "UBUNTU16",
                  "pkg_CENTOS6",
                  "pkg_CENTOS7",
                  "pkg_RHEL6",
                  "pkg_RHEL7",
                  "pkg_UBUNTU14",
                  "pkg_UBUNTU16"
              ]
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "ubuntu": {
              "default": "sed -i -e \"s/\\(preserve_hostname: \\)false/\\1true/\" /etc/cloud/cloud.cfg && echo \"{{hostname}}\" > /etc/hostname && hostname {{hostname}} && echo \"127.0.0.1 {{hostname}}\" >> /etc/hosts",
              "type": "string",
              "immutable": true
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "fedora": {
              "default": "echo -e \"HOSTNAME={{hostname}}\" >> /etc/sysconfig/network && hostname {{hostname}} && echo \"127.0.0.1 {{hostname}}\" >> /etc/hosts",
              "type": "string",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Set the hostname on a VM and update cloud.cfg",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:set_hostname_cloud",
      "pack": "st2cd",
      "ref": "st2cd.set_hostname_cloud",
      "id": "5b87f8740a8b8a567f58961d",
      "runner_type": "run-remote"
  },
  {
      "name": "setup_e2e_tests",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "version": {
              "default": "master",
              "position": 0,
              "type": "string",
              "description": "Version used for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Install and setup st2 end to end test requirements",
      "enabled": true,
      "entry_point": "setup_e2e_tests.sh",
      "notify": {},
      "uid": "action:st2cd:setup_e2e_tests",
      "pack": "st2cd",
      "ref": "st2cd.setup_e2e_tests",
      "id": "5b87f8740a8b8a567f58961e",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_add_annotation_for_release",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "st2_repo_target": {
              "default": "/home/stanley/st2",
              "type": "string",
              "description": "Path to clone st2 repo to."
          },
          "st2_repo": {
              "default": "https://github.com/StackStorm/st2.git",
              "type": "string",
              "description": "Url of the st2 repo to clone"
          },
          "branch": {
              "required": true,
              "type": "string",
              "description": "st2 branch to use."
          }
      },
      "tags": [],
      "description": "Creates Librato annotation for a release",
      "enabled": true,
      "entry_point": "workflows/st2_add_annotation_for_release.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_add_annotation_for_release",
      "pack": "st2cd",
      "ref": "st2cd.st2_add_annotation_for_release",
      "id": "5b87f8750a8b8a567f589657",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_aio",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo": {
              "default": "https://github.com/StackStorm/st2.git",
              "type": "string",
              "description": "Url of the repo to clone"
          },
          "revision": {
              "type": "string",
              "description": ""
          },
          "environment": {
              "default": "sandbox",
              "type": "string",
              "description": "Environment to deploy host to"
          },
          "key_name": {
              "default": "st2_deploy",
              "type": "string",
              "description": "SSH key to use during intial instance creation"
          },
          "hostname": {
              "required": true,
              "type": "string"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "instance_type": {
              "default": "m3.medium",
              "type": "string",
              "description": "Flavor of to use for instance creation"
          },
          "base_user": {
              "default": "ubuntu",
              "type": "string",
              "description": "Username for initial ssh test"
          },
          "version": {
              "default": "0.8.3",
              "type": "string",
              "description": "Version of StackStorm to deploy"
          },
          "role": {
              "default": "st2staging",
              "type": "string"
          },
          "build": {
              "type": "string",
              "description": "Build number"
          },
          "branch": {
              "default": "master",
              "required": true,
              "type": "string",
              "description": "The branch to build the packages were built from."
          },
          "dl_server": {
              "default": "dl-staging201",
              "type": "string"
          },
          "distro": {
              "default": "UBUNTU14",
              "type": "string",
              "description": "Linux distro to test against"
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string",
              "description": "Path to local private key that corresponds to {{key_name}}"
          },
          "repo_target": {
              "default": "st2_{{branch}}",
              "type": "string",
              "description": ""
          }
      },
      "tags": [],
      "description": "Unit test, pkg, deploy st2",
      "enabled": true,
      "entry_point": "workflows/st2_aio.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_aio",
      "pack": "st2cd",
      "ref": "st2cd.st2_aio",
      "id": "5b87f8740a8b8a567f58961f",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_auth_ldap_pkg_enterprise",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo": {
              "default": "https://{{github_token}}:x-oauth-basic@github.com/{{repo_name}}.git",
              "type": "string",
              "description": "Url of the repo to clone.",
              "immutable": true
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "s3_bucket": {
              "default": "st2enterprise",
              "required": true,
              "type": "string",
              "description": "S3 bucket to push built egg to."
          },
          "github_token": {
              "default": "{{st2kv.system.st2_github_token}}",
              "type": "string",
              "description": "GitHub auth token"
          },
          "environment": {
              "type": "string",
              "description": "Environment where to run the packaging action"
          },
          "build": {
              "type": "string",
              "description": "build number"
          },
          "branch": {
              "default": "master",
              "required": false,
              "type": "string",
              "description": "The branch to build."
          },
          "dl_server": {
              "required": false,
              "type": "string",
              "description": "Server where the build artifacts are published."
          },
          "repo_name": {
              "default": "StackStorm/st2-enterprise-auth-backend-ldap",
              "required": true,
              "type": "string",
              "description": "GitHub repo ex. ORG/REPO"
          },
          "repo_target": {
              "default": "/home/stanley/st2_ldap_auth_{{branch}}",
              "type": "string",
              "description": "Directory where the repo is cloned."
          }
      },
      "tags": [],
      "description": "Builds st2enterprise LDAP auth backend egg",
      "enabled": true,
      "entry_point": "workflows/st2_auth_backend_pkg.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_auth_ldap_pkg_enterprise",
      "pack": "st2cd",
      "ref": "st2cd.st2_auth_ldap_pkg_enterprise",
      "id": "5b87f8740a8b8a567f589620",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_auth_pam_pkg",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo": {
              "default": "https://{{github_token}}:x-oauth-basic@github.com/{{repo_name}}.git",
              "type": "string",
              "description": "Url of the repo to clone.",
              "immutable": true
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "s3_bucket": {
              "default": "st2community",
              "required": true,
              "type": "string",
              "description": "S3 bucket to push built egg to."
          },
          "github_token": {
              "default": "{{st2kv.system.st2_github_token}}",
              "type": "string",
              "description": "GitHub auth token"
          },
          "environment": {
              "type": "string",
              "description": "Environment where to run the packaging action"
          },
          "build": {
              "type": "string",
              "description": "build number"
          },
          "branch": {
              "default": "master",
              "required": false,
              "type": "string",
              "description": "The branch to build."
          },
          "dl_server": {
              "required": false,
              "type": "string",
              "description": "Server where the build artifacts are published."
          },
          "repo_name": {
              "default": "StackStorm/st2-auth-backend-pam",
              "required": true,
              "type": "string",
              "description": "GitHub repo ex. ORG/REPO"
          },
          "repo_target": {
              "default": "/home/stanley/st2_pam_auth_{{branch}}",
              "type": "string",
              "description": "Directory where the repo is cloned."
          }
      },
      "tags": [],
      "description": "Builds st2 PAM auth backend egg",
      "enabled": true,
      "entry_point": "workflows/st2_auth_backend_pkg.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_auth_pam_pkg",
      "pack": "st2cd",
      "ref": "st2cd.st2_auth_pam_pkg",
      "id": "5b87f8740a8b8a567f589621",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_bootstrap_test",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "key_name": {
              "default": "st2_deploy",
              "type": "string"
          },
          "hostname": {
              "required": true,
              "type": "string"
          },
          "environment": {
              "default": "sandbox",
              "enum": [
                  "sandbox",
                  "staging",
                  "production"
              ],
              "type": "string"
          },
          "instance_type": {
              "default": "m3.large",
              "type": "string"
          },
          "version_arg": {
              "default": "{% if version != '' %}--version={{version}}{% endif %}",
              "type": "string",
              "immutable": true
          },
          "version": {
              "default": "",
              "type": "string"
          },
          "role": {
              "default": "default",
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "release": {
              "default": "stable",
              "enum": [
                  "stable",
                  "unstable"
              ],
              "type": "string"
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string"
          },
          "distro": {
              "default": "UBUNTU14",
              "type": "string"
          }
      },
      "tags": [],
      "description": "New bootstrap script test",
      "enabled": true,
      "entry_point": "workflows/st2_bootstrap_test.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_bootstrap_test",
      "pack": "st2cd",
      "ref": "st2cd.st2_bootstrap_test",
      "id": "5b87f8740a8b8a567f589622",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_chg_ver_for_enterprise_ldap",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2-enterprise-auth-backend-ldap",
              "position": 0,
              "type": "string",
              "description": "Project name for st2 enterprise ldap auth backend"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the st2 enterprise ldap repo",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_enterprise_ldap.sh",
      "notify": {},
      "uid": "action:st2cd:st2_chg_ver_for_enterprise_ldap",
      "pack": "st2cd",
      "ref": "st2cd.st2_chg_ver_for_enterprise_ldap",
      "id": "5b87f8740a8b8a567f589623",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_chg_ver_for_gui",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for st2",
              "enum": [
                  "st2chatops",
                  "st2flow",
                  "st2web"
              ]
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to update to. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the GUI repo",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_gui.sh",
      "notify": {},
      "uid": "action:st2cd:st2_chg_ver_for_gui",
      "pack": "st2cd",
      "ref": "st2cd.st2_chg_ver_for_gui",
      "id": "5b87f8740a8b8a567f589624",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_chg_ver_for_mistral",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "mistral",
              "position": 0,
              "type": "string",
              "description": "Project name for mistral"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to update to. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the mistral repo",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_mistral.sh",
      "notify": {},
      "uid": "action:st2cd:st2_chg_ver_for_mistral",
      "pack": "st2cd",
      "ref": "st2cd.st2_chg_ver_for_mistral",
      "id": "5b87f8740a8b8a567f589625",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_chg_ver_for_mistralclient",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "python-mistralclient",
              "position": 0,
              "type": "string",
              "description": "Project name for mistral client"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to update to. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the mistral client repo",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_mistralclient.sh",
      "notify": {},
      "uid": "action:st2cd:st2_chg_ver_for_mistralclient",
      "pack": "st2cd",
      "ref": "st2cd.st2_chg_ver_for_mistralclient",
      "id": "5b87f8740a8b8a567f589626",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_chg_ver_for_st2",
      "parameters": {
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "update_mistral": {
              "default": false,
              "position": 4,
              "type": "boolean",
              "description": "If true, update mistralclient version in requirements.txt."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "local_repo": {
              "position": 6,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to update to. Should include the patch e.g. 0.1.0"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "update_changelog": {
              "default": false,
              "position": 5,
              "type": "boolean",
              "description": "If true, update version in changelog."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "project": {
              "default": "st2",
              "position": 0,
              "type": "string",
              "description": "Project name for st2"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the st2 repo",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_st2.sh",
      "notify": {},
      "uid": "action:st2cd:st2_chg_ver_for_st2",
      "pack": "st2cd",
      "ref": "st2cd.st2_chg_ver_for_st2",
      "id": "5b87f8740a8b8a567f589627",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_chg_ver_for_st2_pkg",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2-packages",
              "position": 0,
              "type": "string",
              "description": "Project name for st2 packages"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to update to. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the st2 packages repo",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_st2_pkg.sh",
      "notify": {},
      "uid": "action:st2cd:st2_chg_ver_for_st2_pkg",
      "pack": "st2cd",
      "ref": "st2cd.st2_chg_ver_for_st2_pkg",
      "id": "5b87f8740a8b8a567f589628",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_chg_ver_for_st2docs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2docs",
              "position": 0,
              "type": "string",
              "description": "Project name for st2docs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to update to. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Change the version for the st2docs repo",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_st2docs.sh",
      "notify": {},
      "uid": "action:st2cd:st2_chg_ver_for_st2docs",
      "pack": "st2cd",
      "ref": "st2cd.st2_chg_ver_for_st2docs",
      "id": "5b87f8740a8b8a567f589629",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_deploy_test",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo": {
              "default": "https://github.com/StackStorm/st2.git",
              "type": "string",
              "description": "Url of the repo to clone"
          },
          "environment": {
              "default": "sandbox",
              "type": "string",
              "description": "Environment to deploy host to"
          },
          "key_name": {
              "default": "st2_deploy",
              "type": "string",
              "description": "SSH key to use during intial instance creation"
          },
          "hostname": {
              "required": true,
              "type": "string"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "instance_type": {
              "default": "m3.large",
              "type": "string",
              "description": "Flavor of to use for instance creation"
          },
          "base_user": {
              "default": "ubuntu",
              "type": "string",
              "description": "Username for initial ssh test"
          },
          "version": {
              "default": "0.8.3",
              "type": "string",
              "description": "Version of StackStorm to deploy"
          },
          "role": {
              "default": "",
              "type": "string"
          },
          "build": {
              "required": true,
              "type": "string",
              "description": "Build number"
          },
          "branch": {
              "default": "master",
              "required": true,
              "type": "string",
              "description": "The branch to build the packages were built from."
          },
          "dl_server": {
              "default": "http://dl-staging201",
              "type": "string"
          },
          "revision": {
              "type": "string",
              "description": ""
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string",
              "description": "Path to local private key that corresponds to {{key_name}}"
          },
          "distro": {
              "default": "UBUNTU14",
              "type": "string",
              "description": "Linux distro to test against"
          }
      },
      "tags": [],
      "description": "Tests st2 deployment script that is used in st2express",
      "enabled": true,
      "entry_point": "workflows/st2_deploy_test.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_deploy_test",
      "pack": "st2cd",
      "ref": "st2cd.st2_deploy_test",
      "id": "5b87f8750a8b8a567f58962a",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_docs",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "author": {
              "type": "string",
              "description": "git author"
          },
          "docs_url": {
              "default": "docs-staging.uswest2.stackstorm.net",
              "type": "string"
          },
          "repo": {
              "default": "https://github.com/StackStorm/st2docs.git",
              "type": "string",
              "description": "Url of the docs repo to clone"
          },
          "branch": {
              "default": "master",
              "required": true,
              "type": "string",
              "description": "The branch to build the docs from"
          },
          "repo_target": {
              "default": "st2_{{branch}}",
              "type": "string",
              "description": "Target directory on server for repo to be cloned in to."
          },
          "environment": {
              "type": "string",
              "description": "'production' to deploy to docs.stackstorm.com, or 'staging'"
          },
          "revision": {
              "type": "string",
              "description": "git revision SHA"
          }
      },
      "tags": [],
      "description": "Build st2docs and deploy to s3 bucket",
      "enabled": true,
      "entry_point": "workflows/st2_docs.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_docs",
      "pack": "st2cd",
      "ref": "st2cd.st2_docs",
      "id": "5b87f8750a8b8a567f58962b",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_e2e_tests",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "host_fqdn": {
              "required": true,
              "type": "string"
          },
          "windows_host_fqdn": {
              "required": true,
              "type": "string"
          },
          "protocol": {
              "default": "http",
              "enum": [
                  "http",
                  "https"
              ],
              "type": "string"
          },
          "version": {
              "type": "string",
              "description": "Version used for the release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "default": "st2cd.st2_e2e_tests.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "host_ip": {
              "required": true,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "windows_username": {
              "type": "string",
              "description": "Username to authenticate to the Windows server"
          },
          "enterprise": {
              "default": false,
              "type": "boolean"
          },
          "windows_host_ip": {
              "required": true,
              "type": "string"
          },
          "st2_username": {
              "type": "string",
              "description": "Username to authenticate to the st2 server"
          },
          "windows_password": {
              "secret": true,
              "type": "string",
              "description": "Password to authenticate to the Windows server"
          },
          "st2_password": {
              "type": "string",
              "description": "Password to authenticate to the st2 server"
          }
      },
      "tags": [],
      "description": "Run the set of st2 end to end tests",
      "enabled": true,
      "entry_point": "workflows/st2_e2e_tests.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_e2e_tests",
      "pack": "st2cd",
      "ref": "st2cd.st2_e2e_tests",
      "id": "5b87f8750a8b8a567f58962c",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_enterprise_tests",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "host_ip": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Run the set of st2 enterprise tests",
      "enabled": true,
      "entry_point": "workflows/st2_enterprise_tests.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_enterprise_tests",
      "pack": "st2cd",
      "ref": "st2cd.st2_enterprise_tests",
      "id": "5b87f8750a8b8a567f58962d",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_enterprise_verify_default_rbac_admin_role_assignments_are_present",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Script which verifies that default RBAC admin role assignments exist for all the necessary users",
      "enabled": true,
      "entry_point": "scripts/verify_default_rbac_admin_role_assignments_are_present.sh",
      "notify": {},
      "uid": "action:st2cd:st2_enterprise_verify_default_rbac_admin_role_assignments_are_present",
      "pack": "st2cd",
      "ref": "st2cd.st2_enterprise_verify_default_rbac_admin_role_assignments_are_present",
      "id": "5b87f8750a8b8a567f58962e",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_finalize_release",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "fork": {
              "default": "StackStorm",
              "type": "string",
              "description": "Fork to use"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "type": "string",
              "description": "Host where to run the release process."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version used for the release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cwd": {
              "default": "/home/stanley",
              "type": "string",
              "description": "Working directory where remote shell scripts use"
          }
      },
      "tags": [],
      "description": "Finalize st2 release",
      "enabled": true,
      "entry_point": "workflows/st2_finalize_release.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_finalize_release",
      "pack": "st2cd",
      "ref": "st2cd.st2_finalize_release",
      "id": "5b87f8750a8b8a567f58962f",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_flow_deploy",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Hostname to deploy Flow on"
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version of Flow to deploy"
          }
      },
      "tags": [],
      "description": "Deploys the latest flow on a server",
      "enabled": true,
      "entry_point": "workflows/st2_flow_deploy.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_flow_deploy",
      "pack": "st2cd",
      "ref": "st2cd.st2_flow_deploy",
      "id": "5b87f8750a8b8a567f589630",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_get_installed_version",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "packages": {
              "default": [
                  "st2-auth-ldap",
                  "st2flow",
                  "st2web",
                  "st2mistral",
                  "st2chatops",
                  "st2"
              ],
              "required": true,
              "type": "array"
          }
      },
      "tags": [],
      "description": "Get the installed version of st2 package",
      "enabled": true,
      "entry_point": "workflows/st2_get_installed_version.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_get_installed_version",
      "pack": "st2cd",
      "ref": "st2cd.st2_get_installed_version",
      "id": "5b87f8750a8b8a567f589631",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_make_docs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2docs",
              "position": 0,
              "type": "string",
              "description": "Project name for the doc source"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "docs_url": {
              "default": "docs.stackstorm.com",
              "position": 4,
              "type": "string",
              "description": "URL of the docs website"
          },
          "timeout": {
              "default": 1800,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Name of the branch to use"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Make st2 docs and upload to website.",
      "enabled": true,
      "entry_point": "st2_make_docs.sh",
      "notify": {},
      "uid": "action:st2cd:st2_make_docs",
      "pack": "st2cd",
      "ref": "st2cd.st2_make_docs",
      "id": "5b87f8750a8b8a567f589632",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_perform_migrations",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "to": {
              "required": true,
              "type": "string",
              "description": "Version to which you are upgrading"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "from": {
              "required": true,
              "type": "string",
              "description": "Version from which you are upgrading"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Perform data model migrations on a box with st2 installed",
      "enabled": true,
      "entry_point": "st2_perform_migrations.sh",
      "notify": {},
      "uid": "action:st2cd:st2_perform_migrations",
      "pack": "st2cd",
      "ref": "st2cd.st2_perform_migrations",
      "id": "5b87f8750a8b8a567f589633",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_dev",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "fork": {
              "default": "StackStorm",
              "type": "string",
              "description": "Fork to use"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "type": "string",
              "description": "Host where to run the release process."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cwd": {
              "default": "/home/stanley",
              "type": "string",
              "description": "Working directory where remote shell scripts use"
          }
      },
      "tags": [],
      "description": "Prepare st2 for next iteration of development",
      "enabled": true,
      "entry_point": "workflows/st2_prep_dev.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_prep_dev",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_dev",
      "id": "5b87f8750a8b8a567f589634",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_prep_dev_for_enterprise_ldap",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2-enterprise-auth-backend-ldap",
              "position": 0,
              "type": "string",
              "description": "Project name for st2 enterprise ldap auth backend"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 enterprise ldap repo for next iteration of development",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_enterprise_ldap.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_dev_for_enterprise_ldap",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_dev_for_enterprise_ldap",
      "id": "5b87f8750a8b8a567f589635",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_dev_for_gui",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for st2",
              "enum": [
                  "st2chatops",
                  "st2flow",
                  "st2web"
              ]
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the GUI repo for next iteration of development",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_gui.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_dev_for_gui",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_dev_for_gui",
      "id": "5b87f8750a8b8a567f589636",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_dev_for_mistral",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "mistral",
              "position": 0,
              "type": "string",
              "description": "Project name for mistral"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the mistral repo for next iteration of development",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_mistral.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_dev_for_mistral",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_dev_for_mistral",
      "id": "5b87f8750a8b8a567f589637",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_dev_for_st2",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2",
              "position": 0,
              "type": "string",
              "description": "Project name for st2"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 repo for next iteration of development",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_st2.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_dev_for_st2",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_dev_for_st2",
      "id": "5b87f8750a8b8a567f589638",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_dev_for_st2docs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2docs",
              "position": 0,
              "type": "string",
              "description": "Project name for st2docs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the next release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "master",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2docs repo for next iteration of development",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_st2docs.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_dev_for_st2docs",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_dev_for_st2docs",
      "id": "5b87f8750a8b8a567f589639",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_patch",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "fork": {
              "default": "StackStorm",
              "type": "string",
              "description": "Fork to use"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "type": "string",
              "description": "Host where to run the release process."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the patch release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cwd": {
              "default": "/home/stanley",
              "type": "string",
              "description": "Working directory where remote shell scripts use"
          }
      },
      "tags": [],
      "description": "Prepare st2 for patch release",
      "enabled": true,
      "entry_point": "workflows/st2_prep_patch.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_prep_patch",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_patch",
      "id": "5b87f8750a8b8a567f58963a",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_prep_patch_for_enterprise_ldap",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2-enterprise-auth-backend-ldap",
              "position": 0,
              "type": "string",
              "description": "Project name for st2 enterprise ldap auth backend"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "v{{version.split('.')[0]}}.{{version.split('.')[1]}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 enterprise ldap repo for patch release",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_enterprise_ldap.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_patch_for_enterprise_ldap",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_patch_for_enterprise_ldap",
      "id": "5b87f8750a8b8a567f58963b",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_patch_for_gui",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for st2",
              "enum": [
                  "st2chatops",
                  "st2flow",
                  "st2web"
              ]
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "v{{version.split('.')[0]}}.{{version.split('.')[1]}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the GUI repo for patch release",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_gui.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_patch_for_gui",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_patch_for_gui",
      "id": "5b87f8750a8b8a567f58963c",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_patch_for_mistral",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "mistral",
              "position": 0,
              "type": "string",
              "description": "Project name for mistral"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "st2-{{version}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the mistral repo for patch release",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_mistral.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_patch_for_mistral",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_patch_for_mistral",
      "id": "5b87f8750a8b8a567f58963d",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_patch_for_mistralclient",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "python-mistralclient",
              "position": 0,
              "type": "string",
              "description": "Project name for mistral client"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "st2-{{version}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the mistral client repo for patch release",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_mistralclient.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_patch_for_mistralclient",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_patch_for_mistralclient",
      "id": "5b87f8750a8b8a567f58963e",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_patch_for_st2",
      "parameters": {
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "update_mistral": {
              "default": false,
              "position": 4,
              "type": "boolean",
              "description": "If true, update mistralclient version in requirements.txt."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "local_repo": {
              "position": 6,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version for the patch release. Should include the patch e.g. 0.1.0"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "update_changelog": {
              "default": false,
              "position": 5,
              "type": "boolean",
              "description": "If true, update version in changelog."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "branch": {
              "default": "v{{version.split('.')[0]}}.{{version.split('.')[1]}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "project": {
              "default": "st2",
              "position": 0,
              "type": "string",
              "description": "Project name for st2"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 repo for patch release",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_st2.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_patch_for_st2",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_patch_for_st2",
      "id": "5b87f8750a8b8a567f58963f",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_patch_for_st2_pkg",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2-packages",
              "position": 0,
              "type": "string",
              "description": "Project name for st2 packages"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "v{{version.split('.')[0]}}.{{version.split('.')[1]}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 packages repo for patch release",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_st2_pkg.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_patch_for_st2_pkg",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_patch_for_st2_pkg",
      "id": "5b87f8750a8b8a567f589640",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_patch_for_st2docs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2docs",
              "position": 0,
              "type": "string",
              "description": "Project name for st2docs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version for the patch release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "default": "v{{version.split('.')[0]}}.{{version.split('.')[1]}}",
              "position": 3,
              "type": "string",
              "description": "Branch to update"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2docs repo for patch release",
      "enabled": true,
      "entry_point": "st2_chg_ver_for_st2docs.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_patch_for_st2docs",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_patch_for_st2docs",
      "id": "5b87f8750a8b8a567f589641",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_release",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "fork": {
              "default": "StackStorm",
              "type": "string",
              "description": "Fork to use"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "host": {
              "type": "string",
              "description": "Host where to run the release process."
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "cwd": {
              "default": "/home/stanley",
              "type": "string",
              "description": "Working directory where remote shell scripts use"
          }
      },
      "tags": [],
      "description": "Prepare st2 for release",
      "enabled": true,
      "entry_point": "workflows/st2_prep_release.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release",
      "id": "5b87f8750a8b8a567f589642",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_prep_release_cd_rules",
      "parameters": {
          "fork": {
              "default": "StackStorm",
              "position": 1,
              "type": "string",
              "description": "Fork to use"
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "local_repo": {
              "position": 5,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "version": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "prev_version": {
              "position": 3,
              "required": true,
              "type": "string",
              "description": "Previous version being upgraded from. Should include the patch e.g. 0.1.0"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "oses": {
              "default": "rhel6 rhel7 u14 u16",
              "position": 4,
              "required": true,
              "type": "string",
              "description": "Space seperated list of operating systems supported by st2 e.g. 'rhel6 rhel7 u14 u16'"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "project": {
              "default": "st2",
              "position": 0,
              "type": "string",
              "description": "Project name for st2"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Create and update rules for st2cd.",
      "enabled": true,
      "entry_point": "st2_prep_release_cd_rules.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_cd_rules",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_cd_rules",
      "id": "5b87f8750a8b8a567f589643",
      "runner_type": "run-remote-script"
  },
  {
      "name": "st2_prep_release_ci_rules",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2",
              "position": 0,
              "type": "string",
              "description": "Project name for st2"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "prev_version": {
              "position": 3,
              "required": true,
              "type": "string",
              "description": "Previous version being upgraded from. Should include the patch e.g. 0.1.0"
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 4,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 1,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Create and update rules for st2cd.",
      "enabled": true,
      "entry_point": "st2_prep_release_ci_rules.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_ci_rules",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_ci_rules",
      "id": "5b87f8750a8b8a567f589644",
      "runner_type": "run-remote-script"
  },
  {
      "name": "st2_prep_release_for_enterprise_ldap",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2-enterprise-auth-backend-ldap",
              "position": 0,
              "type": "string",
              "description": "Project name for st2 enterprise ldap auth backend"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 enterprise ldap repo for release",
      "enabled": true,
      "entry_point": "st2_prep_release_for_enterprise_ldap.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_for_enterprise_ldap",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_for_enterprise_ldap",
      "id": "5b87f8750a8b8a567f589645",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_release_for_gui",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name for st2",
              "enum": [
                  "st2chatops",
                  "st2flow",
                  "st2web"
              ]
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the GUI repo for release",
      "enabled": true,
      "entry_point": "st2_prep_release_for_gui.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_for_gui",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_for_gui",
      "id": "5b87f8750a8b8a567f589646",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_release_for_st2",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2",
              "position": 0,
              "type": "string",
              "description": "Project name for st2"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 repo for release",
      "enabled": true,
      "entry_point": "st2_prep_release_for_st2.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_for_st2",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_for_st2",
      "id": "5b87f8750a8b8a567f589647",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_release_for_st2_pkg",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2-packages",
              "position": 0,
              "type": "string",
              "description": "Project name for st2 packaging"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 packaging repo for release",
      "enabled": true,
      "entry_point": "st2_prep_release_for_st2_pkg.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_for_st2_pkg",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_for_st2_pkg",
      "id": "5b87f8750a8b8a567f589648",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_release_for_st2docs",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2docs",
              "position": 0,
              "type": "string",
              "description": "Project name for st2docs"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2docs repo for release",
      "enabled": true,
      "entry_point": "st2_prep_release_for_st2docs.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_for_st2docs",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_for_st2docs",
      "id": "5b87f8750a8b8a567f589649",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_release_for_st2tests",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "default": "st2tests",
              "position": 0,
              "type": "string",
              "description": "Project name for st2 tests"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Prepare the st2 packaging repo for release",
      "enabled": true,
      "entry_point": "st2_prep_release_for_st2tests.sh",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_for_st2tests",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_for_st2tests",
      "id": "5b87f8750a8b8a567f58964a",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_prep_release_rules",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "oses": {
              "default": "rhel6 rhel7 u14 u16",
              "required": true,
              "type": "string",
              "description": "Space separated list of operating systems supported by st2 e.g. 'rhel6 rhel7 u14 u16'"
          },
          "prev_version": {
              "required": true,
              "type": "string",
              "description": "Previous version being upgraded from. Should include the patch e.g. 0.1.0"
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Create and update rules for st2cd and st2ci.",
      "enabled": true,
      "entry_point": "workflows/st2_prep_release_rules.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_prep_release_rules",
      "pack": "st2cd",
      "ref": "st2cd.st2_prep_release_rules",
      "id": "5b87f8750a8b8a567f58964b",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_release_packages",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "version": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "distros": {
              "default": [
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ],
              "type": "array",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Promote all stable st2 packages from staging to production for all supported distros",
      "enabled": true,
      "entry_point": "workflows/st2_release_packages.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_release_packages",
      "pack": "st2cd",
      "ref": "st2cd.st2_release_packages",
      "id": "5b87f8750a8b8a567f58964d",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_set_version_info",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "default": "/home/stanley/st2/",
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Location of st2 cloned git repo on disk."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use. Example: 0.7.0."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "branch": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "Branch name to use. Example: v${version_number}."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Set version info in st2 branch.",
      "enabled": true,
      "entry_point": "st2_set_version_info.sh",
      "notify": {},
      "uid": "action:st2cd:st2_set_version_info",
      "pack": "st2cd",
      "ref": "st2cd.st2_set_version_info",
      "id": "5b87f8750a8b8a567f58964e",
      "runner_type": "run-remote-script"
  },
  {
      "name": "st2_stage_release_packages",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "default": "st2cd.st2_stage_release_packages.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "projects": {
              "items": {
                  "enum": [
                      "st2chatops",
                      "st2web",
                      "st2flow",
                      "st2-packages"
                  ],
                  "type": "string"
              },
              "required": true,
              "type": "array",
              "description": "The list of projects to stage release."
          },
          "wait": {
              "default": false,
              "type": "boolean",
              "description": "If true, then wait until package jobs are completed."
          }
      },
      "tags": [],
      "description": "Stage st2 packages for release. Run this only if circleci doesn't build automatically.",
      "enabled": true,
      "entry_point": "workflows/st2_stage_release_packages.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_stage_release_packages",
      "pack": "st2cd",
      "ref": "st2cd.st2_stage_release_packages",
      "id": "5b87f8750a8b8a567f58964f",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_update_web_cfg",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "config_file": {
              "default": "/opt/stackstorm/static/webui/config.js",
              "position": 0,
              "type": "string",
              "description": "config file path"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Update web config",
      "enabled": true,
      "entry_point": "st2_update_web_cfg.sh",
      "notify": {},
      "uid": "action:st2cd:st2_update_web_cfg",
      "pack": "st2cd",
      "ref": "st2cd.st2_update_web_cfg",
      "id": "5b87f8750a8b8a567f589650",
      "runner_type": "run-remote-script"
  },
  {
      "name": "st2_upgrade_to_enterprise",
      "parameters": {
          "sudo": {
              "default": true,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "ldap_group_dn": {
              "default": "{{st2kv.system.enterprise_ad_group_dn}}",
              "position": 9,
              "type": "string"
          },
          "ldap_bind_passwd": {
              "default": "{{st2kv.system.enterprise_ad_bind_passwd}}",
              "position": 7,
              "type": "string"
          },
          "ldap_base_ou": {
              "default": "{{st2kv.system.enterprise_ad_base_ou}}",
              "position": 8,
              "type": "string"
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "version": {
              "position": 4,
              "type": "string"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "distro": {
              "position": 1,
              "required": true,
              "type": "string",
              "enum": [
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "ldap_bind_dn": {
              "default": "{{st2kv.system.enterprise_ad_bind_dn}}",
              "position": 6,
              "type": "string"
          },
          "pkg_env": {
              "default": "production",
              "position": 3,
              "enum": [
                  "staging",
                  "production"
              ],
              "type": "string"
          },
          "license_key": {
              "position": 0,
              "required": true,
              "type": "string"
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "ldap_host": {
              "default": "{{st2kv.system.enterprise_ad_host}}",
              "position": 5,
              "type": "string"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "release": {
              "default": "stable",
              "position": 2,
              "enum": [
                  "stable",
                  "unstable"
              ],
              "type": "string"
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Run enterprise upgrade",
      "enabled": true,
      "entry_point": "st2_upgrade_to_enterprise.sh",
      "notify": {},
      "uid": "action:st2cd:st2_upgrade_to_enterprise",
      "pack": "st2cd",
      "ref": "st2cd.st2_upgrade_to_enterprise",
      "id": "5b87f8750a8b8a567f589651",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_upgrade_ubuntu14",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo": {
              "type": "string",
              "description": "Git repository for this project"
          },
          "action_params": {
              "default": "date",
              "type": "string",
              "description": "Parameters of action to be run"
          },
          "st2_username": {
              "default": "testu",
              "type": "string",
              "description": "Username to authenticate to the St2 server"
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Host to upgrade st2 on"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "environment": {
              "type": "string",
              "description": ""
          },
          "version": {
              "type": "string"
          },
          "build": {
              "required": true,
              "type": "string",
              "description": "Build number"
          },
          "branch": {
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "core.local",
              "type": "string",
              "description": "Action to run after upgrade"
          },
          "revision": {
              "type": "string"
          },
          "st2_password": {
              "default": "testp",
              "type": "string",
              "description": "Password to authenticate to the St2 server"
          }
      },
      "tags": [],
      "description": "Upgrades an existing st2 installation",
      "enabled": true,
      "entry_point": "workflows/st2_upgrade_ubuntu14.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_upgrade_ubuntu14",
      "pack": "st2cd",
      "ref": "st2cd.st2_upgrade_ubuntu14",
      "id": "5b87f8750a8b8a567f589652",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_upgrade_ubuntu16",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo": {
              "type": "string",
              "description": "Git repository for this project"
          },
          "action_params": {
              "default": "date",
              "type": "string",
              "description": "Parameters of action to be run"
          },
          "st2_username": {
              "default": "testu",
              "type": "string",
              "description": "Username to authenticate to the St2 server"
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Host to upgrade st2 on"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "environment": {
              "type": "string",
              "description": ""
          },
          "version": {
              "type": "string"
          },
          "build": {
              "required": true,
              "type": "string",
              "description": "Build number"
          },
          "branch": {
              "type": "string",
              "description": ""
          },
          "action": {
              "default": "core.local",
              "type": "string",
              "description": "Action to run after upgrade"
          },
          "revision": {
              "type": "string"
          },
          "st2_password": {
              "default": "testp",
              "type": "string",
              "description": "Password to authenticate to the St2 server"
          }
      },
      "tags": [],
      "description": "Upgrades an existing st2 installation",
      "enabled": true,
      "entry_point": "workflows/st2_upgrade_ubuntu16.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_upgrade_ubuntu16",
      "pack": "st2cd",
      "ref": "st2cd.st2_upgrade_ubuntu16",
      "id": "5b87f8750a8b8a567f589653",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_version",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "repo": {
              "default": "st2_master",
              "required": true,
              "type": "string"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "cd {{dir}}/{{repo}} && grep '__version__' st2common/st2common/__init__.py | awk '{print $3}' | sed -e \"s/'//g\"",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": false
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "st2_version",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:st2_version",
      "pack": "st2cd",
      "ref": "st2cd.st2_version",
      "id": "5b87f8750a8b8a567f589654",
      "runner_type": "run-remote"
  },
  {
      "name": "st2_web_deploy",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Hostname to deploy st2web on"
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version of webui to deploy"
          }
      },
      "tags": [],
      "description": "Deploys the latest st2web on a server",
      "enabled": true,
      "entry_point": "workflows/st2_web_deploy.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_web_deploy",
      "pack": "st2cd",
      "ref": "st2cd.st2_web_deploy",
      "id": "5b87f8750a8b8a567f589655",
      "runner_type": "action-chain"
  },
  {
      "name": "st2_web_rollback",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "hostname": {
              "required": true,
              "type": "string",
              "description": "Hostname to deploy st2web on"
          },
          "backup_dir": {
              "default": "/home/stanley/backup",
              "type": "string",
              "description": "Location to backup old st2web to"
          }
      },
      "tags": [],
      "description": "Rolls back to previous st2web",
      "enabled": true,
      "entry_point": "workflows/st2_web_rollback.yaml",
      "notify": {},
      "uid": "action:st2cd:st2_web_rollback",
      "pack": "st2cd",
      "ref": "st2cd.st2_web_rollback",
      "id": "5b87f8750a8b8a567f589656",
      "runner_type": "action-chain"
  },
  {
      "name": "st2contrib_regenerate_readme",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo": {
              "default": "git@github.com:StackStorm/st2contrib.git",
              "required": true,
              "type": "string",
              "description": "Url of the repo to clone and push to"
          },
          "author": {
              "required": true,
              "type": "string",
              "description": "Author of the pushed revision."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "branch": {
              "default": "master",
              "required": true,
              "type": "string",
              "description": "The branch to use"
          },
          "revision": {
              "required": true,
              "type": "string",
              "description": "Pushed revision."
          },
          "repo_target": {
              "default": "st2contrib_master",
              "type": "string",
              "description": "Directory where to clone the repo."
          }
      },
      "tags": [],
      "description": "Regenerate README.md in st2contrib repo and push changes upstream",
      "enabled": true,
      "entry_point": "workflows/st2contrib_regenerate_readme.yaml",
      "notify": {},
      "uid": "action:st2cd:st2contrib_regenerate_readme",
      "pack": "st2cd",
      "ref": "st2cd.st2contrib_regenerate_readme",
      "id": "5b87f8760a8b8a567f589658",
      "runner_type": "action-chain"
  },
  {
      "name": "tag_release",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "position": 4,
              "type": "string",
              "description": "Git branch to checkout"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Tag release",
      "enabled": true,
      "entry_point": "tag_release.sh",
      "notify": {},
      "uid": "action:st2cd:tag_release",
      "pack": "st2cd",
      "ref": "st2cd.tag_release",
      "id": "5b87f8760a8b8a567f589659",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "update_st2_deploy",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "download_server": {
              "position": 2,
              "required": true,
              "type": "string",
              "description": "hostname of downloads server"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "protocol": {
              "position": 3,
              "required": true,
              "type": "string",
              "description": "http/https"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "deploy_path": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "path to st2_deploy"
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Update Downloads URL in st2_deploy",
      "enabled": true,
      "entry_point": "update_st2_deploy.sh",
      "notify": {},
      "uid": "action:st2cd:update_st2_deploy",
      "pack": "st2cd",
      "ref": "st2cd.update_st2_deploy",
      "id": "5b87f8760a8b8a567f58965a",
      "runner_type": "run-remote-script"
  },
  {
      "name": "vagrant_tag_release",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "project": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Project name"
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "local_repo": {
              "position": 3,
              "type": "string",
              "description": "Location where to clone the repo. Programmatically determined if not provided."
          },
          "version": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Version to use for the release. Should include the patch e.g. 0.1.0"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "branch": {
              "position": 4,
              "type": "string",
              "description": "Git branch to checkout"
          },
          "fork": {
              "default": "StackStorm",
              "position": 2,
              "type": "string",
              "description": "Fork to use"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Update changelog, commit and tag packer-st2 repo",
      "enabled": true,
      "entry_point": "vagrant_tag_release.sh",
      "notify": {},
      "uid": "action:st2cd:vagrant_tag_release",
      "pack": "st2cd",
      "ref": "st2cd.vagrant_tag_release",
      "id": "5b87f8760a8b8a567f58965b",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "version_hack",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Path to st2 repo"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "build": {
              "default": "0",
              "position": 0,
              "required": true,
              "type": "string"
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host."
          }
      },
      "tags": [],
      "description": "Hack version and build number in to proper places",
      "enabled": true,
      "entry_point": "version_hack.sh",
      "notify": {},
      "uid": "action:st2cd:version_hack",
      "pack": "st2cd",
      "ref": "st2cd.version_hack",
      "id": "5b87f8760a8b8a567f58965c",
      "runner_type": "run-remote-script"
  },
  {
      "name": "webui_pkg",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "environment": {
              "type": "string",
              "description": "Environment where to run the packaging action"
          },
          "repo": {
              "default": "https://github.com/StackStorm/st2web.git",
              "required": false,
              "type": "string",
              "description": "Url of the repo to clone."
          },
          "build": {
              "type": "string",
              "description": "build number"
          },
          "branch": {
              "default": "master",
              "required": false,
              "type": "string",
              "description": "The branch to build."
          },
          "dl_server": {
              "required": false,
              "type": "string",
              "description": "Server where the build artifacts are published."
          },
          "repo_target": {
              "default": "/home/stanley/st2_webui_{{branch}}",
              "type": "string",
              "description": "Directory where the repo is cloned."
          }
      },
      "tags": [],
      "description": "Builds WebUI artifacts",
      "enabled": true,
      "entry_point": "workflows/webui_build.yaml",
      "notify": {},
      "uid": "action:st2cd:webui_pkg",
      "pack": "st2cd",
      "ref": "st2cd.webui_pkg",
      "id": "5b87f8760a8b8a567f58965d",
      "runner_type": "action-chain"
  },
  {
      "name": "webui_version",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material or path to the private key file on disk used to log in."
          },
          "cmd": {
              "default": "cd {{repo_path}} && grep 'st2_version' package.json | awk '{print $2}' | tr -d '\"' | tr -d ','",
              "type": "string",
              "description": "Arbitrary Linux command to be executed on the remote host(s).",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\"."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the command(e.g. key1=val1,key2=val2)"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in"
          },
          "dir": {
              "default": "/tmp",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          },
          "repo_path": {
              "default": "webui_master",
              "required": true,
              "type": "string",
              "description": "Path to the directory with the repository"
          }
      },
      "tags": [],
      "description": "Retrieve the WebUI version",
      "enabled": true,
      "entry_point": "",
      "notify": {},
      "uid": "action:st2cd:webui_version",
      "pack": "st2cd",
      "ref": "st2cd.webui_version",
      "id": "5b87f8760a8b8a567f58965e",
      "runner_type": "run-remote"
  },
  {
      "name": "backup_logs",
      "parameters": {
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "st2_execution_id": {
              "position": 0,
              "type": "string",
              "description": "Action execution ID for reference."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "st2_repo_dir": {
              "position": 3,
              "type": "string",
              "description": "Location of the local st2 repo."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "st2_log_dir": {
              "default": "/var/log/st2",
              "position": 4,
              "type": "string",
              "description": "Location of st2 logs."
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "backup_dir": {
              "default": "/home/stanley/logs",
              "position": 5,
              "type": "string",
              "description": "Location where to backup logs."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "mis_repo_dir": {
              "position": 1,
              "type": "string",
              "description": "Location of the local mistral repo."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "mis_log_dir": {
              "default": "/var/log",
              "position": 2,
              "type": "string",
              "description": "Location of mistral logs."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "dir": {
              "default": "/home/stanley",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Backup logs for StackStorm and related components.",
      "enabled": true,
      "entry_point": "backup_logs.sh",
      "notify": {},
      "uid": "action:st2ci:backup_logs",
      "pack": "st2ci",
      "ref": "st2ci.backup_logs",
      "id": "5b87f86a0a8b8a567f58958a",
      "runner_type": "run-remote-script"
  },
  {
      "name": "bwc_pkg_promote_all",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "version": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "release": {
              "required": true,
              "type": "string",
              "enum": [
                  "stable",
                  "unstable"
              ]
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          }
      },
      "tags": [],
      "description": "Promote all bwc packages from staging for a given distro",
      "enabled": true,
      "entry_point": "workflows/bwc_pkg_promote_all.yaml",
      "notify": {},
      "uid": "action:st2ci:bwc_pkg_promote_all",
      "pack": "st2ci",
      "ref": "st2ci.bwc_pkg_promote_all",
      "id": "5b87f86a0a8b8a567f58958b",
      "runner_type": "mistral-v2"
  },
  {
      "name": "git_merge_upstream",
      "parameters": {
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "commit_sha": {
              "position": 6,
              "required": true,
              "type": "string",
              "description": "Expected commit sha for HEAD after merge"
          },
          "repo_dir": {
              "default": "/home/stanley",
              "position": 5,
              "type": "string",
              "description": "Working directory"
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "repo_branch": {
              "default": "master",
              "position": 2,
              "type": "string",
              "description": "Branch of the git repo to checkout."
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "repo": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "HTTPS or SSH path for the git repo."
          },
          "name": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Name of the project."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "repo_upstream": {
              "position": 3,
              "required": true,
              "type": "string",
              "description": "HTTPS or SSH path for the upstream git repo."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "repo_upstream_branch": {
              "default": "master",
              "position": 4,
              "type": "string",
              "description": "Branch of the upstream git repo to merge."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Merge git repo with upstream.",
      "enabled": true,
      "entry_point": "git_merge_upstream.sh",
      "notify": {},
      "uid": "action:st2ci:git_merge_upstream",
      "pack": "st2ci",
      "ref": "st2ci.git_merge_upstream",
      "id": "5b87f86a0a8b8a567f58958c",
      "runner_type": "run-remote-script"
  },
  {
      "name": "install_st2",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "repo": {
              "default": "/home/stanley/st2",
              "position": 0,
              "type": "string",
              "description": "Location of cloned st2 repo on disk."
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Install StackStorm and related components.",
      "enabled": true,
      "entry_point": "install_st2.sh",
      "notify": {},
      "uid": "action:st2ci:install_st2",
      "pack": "st2ci",
      "ref": "st2ci.install_st2",
      "id": "5b87f86a0a8b8a567f58958d",
      "runner_type": "run-remote-script"
  },
  {
      "name": "mistral",
      "parameters": {
          "mis_repo_main": {
              "default": "https://github.com/{{mis_repo_base}}/mistral.git",
              "type": "string"
          },
          "st2_repo_dir": {
              "default": "/home/stanley",
              "type": "string"
          },
          "mis_api_port": {
              "default": 8989,
              "type": "integer"
          },
          "build_host": {
              "type": "string",
              "description": "The name of the hosts where the build process will run."
          },
          "mis_db_root_pass": {
              "default": "StackStorm",
              "type": "string"
          },
          "mis_repo_client": {
              "default": "https://github.com/{{mis_repo_base}}/python-mistralclient.git",
              "type": "string"
          },
          "mis_repo_branch": {
              "default": "master",
              "type": "string"
          },
          "mis_repo_action": {
              "default": "https://github.com/StackStorm/st2mistral.git",
              "type": "string"
          },
          "distro": {
              "default": "ubuntu",
              "enum": [
                  "ubuntu",
                  "fedora"
              ],
              "type": "string",
              "description": "The flavor of Linux distribution."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "mis_db_type": {
              "default": "postgresql",
              "enum": [
                  "postgresql",
                  "mysql"
              ],
              "type": "string"
          },
          "mis_repo_base": {
              "default": "stackstorm",
              "enum": [
                  "stackstorm",
                  "openstack"
              ],
              "type": "string"
          },
          "workflow": {
              "default": "st2ci.mistral.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "mis_db_user_name": {
              "default": "mistral",
              "type": "string"
          },
          "test_host": {
              "type": "string",
              "description": "The name of the hosts where the integration test(s) will run."
          },
          "merge_upstream": {
              "default": false,
              "type": "boolean"
          },
          "st2_repo_branch": {
              "default": "master",
              "type": "string"
          },
          "st2_repo": {
              "default": "https://github.com/StackStorm/st2.git",
              "type": "string"
          },
          "mis_db_name": {
              "default": "mistral",
              "type": "string"
          },
          "mis_repo_dir": {
              "default": "/home/stanley",
              "type": "string"
          },
          "mis_db_user_pass": {
              "default": "StackStorm",
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "debug": {
              "default": false,
              "type": "boolean"
          }
      },
      "tags": [],
      "description": "Run the continuous integration for Mistral.",
      "enabled": true,
      "entry_point": "workflows/mistral.yaml",
      "notify": {},
      "uid": "action:st2ci:mistral",
      "pack": "st2ci",
      "ref": "st2ci.mistral",
      "id": "5b87f86a0a8b8a567f58958e",
      "runner_type": "mistral-v2"
  },
  {
      "name": "promote_package",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "package": {
              "required": true,
              "type": "string",
              "description": "Package to promote"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "repo": {
              "required": true,
              "description": "Repo to upload to: stable/unstable, community/enterprise",
              "enum": [
                  "stable",
                  "unstable",
                  "enterprise",
                  "enterprise-unstable"
              ]
          },
          "token": {
              "default": "{{st2kv.system.pkg_cloud_token}}",
              "type": "string",
              "description": "Packagecloud API token"
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to promote"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "os": {
              "default": "all",
              "required": true,
              "description": "OS to promote (will promote all if not specified)",
              "enum": [
                  "trusty",
                  "el6",
                  "el7",
                  "deb",
                  "rpm",
                  "all"
              ]
          },
          "revision": {
              "required": true,
              "type": "string",
              "description": "Revision to promote"
          }
      },
      "tags": [],
      "description": "Promote a package to production from staging.",
      "enabled": true,
      "entry_point": "workflows/promote_package.yaml",
      "notify": {},
      "uid": "action:st2ci:promote_package",
      "pack": "st2ci",
      "ref": "st2ci.promote_package",
      "id": "5b87f86a0a8b8a567f58958f",
      "runner_type": "mistral-v2"
  },
  {
      "name": "setup_st2",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "repo_dir": {
              "default": "/home/stanley",
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "repo": {
              "default": "https://github.com/StackStorm/st2.git",
              "type": "string"
          },
          "repo_branch": {
              "default": "master",
              "type": "string"
          },
          "host": {
              "default": "localhost",
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "debug": {
              "default": false,
              "type": "boolean"
          }
      },
      "tags": [],
      "description": "Install and configure a running instance of StackStorm from git repo.",
      "enabled": true,
      "entry_point": "workflows/setup_st2.yaml",
      "notify": {},
      "uid": "action:st2ci:setup_st2",
      "pack": "st2ci",
      "ref": "st2ci.setup_st2",
      "id": "5b87f86a0a8b8a567f589590",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_e2e_test",
      "parameters": {
          "bootstrap_script": {
              "type": "string"
          },
          "instance_type": {
              "default": "c4.large",
              "type": "string"
          },
          "dns_zone": {
              "default": "uswest2.stackstorm.net",
              "type": "string",
              "description": "Route53 DNS Zone to add host to"
          },
          "hostname": {
              "required": true,
              "type": "string"
          },
          "environment": {
              "default": "sandbox",
              "enum": [
                  "sandbox",
                  "staging",
                  "production"
              ],
              "type": "string"
          },
          "bootstrap_branch": {
              "default": "master",
              "type": "string"
          },
          "version": {
              "type": "string"
          },
          "role": {
              "default": "cislave",
              "type": "string"
          },
          "windows_key_name": {
              "default": "st2_deploy_windows",
              "type": "string"
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "CENTOS6",
                  "CENTOS7",
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          },
          "initial_commit": {
              "type": "string",
              "description": "Git hash of an initial commit from st2 repo. If provided, the workflow will update status of this commit."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "key_name": {
              "default": "st2_deploy",
              "type": "string"
          },
          "triggering_commit_url": {
              "type": "string",
              "description": "Optional info on the commit that triggered the end to end test."
          },
          "release": {
              "default": "stable",
              "enum": [
                  "stable",
                  "unstable"
              ],
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "windows_keyfile": {
              "default": "/home/stanley/st2_deploy_windows.pem",
              "type": "string"
          },
          "pkg_env": {
              "default": "production",
              "enum": [
                  "staging",
                  "production"
              ],
              "type": "string"
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "enterprise_key": {
              "type": "string"
          },
          "dev_build": {
              "type": "string",
              "description": "Repo name + CircleCI build number ('st2/3126') to install artifacts from. Overrides version."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "enterprise": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "type": "boolean",
              "description": "When enabled, it wont delete the VM if workflow failed, leaving the machine alive for further debugging."
          },
          "windows_distro": {
              "default": "windows2016",
              "enum": [
                  "windows2016"
              ],
              "type": "string"
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string"
          }
      },
      "tags": [],
      "description": "End to end test for st2 package",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_e2e_test.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_e2e_test",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_e2e_test",
      "id": "5b87f86a0a8b8a567f589591",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_promote",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "package": {
              "required": true,
              "type": "string",
              "description": "Package to promote"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "distro_version": {
              "required": true,
              "type": "string",
              "description": "Distro version of the package to promote"
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to promote"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "api_token": {
              "default": "{{st2kv.system.pkg_cloud_token}}",
              "type": "string",
              "description": "Token to upload to the packagecloud production repo"
          },
          "release": {
              "required": true,
              "type": "string",
              "enum": [
                  "stable",
                  "unstable"
              ]
          },
          "revision": {
              "type": "string",
              "description": "Revision to promote. Use the latest revision if not provided."
          }
      },
      "tags": [],
      "description": "Promote a st2 package from staging to production repo.",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_promote.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_promote",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_promote",
      "id": "5b87f86a0a8b8a567f589592",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_promote_all",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "version": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "release": {
              "required": true,
              "type": "string",
              "enum": [
                  "stable",
                  "unstable"
              ]
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          }
      },
      "tags": [],
      "description": "Promote all st2 packages from staging for a given distro",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_promote_all.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_promote_all",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_promote_all",
      "id": "5b87f86a0a8b8a567f589593",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_promote_enterprise",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "package": {
              "required": true,
              "type": "string",
              "description": "Package to promote"
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "distro_version": {
              "required": true,
              "type": "string",
              "description": "Distro version of the package to promote"
          },
          "version": {
              "required": true,
              "type": "string",
              "description": "Version to promote"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "api_token": {
              "default": "{{st2kv.system.pkg_cloud_token}}",
              "type": "string",
              "description": "Token to upload to the packagecloud enterprise production repo"
          },
          "release": {
              "required": true,
              "type": "string",
              "enum": [
                  "stable",
                  "unstable"
              ]
          },
          "revision": {
              "type": "string",
              "description": "Revision to promote. Use the latest revision if not provided."
          }
      },
      "tags": [],
      "description": "Promote a st2 enterprise package from staging to production repo.",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_promote_enterprise.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_promote_enterprise",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_promote_enterprise",
      "id": "5b87f86a0a8b8a567f589594",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_test_and_promote",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "hostname": {
              "type": "string",
              "description": "Hostname will be auto assigned to st2-pkg-<release>-<distro>-<timestamp> if it is not given.\n"
          },
          "debug": {
              "default": false,
              "type": "boolean"
          },
          "version": {
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "release": {
              "required": true,
              "type": "string",
              "enum": [
                  "stable",
                  "unstable"
              ]
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string"
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          }
      },
      "tags": [],
      "description": "Run end to end tests and promote st2 packages from staging for a given distro",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_test_and_promote.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_test_and_promote",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_test_and_promote",
      "id": "5b87f86a0a8b8a567f589595",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_test_and_promote_enterprise",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "hostname": {
              "type": "string",
              "description": "Hostname will be auto assigned to st2-ent-pkg-<release>-<distro>-<timestamp> if it is not given.\n"
          },
          "debug": {
              "default": false,
              "type": "boolean"
          },
          "version": {
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "release": {
              "required": true,
              "type": "string",
              "enum": [
                  "stable",
                  "unstable"
              ]
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string"
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          }
      },
      "tags": [],
      "description": "Run end to end tests and promote st2 enterprise packages from staging for a given distro",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_test_and_promote_enterprise.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_test_and_promote_enterprise",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_test_and_promote_enterprise",
      "id": "5b87f86a0a8b8a567f589596",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_upgrade_deb",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "default": "st2ci.st2_pkg_upgrade_deb.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "pkg_list": {
              "required": true,
              "type": "array"
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "Host on which upgrade should be performed\n"
          },
          "version": {
              "default": "",
              "type": "string",
              "description": "Version to upgrade to"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "enterprise": {
              "default": false,
              "type": "boolean"
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          }
      },
      "tags": [],
      "description": "Upgrade deb packages on a box using apt-get",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_upgrade_deb.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_upgrade_deb",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_upgrade_deb",
      "id": "5b87f86a0a8b8a567f589597",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_upgrade_deps_el6",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "version": {
              "default": "",
              "position": 0,
              "type": "string",
              "description": "Version to upgrade to"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "enterprise": {
              "default": false,
              "position": 1,
              "type": "boolean"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Upgrade dependencies on el6",
      "enabled": true,
      "entry_point": "st2_pkg_upgrade_deps_el6.sh",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_upgrade_deps_el6",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_upgrade_deps_el6",
      "id": "5b87f86a0a8b8a567f589598",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_pkg_upgrade_deps_el7",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "version": {
              "default": "",
              "position": 0,
              "type": "string",
              "description": "Version to upgrade to"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "enterprise": {
              "default": false,
              "position": 1,
              "type": "boolean"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Upgrade dependencies on el7",
      "enabled": true,
      "entry_point": "st2_pkg_upgrade_deps_el7.sh",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_upgrade_deps_el7",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_upgrade_deps_el7",
      "id": "5b87f86a0a8b8a567f589599",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_pkg_upgrade_deps_u14",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "version": {
              "default": "",
              "position": 0,
              "type": "string",
              "description": "Version to upgrade to"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "enterprise": {
              "default": false,
              "position": 1,
              "type": "boolean"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Upgrade dependencies on u14",
      "enabled": true,
      "entry_point": "st2_pkg_upgrade_deps_u14.sh",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_upgrade_deps_u14",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_upgrade_deps_u14",
      "id": "5b87f86a0a8b8a567f58959a",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_pkg_upgrade_deps_u16",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Username used to log-in. If not provided, default username from config is used."
          },
          "cwd": {
              "default": "/tmp",
              "type": "string",
              "description": "Working directory where the script will be executed in."
          },
          "private_key": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Private key material to log in. Note: This needs to be actual private key data and NOT path."
          },
          "sudo": {
              "default": false,
              "type": "boolean",
              "description": "The remote command will be executed with sudo.",
              "immutable": true
          },
          "sudo_password": {
              "default": null,
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Sudo password. To be used when paswordless sudo is not allowed."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script(e.g. key1=val1,key2=val2)"
          },
          "cmd": {
              "default": "",
              "immutable": true
          },
          "bastion_host": {
              "required": false,
              "type": "string",
              "description": "The host SSH connections will be proxied through. Note: This connection is made using the same parameters as the final connection, and is only used in ParamikoSSHRunner."
          },
          "kwarg_op": {
              "default": "--",
              "type": "string",
              "description": "Operator to use in front of keyword args i.e. \"--\" or \"-\".",
              "immutable": true
          },
          "version": {
              "default": "",
              "position": 0,
              "type": "string",
              "description": "Version to upgrade to"
          },
          "hosts": {
              "required": true,
              "type": "string",
              "description": "A comma delimited string of a list of hosts where the remote command will be executed."
          },
          "timeout": {
              "default": 60,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "enterprise": {
              "default": false,
              "position": 1,
              "type": "boolean"
          },
          "parallel": {
              "default": false,
              "type": "boolean",
              "description": "Default to parallel execution.",
              "immutable": true
          },
          "password": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Password used to log in. If not provided, private key from the config file is used."
          },
          "passphrase": {
              "secret": true,
              "required": false,
              "type": "string",
              "description": "Passphrase for the private key, if needed."
          },
          "port": {
              "default": 22,
              "required": false,
              "type": "integer",
              "description": "SSH port. Note: This parameter is used only in ParamikoSSHRunner."
          },
          "dir": {
              "default": "/home/stanley/",
              "type": "string",
              "description": "The working directory where the script will be copied to on the remote host.",
              "immutable": true
          }
      },
      "tags": [],
      "description": "Upgrade dependencies on u16",
      "enabled": true,
      "entry_point": "st2_pkg_upgrade_deps_u16.sh",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_upgrade_deps_u16",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_upgrade_deps_u16",
      "id": "5b87f86a0a8b8a567f58959b",
      "runner_type": "remote-shell-script"
  },
  {
      "name": "st2_pkg_upgrade_e2e_test",
      "parameters": {
          "bootstrap_script": {
              "type": "string"
          },
          "upgrade_from_version": {
              "required": true,
              "type": "string"
          },
          "upgrade_to_version": {
              "required": true,
              "type": "string"
          },
          "dns_zone": {
              "default": "uswest2.stackstorm.net",
              "type": "string",
              "description": "Route53 DNS Zone to add host to"
          },
          "hostname": {
              "required": true,
              "type": "string"
          },
          "environment": {
              "default": "sandbox",
              "enum": [
                  "sandbox",
                  "staging",
                  "production"
              ],
              "type": "string"
          },
          "bootstrap_branch": {
              "default": "master",
              "type": "string"
          },
          "role": {
              "default": "cislave",
              "type": "string"
          },
          "windows_key_name": {
              "default": "st2_deploy_windows",
              "type": "string"
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "CENTOS6",
                  "CENTOS7",
                  "RHEL6",
                  "RHEL7",
                  "UBUNTU14",
                  "UBUNTU16"
              ]
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "key_name": {
              "default": "st2_deploy",
              "type": "string"
          },
          "enterprise": {
              "default": false,
              "type": "boolean"
          },
          "debug": {
              "default": false,
              "type": "boolean"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "windows_keyfile": {
              "default": "/home/stanley/st2_deploy_windows.pem",
              "type": "string"
          },
          "pkg_env": {
              "default": "production",
              "enum": [
                  "staging",
                  "production"
              ],
              "type": "string"
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "enterprise_key": {
              "type": "string"
          },
          "instance_type": {
              "default": "c4.large",
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "triggering_commit_url": {
              "type": "string",
              "description": "Optional info on the commit that triggered the end to end test."
          },
          "release": {
              "default": "stable",
              "enum": [
                  "stable",
                  "unstable"
              ],
              "type": "string"
          },
          "windows_distro": {
              "default": "windows2016",
              "enum": [
                  "windows2016"
              ],
              "type": "string"
          },
          "keyfile": {
              "default": "/home/stanley/.ssh/stanley_rsa",
              "type": "string"
          }
      },
      "tags": [],
      "description": "End to end test for st2 packages post upgrade from one version to another.",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_upgrade_e2e_test.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_upgrade_e2e_test",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_upgrade_e2e_test",
      "id": "5b87f86a0a8b8a567f58959c",
      "runner_type": "mistral-v2"
  },
  {
      "name": "st2_pkg_upgrade_rpm",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "default": "st2ci.st2_pkg_upgrade_rpm.main",
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically.",
              "immutable": true
          },
          "pkg_list": {
              "required": true,
              "type": "array"
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "Host on which upgrade should be performed\n"
          },
          "version": {
              "default": "",
              "type": "string",
              "description": "Version to upgrade to"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "enterprise": {
              "default": false,
              "type": "boolean"
          },
          "distro": {
              "required": true,
              "type": "string",
              "enum": [
                  "CENTOS6",
                  "CENTOS7",
                  "RHEL6",
                  "RHEL7"
              ]
          }
      },
      "tags": [],
      "description": "Upgrade rpm packages on a box using yum",
      "enabled": true,
      "entry_point": "workflows/st2_pkg_upgrade_rpm.yaml",
      "notify": {},
      "uid": "action:st2ci:st2_pkg_upgrade_rpm",
      "pack": "st2ci",
      "ref": "st2ci.st2_pkg_upgrade_rpm",
      "id": "5b87f86a0a8b8a567f58959d",
      "runner_type": "mistral-v2"
  },
  {
      "name": "teardown_st2",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "repo": {
              "default": "/home/stanley/st2",
              "type": "string"
          },
          "host": {
              "default": "localhost",
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          }
      },
      "tags": [],
      "description": "Teardown a running instance of StackStorm.",
      "enabled": true,
      "entry_point": "workflows/teardown_st2.yaml",
      "notify": {},
      "uid": "action:st2ci:teardown_st2",
      "pack": "st2ci",
      "ref": "st2ci.teardown_st2",
      "id": "5b87f86a0a8b8a567f58959e",
      "runner_type": "mistral-v2"
  },
  {
      "name": "build-controller",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "keep_previous": {
              "default": false,
              "type": "boolean"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "working_branch": {
              "default": "NOMERGE/build-node",
              "required": false,
              "type": "string"
          },
          "st2_password": {
              "default": "{{st2kv.system.st2_password}}",
              "secret": true,
              "required": false,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Build node automation workflow.",
      "enabled": true,
      "entry_point": "workflows/build-controller.yaml",
      "notify": {},
      "uid": "action:st2cicd:build-controller",
      "pack": "st2cicd",
      "ref": "st2cicd.build-controller",
      "id": "5b87f87f0a8b8a567f5896a8",
      "runner_type": "mistral-v2"
  },
  {
      "name": "create-alb-attachment",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "hostname": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Hostname to use when creating definitons."
          },
          "working_dir": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Working directory for template creation."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          }
      },
      "tags": [],
      "description": "Create build-controller terraform definition for alb attachment.",
      "enabled": true,
      "entry_point": "create-alb-attachment.py",
      "notify": {},
      "uid": "action:st2cicd:create-alb-attachment",
      "pack": "st2cicd",
      "ref": "st2cicd.create-alb-attachment",
      "id": "5b87f87f0a8b8a567f5896a9",
      "runner_type": "python-script"
  },
  {
      "name": "create-build-controller",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "aws_secret_key": {
              "default": "{{st2kv.system.aws_secret_key}}",
              "secret": true,
              "required": false,
              "type": "string"
          },
          "aws_access_key": {
              "default": "{{st2kv.system.aws_access_key}}",
              "secret": true,
              "required": false,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "hostname": {
              "required": true,
              "type": "string"
          },
          "fqdn": {
              "required": true,
              "type": "string"
          },
          "working_dir": {
              "default": "/home/stanley",
              "required": false,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "working_branch": {
              "required": true,
              "type": "string"
          },
          "st2_password": {
              "secret": true,
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Workflow to create terraform definition, add it to ops-infra repo, apply it, and test the new node.",
      "enabled": true,
      "entry_point": "workflows/create-build-controller.yaml",
      "notify": {},
      "uid": "action:st2cicd:create-build-controller",
      "pack": "st2cicd",
      "ref": "st2cicd.create-build-controller",
      "id": "5b87f87f0a8b8a567f5896aa",
      "runner_type": "mistral-v2"
  },
  {
      "name": "create-ops-infra-def",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "hostname": {
              "position": 1,
              "required": true,
              "type": "string",
              "description": "Hostname to use when creating definitons."
          },
          "working_dir": {
              "position": 0,
              "required": true,
              "type": "string",
              "description": "Working directory for template creation."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "st2_password": {
              "secret": true,
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Create build-controller terraform definition and ansible definiton.",
      "enabled": true,
      "entry_point": "create-ops-infra-def.py",
      "notify": {},
      "uid": "action:st2cicd:create-ops-infra-def",
      "pack": "st2cicd",
      "ref": "st2cicd.create-ops-infra-def",
      "id": "5b87f87f0a8b8a567f5896ab",
      "runner_type": "python-script"
  },
  {
      "name": "destroy-build-controller",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "aws_secret_key": {
              "default": "{{st2kv.system.aws_secret_key}}",
              "secret": true,
              "required": false,
              "type": "string"
          },
          "aws_access_key": {
              "default": "{{st2kv.system.aws_access_key}}",
              "secret": true,
              "required": false,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "hostname": {
              "type": "string",
              "description": "Name of the build controller to destroy. Default to current host if not provided."
          },
          "working_dir": {
              "default": "/home/stanley",
              "required": false,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "working_branch": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Workflow to wait for outstanding actions to complete, remove terraform definition, apply terraform definiton to destroy node.",
      "enabled": true,
      "entry_point": "workflows/destroy-build-controller.yaml",
      "notify": {},
      "uid": "action:st2cicd:destroy-build-controller",
      "pack": "st2cicd",
      "ref": "st2cicd.destroy-build-controller",
      "id": "5b87f87f0a8b8a567f5896ac",
      "runner_type": "mistral-v2"
  },
  {
      "name": "evaluate-build",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "build_num": {
              "required": true,
              "type": "integer"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          }
      },
      "tags": [],
      "description": "Workflow to evaluate details of a build to see if it qualifies for creating a new build node",
      "enabled": true,
      "entry_point": "workflows/evaluate-build.yaml",
      "notify": {},
      "uid": "action:st2cicd:evaluate-build",
      "pack": "st2cicd",
      "ref": "st2cicd.evaluate-build",
      "id": "5b87f87f0a8b8a567f5896ad",
      "runner_type": "mistral-v2"
  },
  {
      "name": "get-name",
      "parameters": {
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          }
      },
      "tags": [],
      "description": "Generate hostname",
      "enabled": true,
      "entry_point": "get-name.py",
      "notify": {},
      "uid": "action:st2cicd:get-name",
      "pack": "st2cicd",
      "ref": "st2cicd.get-name",
      "id": "5b87f87f0a8b8a567f5896ae",
      "runner_type": "python-script"
  },
  {
      "name": "prep-build-controller",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "fqdn": {
              "required": true,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "st2_password": {
              "secret": true,
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Workflow to transfer info to new build controller and add packs.",
      "enabled": true,
      "entry_point": "workflows/prep-build-controller.yaml",
      "notify": {},
      "uid": "action:st2cicd:prep-build-controller",
      "pack": "st2cicd",
      "ref": "st2cicd.prep-build-controller",
      "id": "5b87f87f0a8b8a567f5896af",
      "runner_type": "mistral-v2"
  },
  {
      "name": "transfer-power",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "aws_secret_key": {
              "default": "{{st2kv.system.aws_secret_key}}",
              "secret": true,
              "required": false,
              "type": "string"
          },
          "aws_access_key": {
              "default": "{{st2kv.system.aws_access_key}}",
              "secret": true,
              "required": false,
              "type": "string"
          },
          "task": {
              "type": "string",
              "description": "The name of the task to run for reverse workflow."
          },
          "workflow": {
              "type": "string",
              "description": "The name of the workflow to run if the entry_point is a workbook of many workflows. The name should be in the format \"<pack_name>.<action_name>.<workflow_name>\". If entry point is a workflow or a workbook with a single workflow, the runner will identify the workflow automatically."
          },
          "hostname": {
              "required": true,
              "type": "string"
          },
          "fqdn": {
              "required": true,
              "type": "string"
          },
          "working_dir": {
              "default": "/home/stanley",
              "required": false,
              "type": "string"
          },
          "context": {
              "default": {},
              "type": "object",
              "description": "Additional workflow inputs."
          },
          "working_branch": {
              "required": true,
              "type": "string"
          }
      },
      "tags": [],
      "description": "Workflow to transfer power over to new build node.",
      "enabled": true,
      "entry_point": "workflows/transfer-power.yaml",
      "notify": {},
      "uid": "action:st2cicd:transfer-power",
      "pack": "st2cicd",
      "ref": "st2cicd.transfer-power",
      "id": "5b87f87f0a8b8a567f5896b0",
      "runner_type": "mistral-v2"
  },
  {
      "name": "list_vms",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "credentials": {
              "required": true,
              "type": "string",
              "description": "Name of the credentials set (as defined in the config) to use."
          }
      },
      "tags": [],
      "description": "List available VMs.",
      "enabled": true,
      "entry_point": "list_vms.py",
      "notify": {},
      "uid": "action:test:list_vms",
      "pack": "test",
      "ref": "test.list_vms",
      "id": "5b87fa570a8b8a0784464c9a",
      "runner_type": "python-script"
  },
  {
      "name": "parse",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "data": {
              "required": true,
              "type": "string",
              "description": "XML string to parse."
          }
      },
      "tags": [],
      "description": "Parse XML string and return JSON object.",
      "enabled": true,
      "entry_point": "parse_xml.py",
      "notify": {},
      "uid": "action:test:parse",
      "pack": "test",
      "ref": "test.parse",
      "id": "5b87fa570a8b8a0784464c9b",
      "runner_type": "python-script"
  },
  {
      "name": "test_inquiry_chain",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests Inquiries",
      "enabled": true,
      "entry_point": "chains/test_inquiry_chain.yaml",
      "notify": {},
      "uid": "action:tests:test_inquiry_chain",
      "pack": "tests",
      "ref": "tests.test_inquiry_chain",
      "id": "5b87f9640a8b8a0be76769d3",
      "runner_type": "action-chain"
  },
  {
      "name": "test_inquiry_mistral",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests Inquiries",
      "enabled": true,
      "entry_point": "chains/test_inquiry_mistral.yaml",
      "notify": {},
      "uid": "action:tests:test_inquiry_mistral",
      "pack": "tests",
      "ref": "tests.test_inquiry_mistral",
      "id": "5b87f9640a8b8a0be76769d4",
      "runner_type": "action-chain"
  },
  {
      "name": "test_key_triggers",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests key triggers functionality",
      "enabled": true,
      "entry_point": "chains/test_key_triggers.yaml",
      "notify": {},
      "uid": "action:tests:test_key_triggers",
      "pack": "tests",
      "ref": "tests.test_key_triggers",
      "id": "5b87f9640a8b8a0be76769d5",
      "runner_type": "action-chain"
  },
  {
      "name": "test_pack_install_tool",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Test which verifies that st2-pack-install CLI tool works correctly out of the box.",
      "enabled": true,
      "entry_point": "chains/test_pack_install_tool.yaml",
      "notify": {},
      "uid": "action:tests:test_pack_install_tool",
      "pack": "tests",
      "ref": "tests.test_pack_install_tool",
      "id": "5b87f9640a8b8a0be76769d6",
      "runner_type": "action-chain"
  },
  {
      "name": "test_packs_pack",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests functionality provided by Packs pack",
      "enabled": true,
      "entry_point": "chains/test_packs_pack.yaml",
      "notify": {},
      "uid": "action:tests:test_packs_pack",
      "pack": "tests",
      "ref": "tests.test_packs_pack",
      "id": "5b87f9640a8b8a0be76769d7",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Simple Action Chain workflow",
      "enabled": true,
      "entry_point": "chains/test_quickstart.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart",
      "pack": "tests",
      "ref": "tests.test_quickstart",
      "id": "5b87f9640a8b8a0be76769d2",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart_key",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests create/get example based on Quick Start",
      "enabled": true,
      "entry_point": "chains/test_quickstart_key.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart_key",
      "pack": "tests",
      "ref": "tests.test_quickstart_key",
      "id": "5b87f9640a8b8a0be76769d8",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart_local_script_actions",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests local script action on Quick Start",
      "enabled": true,
      "entry_point": "chains/test_quickstart_local_script_actions.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart_local_script_actions",
      "pack": "tests",
      "ref": "tests.test_quickstart_local_script_actions",
      "id": "5b87f9640a8b8a0be76769d9",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart_passive_sensor",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests passive sensor on Quick Start",
      "enabled": true,
      "entry_point": "chains/test_quickstart_passive_sensor.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart_passive_sensor",
      "pack": "tests",
      "ref": "tests.test_quickstart_passive_sensor",
      "id": "5b87f9640a8b8a0be76769da",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart_polling_sensor",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests polling sensor on Quick Start",
      "enabled": true,
      "entry_point": "chains/test_quickstart_polling_sensor.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart_polling_sensor",
      "pack": "tests",
      "ref": "tests.test_quickstart_polling_sensor",
      "id": "5b87f9640a8b8a0be76769db",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart_python_actions",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests python action on Quick Start",
      "enabled": true,
      "entry_point": "chains/test_quickstart_python_actions.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart_python_actions",
      "pack": "tests",
      "ref": "tests.test_quickstart_python_actions",
      "id": "5b87f9640a8b8a0be76769dc",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart_remote_script_actions",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests python action on Quick Start",
      "enabled": true,
      "entry_point": "chains/test_quickstart_remote_script_actions.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart_remote_script_actions",
      "pack": "tests",
      "ref": "tests.test_quickstart_remote_script_actions",
      "id": "5b87f9640a8b8a0be76769dd",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart_rules",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests create/validate/delete rule based on Quick Start",
      "enabled": true,
      "entry_point": "chains/test_quickstart_rules.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart_rules",
      "pack": "tests",
      "ref": "tests.test_quickstart_rules",
      "id": "5b87f9640a8b8a0be76769de",
      "runner_type": "action-chain"
  },
  {
      "name": "test_quickstart_trace",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests trace functionality on Quick Start",
      "enabled": true,
      "entry_point": "chains/test_quickstart_trace.yaml",
      "notify": {},
      "uid": "action:tests:test_quickstart_trace",
      "pack": "tests",
      "ref": "tests.test_quickstart_trace",
      "id": "5b87f9640a8b8a0be76769df",
      "runner_type": "action-chain"
  },
  {
      "name": "test_run_pack_tests_tool",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Test which verifies that st2-run-pack-tests works correctly out of the box.",
      "enabled": true,
      "entry_point": "chains/test_run_pack_tests_tool.yaml",
      "notify": {},
      "uid": "action:tests:test_run_pack_tests_tool",
      "pack": "tests",
      "ref": "tests.test_run_pack_tests_tool",
      "id": "5b87f9640a8b8a0be76769e0",
      "runner_type": "action-chain"
  },
  {
      "name": "test_timer_rule",
      "parameters": {
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          }
      },
      "tags": [],
      "description": "Workflow tests timer rule",
      "enabled": true,
      "entry_point": "chains/test_timer_rule.yaml",
      "notify": {},
      "uid": "action:tests:test_timer_rule",
      "pack": "tests",
      "ref": "tests.test_timer_rule",
      "id": "5b87f9640a8b8a0be76769e1",
      "runner_type": "action-chain"
  },
  {
      "name": "test_windows_runners",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "protocol": {
              "default": "http",
              "type": "string",
              "description": "http/https"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "windows_username": {
              "default": "Administrator",
              "type": "string",
              "description": "Windows username. Default is Administrator"
          },
          "windows_password": {
              "default": "",
              "type": "string",
              "description": "Windows password"
          },
          "windows_host": {
              "default": "",
              "type": "string",
              "description": "Windows host name. If not specified, test will only check prerequisites"
          }
      },
      "tags": [],
      "description": "Workflow tests Windows runners",
      "enabled": true,
      "entry_point": "chains/test_windows_runners.yaml",
      "notify": {},
      "uid": "action:tests:test_windows_runners",
      "pack": "tests",
      "ref": "tests.test_windows_runners",
      "id": "5b87f9640a8b8a0be76769e2",
      "runner_type": "action-chain"
  },
  {
      "name": "test_winrm_runners",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "winrm_password": {
              "default": "",
              "secret": true,
              "type": "string",
              "description": "Windows password"
          },
          "protocol": {
              "default": "http",
              "enum": [
                  "http",
                  "https"
              ],
              "type": "string",
              "description": "Protocol for communicating with the StackStorm API (http/https)"
          },
          "hostname": {
              "default": "127.0.0.1",
              "type": "string",
              "description": "St2 host to run tests against"
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "token": {
              "default": "",
              "type": "string",
              "description": "st2 auth token"
          },
          "winrm_verify_ssl_cert": {
              "default": false,
              "type": "boolean",
              "description": "Validate SSL certs of the WinRM host."
          },
          "winrm_host": {
              "default": "",
              "type": "string",
              "description": "Windows host name. If not specified, test will only check prerequisites"
          },
          "winrm_username": {
              "default": "Administrator",
              "type": "string",
              "description": "Windows username. Default is Administrator"
          },
          "winrm_transport": {
              "default": "ntlm",
              "enum": [
                  "basic",
                  "certificate",
                  "credssp",
                  "kerberos",
                  "ntlm",
                  "plaintext",
                  "ssl"
              ],
              "type": "string",
              "description": "The type of transport that WinRM will use to communicate. See https://github.com/diyan/pywinrm#valid-transport-options\n"
          }
      },
      "tags": [],
      "description": "Workflow tests WinRM runners",
      "enabled": true,
      "entry_point": "chains/test_winrm_runners.yaml",
      "notify": {},
      "uid": "action:tests:test_winrm_runners",
      "pack": "tests",
      "ref": "tests.test_winrm_runners",
      "id": "5b87f9640a8b8a0be76769e3",
      "runner_type": "action-chain"
  },
  {
      "name": "selenium",
      "parameters": {
          "skip_notify": {
              "default": [],
              "type": "array",
              "description": "List of tasks to skip notifications for."
          },
          "display_published": {
              "default": true,
              "type": "boolean",
              "description": "Intermediate published variables will be stored and displayed."
          },
          "test_user": {
              "default": "testu",
              "type": "string",
              "description": "webui username"
          },
          "web_port": {
              "default": "8080",
              "type": "string",
              "description": "webui port"
          },
          "test_password": {
              "default": "testp",
              "type": "string",
              "description": "webui password"
          },
          "repo": {
              "required": true,
              "type": "string",
              "description": "Url of the repo to clone"
          },
          "branch": {
              "default": "master",
              "type": "string",
              "description": "The branch to clone"
          },
          "repo_target": {
              "default": "st2e2e_{{branch}}",
              "type": "string",
              "description": "Directory name for clone"
          },
          "web_host": {
              "required": true,
              "type": "string",
              "description": "The webui host to test against"
          }
      },
      "tags": [],
      "description": "Clone st2e2e repo and run selenium tests",
      "enabled": true,
      "entry_point": "workflows/selenium.yaml",
      "notify": {},
      "uid": "action:webui:selenium",
      "pack": "webui",
      "ref": "webui.selenium",
      "id": "5b87f9820a8b8a0be76769e4",
      "runner_type": "action-chain"
  },
  {
      "name": "lockdown_winrm",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Account username."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "IP address of a Windows server"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Account password."
          }
      },
      "tags": [],
      "description": "Disable remote WinRM access via RPC",
      "enabled": true,
      "entry_point": "lockdown_winrm.py",
      "notify": {},
      "uid": "action:windows:lockdown_winrm",
      "pack": "windows",
      "ref": "windows.lockdown_winrm",
      "id": "5b87f8960a8b8a567f5896c8",
      "runner_type": "python-script"
  },
  {
      "name": "setup_winrm",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Account username."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "IP address of a Windows server"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Account password."
          }
      },
      "tags": [],
      "description": "Enable remote WinRM access via RPC, to allow untrusted connections",
      "enabled": true,
      "entry_point": "setup_winrm.py",
      "notify": {},
      "uid": "action:windows:setup_winrm",
      "pack": "windows",
      "ref": "windows.setup_winrm",
      "id": "5b87f8960a8b8a567f5896c9",
      "runner_type": "python-script"
  },
  {
      "name": "try_winrm",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Account username."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "IP address of a Windows server to run the query on"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Account password."
          },
          "port": {
              "required": false,
              "type": "integer",
              "description": "TCP port"
          },
          "secure": {
              "required": false,
              "type": "boolean",
              "description": "Use HTTPS"
          }
      },
      "tags": [],
      "description": "Run a basic check to see if WinRM is responding",
      "enabled": true,
      "entry_point": "try_winrm.py",
      "notify": {},
      "uid": "action:windows:try_winrm",
      "pack": "windows",
      "ref": "windows.try_winrm",
      "id": "5b87f8960a8b8a567f5896ca",
      "runner_type": "python-script"
  },
  {
      "name": "wait_for_winrm",
      "parameters": {
          "username": {
              "default": "stanley",
              "required": true,
              "type": "string",
              "description": "Username used to authenticate."
          },
          "winrm_timeout": {
              "default": 5,
              "type": "integer",
              "description": "WinRM connection connect timeout (in seconds). This is the timeout of a single connection attempt."
          },
          "scheme": {
              "default": "https",
              "required": false,
              "type": "string",
              "description": "Scheme to use in the WinRM URL. If using scheme \"http\" port must be 5985"
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "timeout": {
              "default": 400,
              "type": "integer",
              "description": "Total timeout for this action. Note: timeout needs to be >= ((winrm_timeout + sleep_delay) * retries) so we override a default Python runner action timeout with a larger value\n"
          },
          "retries": {
              "default": 10,
              "type": "integer",
              "description": "Maximum number of retries."
          },
          "sleep_delay": {
              "default": 20,
              "type": "integer",
              "description": "How long to sleep / wait (in seconds) after each failed connection attempt."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "Remote hostname/ipaddress."
          },
          "transport": {
              "default": "ntlm",
              "required": false,
              "type": "string",
              "description": "The type of transport that WinRM will use to communicate. See https://github.com/diyan/pywinrm#valid-transport-options\n",
              "enum": [
                  "basic",
                  "certificate",
                  "credssp",
                  "kerberos",
                  "ntlm",
                  "plaintext",
                  "ssl"
              ]
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Password used to authenticate."
          },
          "port": {
              "default": 5986,
              "required": true,
              "type": "integer",
              "description": "Remote SSH port."
          },
          "verify_ssl_cert": {
              "default": true,
              "type": "boolean",
              "description": "Certificate for HTTPS request is verified by default using requests CA bundle which comes from Mozilla. Verification using a custom CA bundle is not yet supported. Set to False to skip verification.\n"
          }
      },
      "tags": [],
      "description": "Action which waits for a WinRM server to become accessible.",
      "enabled": true,
      "entry_point": "lib/wait_for_winrm.py",
      "notify": {},
      "uid": "action:windows:wait_for_winrm",
      "pack": "windows",
      "ref": "windows.wait_for_winrm",
      "id": "5b87f8960a8b8a567f5896cb",
      "runner_type": "python-script"
  },
  {
      "name": "winexe_cmd",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Account username."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "IP address of a Windows server"
          },
          "command": {
              "required": true,
              "type": "string",
              "description": "The command to run"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Account password."
          }
      },
      "tags": [],
      "description": "Run a command via WinEXE (samba/RPC)",
      "enabled": true,
      "entry_point": "winexe_cmd.py",
      "notify": {},
      "uid": "action:windows:winexe_cmd",
      "pack": "windows",
      "ref": "windows.winexe_cmd",
      "id": "5b87f8960a8b8a567f5896cc",
      "runner_type": "python-script"
  },
  {
      "name": "winrm_cmd",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Account username."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "IP address of a Windows server to run the query on"
          },
          "command": {
              "required": true,
              "type": "string",
              "description": "The command to run"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "params": {
              "required": true,
              "type": "array",
              "description": "array of parameters for the command"
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Account password."
          },
          "port": {
              "required": false,
              "type": "integer",
              "description": "TCP port"
          },
          "secure": {
              "required": false,
              "type": "boolean",
              "description": "Use HTTPS"
          }
      },
      "tags": [],
      "description": "Run a command via WinRM",
      "enabled": true,
      "entry_point": "winrm_cmd.py",
      "notify": {},
      "uid": "action:windows:winrm_cmd",
      "pack": "windows",
      "ref": "windows.winrm_cmd",
      "id": "5b87f8960a8b8a567f5896cd",
      "runner_type": "python-script"
  },
  {
      "name": "wmi_query",
      "parameters": {
          "username": {
              "required": false,
              "type": "string",
              "description": "Account username."
          },
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "host": {
              "required": true,
              "type": "string",
              "description": "IP address of a Windows server to run the query on"
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "query": {
              "required": true,
              "type": "string",
              "description": "WQL query to run."
          },
          "password": {
              "secret": true,
              "required": true,
              "type": "string",
              "description": "Account password."
          }
      },
      "tags": [],
      "description": "Run a WMI query on a particular Windows host.",
      "enabled": true,
      "entry_point": "wmi_query.py",
      "notify": {},
      "uid": "action:windows:wmi_query",
      "pack": "windows",
      "ref": "windows.wmi_query",
      "id": "5b87f8960a8b8a567f5896ce",
      "runner_type": "python-script"
  },
  {
      "name": "parse",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "data": {
              "required": true,
              "type": "string",
              "description": "XML string to parse."
          }
      },
      "tags": [],
      "description": "Parse XML string and return JSON object.",
      "enabled": true,
      "entry_point": "parse_xml.py",
      "notify": {},
      "uid": "action:xml:parse",
      "pack": "xml",
      "ref": "xml.parse",
      "id": "5b87fb040a8b8a0784464cd7",
      "runner_type": "python-script"
  },
  {
      "name": "parse_file",
      "parameters": {
          "log_level": {
              "default": "DEBUG",
              "enum": [
                  "AUDIT",
                  "CRITICAL",
                  "ERROR",
                  "WARNING",
                  "INFO",
                  "DEBUG"
              ],
              "type": "string",
              "description": "Default log level for Python runner actions."
          },
          "env": {
              "type": "object",
              "description": "Environment variables which will be available to the script."
          },
          "timeout": {
              "default": 600,
              "type": "integer",
              "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds."
          },
          "debug": {
              "default": false,
              "required": false,
              "type": "boolean",
              "description": "Enable runner debug mode."
          },
          "content_version": {
              "required": false,
              "type": "string",
              "description": "Git revision of the pack content to use for this action execution (git commit sha / tag / branch). Only applies to packs which are git repositories."
          },
          "file_path": {
              "required": true,
              "type": "string",
              "description": "Path to the file to parse."
          }
      },
      "tags": [],
      "description": "Parse a file in XML format and return JSON object.",
      "enabled": true,
      "entry_point": "parse_xml_file.py",
      "notify": {},
      "uid": "action:xml:parse_file",
      "pack": "xml",
      "ref": "xml.parse_file",
      "id": "5b87fb040a8b8a0784464cd8",
      "runner_type": "python-script"
  }
]
