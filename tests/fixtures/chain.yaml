---
vars:
        base_repo_url: "https://github.com/StackStorm"
        pack_to_install_1: "docker"
        pack_to_install_2: "sensu"
        install_from_repo: "st2contrib"

chain:
    -
        name: setup_check_pack_to_install_1_installed
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 action list --pack {{ pack_to_install_1 }} | grep 'No matching items found'"
        on-success: setup_check_pack_to_install_2_installed
        on-failure: setup_uninstall_pack_to_install_1
    -
        name: setup_uninstall_pack_to_install_1
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 run packs.uninstall packs={{ pack_to_install_1 }}"
        on-success: setup_check_pack_to_install_2_installed
        on-failure: error_handler
    -
        name: setup_check_pack_to_install_2_installed
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 action list --pack {{ pack_to_install_2 }} | grep 'No matching items found'"
        on-success: test_packs_install_multiple_packs_from_repo
        on-failure: setup_uninstall_pack_to_install_2
    -
        name: setup_uninstall_pack_to_install_2
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 run packs.uninstall packs={{ pack_to_install_2 }}"
        on-success: test_packs_install_multiple_packs_from_repo
        on-failure: error_handler
    -
        name: test_packs_install_multiple_packs_from_repo
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 run packs.install packs={{ pack_to_install_1 }},{{ pack_to_install_2 }} repo_url={{ base_repo_url }}/{{ install_from_repo }}"
        on-success: test_check_pack_to_install_1_installed
        on-failure: error_handler
    -
        name: test_check_pack_to_install_1_installed
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 action list -j --pack {{ pack_to_install_1 }} | grep '{{ pack_to_install_1 }}'"
        on-success: test_check_pack_to_install_2_installed
        on-failure: error_handler
    -
        name: test_check_pack_to_install_2_installed
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 action list -j --pack {{ pack_to_install_2 }} | grep '{{ pack_to_install_2 }}'"
        on-success: test_packs_uninstall_multiple_packs
        on-failure: error_handler
    -
        name: test_packs_uninstall_multiple_packs
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 run packs.uninstall packs={{ pack_to_install_1 }},{{ pack_to_install_2 }}"
        on-success: test_check_pack_to_install_1_uninstalled
        on-failure: error_handler
    -
        name: test_check_pack_to_install_1_uninstalled
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 action list --pack {{ pack_to_install_1 }} | grep 'No matching items found'"
        on-success: test_check_pack_to_install_2_uninstalled
        on-failure: error_handler
    -
        name: test_check_pack_to_install_2_uninstalled
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 action list --pack {{ pack_to_install_2 }} | grep 'No matching items found'"
        on-success: test_packs_download
        on-failure: error_handler
    -
        name: test_packs_download
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 run packs.download packs={{ pack_to_install_1 }}"
        on-success: test_packs_setup_virtualenv
        on-failure: error_handler
    -
        name: test_packs_setup_virtualenv
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 run packs.setup_virtualenv packs={{ pack_to_install_1 }} | grep 'Successfuly set up'"
        on-success: test_packs_load_register_all
        on-failure: error_handler
    -
        name: test_packs_load_register_all
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "st2 run packs.load register=all | grep -c 'Registered' | grep 6"
        on-success: success_handler
        on-failure: error_handler
    -
        name: success_handler
        ref: core.local
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "echo packs pack test succeed; exit 0"
    -
        name: error_handler
        description: Error handler
        ref: "core.local"
        params:
            env:
              ST2_AUTH_TOKEN: "{{token}}"
            cmd: "echo packs pack test failed; exit 1"
